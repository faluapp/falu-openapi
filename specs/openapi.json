{
  "openapi": "3.0.1",
  "info": {
    "title": "Falu API Reference",
    "description": "The Falu REST API. For more information, check https://docs.falu.io/api-reference",
    "termsOfService": "https://falu.io/legal/terms",
    "contact": {
      "name": "API Support",
      "url": "https://falu.io/support",
      "email": "support@falu.io"
    },
    "license": {
      "name": "Falu API",
      "url": "https://falu.io/legal/terms"
    },
    "version": "2024-06-01"
  },
  "servers": [
    {
      "url": "https://api.falu.io"
    }
  ],
  "paths": {
    "/v1/billing/coupons": {
      "get": {
        "tags": [
          "Coupons"
        ],
        "summary": "List coupons",
        "operationId": "coupons-list",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CouponType"
              }
            }
          },
          {
            "name": "frequency",
            "in": "query",
            "description": "Filter options for `frequency` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CouponFrequency"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Coupons"
        ],
        "summary": "Create a coupon",
        "operationId": "coupons-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CouponCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "product_not_found"
        ]
      }
    },
    "/v1/billing/coupons/{id}": {
      "get": {
        "tags": [
          "Coupons"
        ],
        "summary": "Retrieve a coupon",
        "operationId": "coupons-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the coupon",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Coupons"
        ],
        "summary": "Update a coupon",
        "operationId": "coupons-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the coupon",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CouponUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CouponUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "coupon_not_found"
        ]
      },
      "delete": {
        "tags": [
          "Coupons"
        ],
        "summary": "Delete a coupon",
        "operationId": "coupons-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the coupon",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "coupon_not_found",
          "coupon_cannot_be_modified"
        ]
      }
    },
    "/v1/billing/credit_notes": {
      "get": {
        "tags": [
          "Credit Notes"
        ],
        "summary": "List credit notes",
        "operationId": "credit-notes-list",
        "parameters": [
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "invoice",
            "in": "query",
            "description": "Filter options for `invoice` property.",
            "schema": {
              "type": "string",
              "example": "inv_602a8dd0a54847479a874de4"
            },
            "example": "inv_602a8dd0a54847479a874de4"
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Filter options for `reason` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreditNoteReason"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreditNoteStatus"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditNote"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Credit Notes"
        ],
        "summary": "Create a credit note",
        "operationId": "credit-notes-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditNoteCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_not_found",
          "invoice_invalid_data",
          "invoice_item_not_found",
          "credit_note_invalid_data"
        ]
      }
    },
    "/v1/billing/credit_notes/{id}": {
      "get": {
        "tags": [
          "Credit Notes"
        ],
        "summary": "Retrieve a credit note",
        "operationId": "credit-notes-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the credit note",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Credit Notes"
        ],
        "summary": "Update a credit note",
        "operationId": "credit-notes-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the credit note",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditNoteUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditNoteUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "credit_note_not_found"
        ]
      }
    },
    "/v1/billing/credit_notes/{id}/void": {
      "post": {
        "tags": [
          "Credit Notes"
        ],
        "summary": "Void a credit note",
        "operationId": "credit-notes-void",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the credit note",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_invalid_data",
          "credit_note_invalid_data",
          "credit_note_not_found"
        ]
      }
    },
    "/v1/billing/customer_tax_ids": {
      "get": {
        "tags": [
          "Customer Tax Ids"
        ],
        "summary": "List customer tax ids",
        "operationId": "customer-tax-ids-list",
        "parameters": [
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomerTaxIdType"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomerTaxIdVerificationStatus"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerTaxId"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Customer Tax Ids"
        ],
        "summary": "Create a customer tax id",
        "operationId": "customer-tax-ids-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerTaxIdCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerTaxId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "customer_not_found"
        ]
      }
    },
    "/v1/billing/customer_tax_ids/{id}": {
      "get": {
        "tags": [
          "Customer Tax Ids"
        ],
        "summary": "Retrieve a customer tax id",
        "operationId": "customer-tax-ids-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the coupon",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerTaxId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Tax Ids"
        ],
        "summary": "Delete a customer tax id",
        "operationId": "customer-tax-ids-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the customer tax id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "customer_tax_id_not_found",
          "customer_tax_id_cannot_be_modified"
        ]
      }
    },
    "/v1/billing/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List customers",
        "operationId": "customers-list",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Filter options for `email` property.",
            "schema": {
              "type": "string",
              "format": "email",
              "example": "user@example.com"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Filter options for `phone` property.",
            "schema": {
              "type": "string",
              "format": "tel",
              "example": "+254722000000"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Filter options for `timezone` property.",
            "schema": {
              "type": "string",
              "format": "timezone",
              "example": "Africa/Nairobi"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomerType"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a customer",
        "operationId": "customers-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_method_not_found",
          "coupon_not_found",
          "coupon_not_active",
          "coupon_expired"
        ]
      }
    },
    "/v1/billing/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve a customer",
        "operationId": "customers-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a customer",
        "operationId": "customers-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "customer_not_found",
          "payment_method_not_found",
          "customer_invalid_data",
          "coupon_not_found",
          "coupon_not_active",
          "coupon_expired",
          "coupon_already_applied"
        ]
      }
    },
    "/v1/billing/customers/{id}/redact": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Redact a customer",
        "description": "Redact a customer to remove all collected information from Falu.\nThis will redact the Customer and all objects related to it,\nincluding Events, request logs, etc.\n\nThe redaction process may take up a week. When the redaction process is in progress,\nthe Customer's `redaction.status` field will be set to `processing`;\nwhen the process is finished, it will change to `redacted` and a\n`customer.redacted` event will be emitted.\n\nRedaction is irreversible. Redacted objects are still accessible in the API,\nbut all the fields that contain personal data will be replaced by the string\n`[redacted]` or a similar placeholder. The metadata field will also be erased.\nRedacted objects cannot be updated or used for any purpose.",
        "operationId": "customers-redact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "customer_not_found",
          "object_cannot_be_redacted",
          "object_redaction_in_progress"
        ]
      }
    },
    "/v1/billing/customers/balances/transactions": {
      "get": {
        "tags": [
          "Customer Balance Transactions"
        ],
        "summary": "List customer balance transactions",
        "operationId": "customer-balance-transactions-list",
        "parameters": [
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerBalanceTransaction"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Customer Balance Transactions"
        ],
        "summary": "Create a customer balance transaction",
        "operationId": "customer-balance-transactions-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerBalanceTransactionCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalanceTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "customer_not_found"
        ]
      }
    },
    "/v1/billing/customers/balances/transactions/{id}": {
      "get": {
        "tags": [
          "Customer Balance Transactions"
        ],
        "summary": "Retrieve a customer balance transaction",
        "operationId": "customer-balance-transactions-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the customer balance transaction",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalanceTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer Balance Transactions"
        ],
        "summary": "Update a customer balance transaction",
        "operationId": "customer-balance-transactions-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the customer balance transaction",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerBalanceTransactionUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerBalanceTransactionUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalanceTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "customer_balance_transaction_not_found"
        ]
      }
    },
    "/v1/billing/discounts": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "List discounts",
        "operationId": "discounts-list",
        "parameters": [
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "Filter options for `subscription` property.",
            "schema": {
              "type": "string",
              "example": "sub_602a8dd0a54847479a874de4"
            },
            "example": "sub_602a8dd0a54847479a874de4"
          },
          {
            "name": "invoice",
            "in": "query",
            "description": "Filter options for `invoice` property.",
            "schema": {
              "type": "string",
              "example": "inv_602a8dd0a54847479a874de4"
            },
            "example": "inv_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/billing/discounts/{id}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Retrieve a discount",
        "operationId": "discounts-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the discount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/billing/invoice_items": {
      "get": {
        "tags": [
          "Invoice Items"
        ],
        "summary": "List invoice items",
        "operationId": "invoice-items-list",
        "parameters": [
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "invoice",
            "in": "query",
            "description": "Filter options for `invoice` property.",
            "schema": {
              "type": "string",
              "example": "inv_602a8dd0a54847479a874de4"
            },
            "example": "inv_602a8dd0a54847479a874de4"
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "Filter options for `subscription` property.",
            "schema": {
              "type": "string",
              "example": "sub_602a8dd0a54847479a874de4"
            },
            "example": "sub_602a8dd0a54847479a874de4"
          },
          {
            "name": "subscription_item",
            "in": "query",
            "description": "Filter options for `subscription_item` property.",
            "schema": {
              "type": "string",
              "example": "subi_602a8dd0a54847479a874de4"
            },
            "example": "subi_602a8dd0a54847479a874de4"
          },
          {
            "name": "product",
            "in": "query",
            "description": "Filter options for `product` property.",
            "schema": {
              "type": "string",
              "example": "prod_602a8dd0a54847479a874de4"
            },
            "example": "prod_602a8dd0a54847479a874de4"
          },
          {
            "name": "price",
            "in": "query",
            "description": "Filter options for `price` property.",
            "schema": {
              "type": "string",
              "example": "price_602a8dd0a54847479a874de4"
            },
            "example": "price_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceItem"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/billing/invoice_items/{id}": {
      "get": {
        "tags": [
          "Invoice Items"
        ],
        "summary": "Retrieve an invoice item",
        "operationId": "invoice-items-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the invoice item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Invoice Items"
        ],
        "summary": "Update an invoice item",
        "operationId": "invoice-items-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the invoice item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceItemUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceItemUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_item_not_found"
        ]
      }
    },
    "/v1/billing/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "List invoices",
        "operationId": "invoices-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "Filter options for `subscription` property.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/billing/invoices/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieve an invoice",
        "operationId": "invoices-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the invoice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update an invoice",
        "operationId": "invoices-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the invoice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_not_found",
          "invoice_invalid_data"
        ]
      }
    },
    "/v1/billing/invoices/{id}/finalize": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Finalize an invoice",
        "operationId": "invoices-finalize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the invoice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_not_found",
          "invoice_invalid_data"
        ]
      }
    },
    "/v1/billing/invoices/{id}/pay": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Pay an invoice.",
        "operationId": "invoices-pay",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the invoice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoicePayOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_not_found",
          "invoice_invalid_data"
        ]
      }
    },
    "/v1/billing/invoices/{id}/void": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Void an invoice",
        "operationId": "invoices-void",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the invoice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_not_found",
          "invoice_invalid_data"
        ]
      }
    },
    "/v1/billing/invoices/{id}/write_off": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Write off an invoice as a bad debt for accounting purposes.",
        "operationId": "invoices-write-off",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the invoice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invoice_not_found",
          "invoice_invalid_data"
        ]
      }
    },
    "/v1/billing/invoices/upcoming": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieve an upcoming invoice",
        "operationId": "invoices-generate-upcoming",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "Options for retrieving an upcoming invoice.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpcomingInvoiceOptions"
                  }
                ],
                "description": "Options for upcoming invoices."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "subscription_not_found",
          "invoice_invalid_data"
        ]
      }
    },
    "/v1/billing/payment_methods": {
      "get": {
        "tags": [
          "Payment Methods"
        ],
        "summary": "List payment methods",
        "operationId": "payment-methods-list",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentMethodType"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Payment Methods"
        ],
        "summary": "Create a payment method",
        "operationId": "payment-methods-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentMethodCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "invalid_settings",
          "insufficient_balance"
        ]
      }
    },
    "/v1/billing/payment_methods/{id}": {
      "get": {
        "tags": [
          "Payment Methods"
        ],
        "summary": "Retrieve a payment method",
        "operationId": "payment-methods-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment method",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Payment Methods"
        ],
        "summary": "Update a payment method",
        "operationId": "payment-methods-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment method",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentMethodUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment method."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentMethodUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment method."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_method_not_found"
        ]
      }
    },
    "/v1/billing/payment_methods/{id}/attach": {
      "post": {
        "tags": [
          "Payment Methods"
        ],
        "summary": "Attach a payment method to a customer",
        "operationId": "payment-methods-attach",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the payment method",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentMethodAttachOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_method_not_found",
          "customer_not_found",
          "object_redacted",
          "payment_method_cannot_be_modified"
        ]
      }
    },
    "/v1/billing/payment_methods/{id}/detach": {
      "post": {
        "tags": [
          "Payment Methods"
        ],
        "summary": "Detach a payment method from a customer",
        "operationId": "payment-methods-detach",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the payment method",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_method_not_found",
          "payment_method_cannot_be_modified",
          "object_redacted"
        ]
      }
    },
    "/v1/billing/prices": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "List prices",
        "operationId": "prices-list",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Filter options for `active` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PriceType"
              }
            }
          },
          {
            "name": "recurring_interval",
            "in": "query",
            "description": "Filter options for `recurring.interval` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PriceRecurringInterval"
              }
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Filter options for `product` property.",
            "schema": {
              "type": "string",
              "example": "prod_602a8dd0a54847479a874de4"
            },
            "example": "prod_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Price"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Create a price",
        "operationId": "prices-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PriceCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "product_not_found"
        ]
      }
    },
    "/v1/billing/prices/{id}": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Retrieve a price",
        "operationId": "prices-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the price",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Prices"
        ],
        "summary": "Update a price",
        "operationId": "prices-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the price",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PriceUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PriceUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "price_not_found"
        ]
      },
      "delete": {
        "tags": [
          "Prices"
        ],
        "summary": "Delete a price",
        "operationId": "prices-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the price",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "price_not_found",
          "price_cannot_be_modified"
        ]
      }
    },
    "/v1/billing/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List products",
        "operationId": "products-list",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Filter options for `active` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product",
        "operationId": "products-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProductCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/billing/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve a product",
        "operationId": "products-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product",
        "operationId": "products-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProductUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProductUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "product_not_found"
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "operationId": "products-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "product_not_found",
          "product_cannot_be_modified"
        ]
      }
    },
    "/v1/billing/subscription_items": {
      "get": {
        "tags": [
          "Subscription Items"
        ],
        "summary": "List subscription items",
        "operationId": "subscription-items-list",
        "parameters": [
          {
            "name": "subscription",
            "in": "query",
            "description": "Filter options for `subscription` property.",
            "schema": {
              "type": "string",
              "example": "sub_602a8dd0a54847479a874de4"
            },
            "example": "sub_602a8dd0a54847479a874de4"
          },
          {
            "name": "product",
            "in": "query",
            "description": "Filter options for `product` property.",
            "schema": {
              "type": "string",
              "example": "prod_602a8dd0a54847479a874de4"
            },
            "example": "prod_602a8dd0a54847479a874de4"
          },
          {
            "name": "price",
            "in": "query",
            "description": "Filter options for `price` property.",
            "schema": {
              "type": "string",
              "example": "price_602a8dd0a54847479a874de4"
            },
            "example": "price_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionItem"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Subscription Items"
        ],
        "summary": "Create a subscription item",
        "operationId": "subscription-items-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionItemCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "price_not_found",
          "price_not_active",
          "product_not_active",
          "subscription_invalid_data",
          "subscription_cannot_be_modified",
          "tax_rate_not_found",
          "tax_rate_not_active"
        ]
      }
    },
    "/v1/billing/subscription_items/{id}": {
      "get": {
        "tags": [
          "Subscription Items"
        ],
        "summary": "Retrieve a subscription item",
        "operationId": "subscription-items-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the subscription item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Subscription Items"
        ],
        "summary": "Update a subscription item",
        "operationId": "subscription-items-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the subscription item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionItemUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionItemUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "subscription_item_not_found",
          "subscription_item_cannot_be_modified",
          "price_not_found",
          "price_not_active",
          "product_not_active",
          "subscription_invalid_data",
          "tax_rate_not_found",
          "tax_rate_not_active"
        ]
      }
    },
    "/v1/billing/subscription_items/{id}/usage": {
      "get": {
        "tags": [
          "Subscription Usage"
        ],
        "summary": "List usages for a subscription item",
        "operationId": "subscription-usage-list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the subscription item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionItemUsage"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "subscription_item_not_found"
        ]
      },
      "post": {
        "tags": [
          "Subscription Usage"
        ],
        "summary": "Report usage for a subscription item",
        "description": "If the report usage results in the quantity being zero and a subscription item\nusage already exists for that time bucket, it will be deleted. If none exists\nfor that time bucket a new record won't be created either.",
        "operationId": "subscription-usage-report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the subscription item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionItemReportUsageOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemUsage"
                }
              }
            }
          },
          "204": {
            "description": "The record for the time bucket has been deleted.",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "subscription_item_not_found",
          "subscription_invalid_data",
          "subscription_item_not_usage_based",
          "subscription_item_edit_locked",
          "subscription_item_usage_out_of_period"
        ]
      }
    },
    "/v1/billing/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "List subscriptions",
        "operationId": "subscriptions-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubscriptionStatus"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create a subscription",
        "operationId": "subscriptions-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "object_redacted",
          "customer_not_found",
          "price_not_found",
          "price_not_active",
          "product_not_active",
          "coupon_not_found",
          "coupon_not_active",
          "coupon_expired",
          "coupon_already_applied",
          "subscription_invalid_data",
          "tax_rate_not_found",
          "tax_rate_not_active",
          "payment_method_not_found"
        ]
      }
    },
    "/v1/billing/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Retrieve a subscription",
        "operationId": "subscriptions-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the subscription",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update a subscription",
        "operationId": "subscriptions-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the subscription",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "subscription_not_found",
          "subscription_cannot_be_modified",
          "coupon_not_found",
          "coupon_not_active",
          "coupon_expired",
          "coupon_already_applied",
          "subscription_invalid_data",
          "tax_rate_not_found",
          "tax_rate_not_active",
          "payment_method_not_found"
        ]
      }
    },
    "/v1/billing/subscriptions/{id}/cancel": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Cancel a subscription",
        "description": "A subscription can be cancelled when it is in `active` or `in_trial` status.\nOnce cancelled, future submission attempts are disabled. This cannot be undone. A final\ninvoice will be generated for any un-invoiced metered usage and new/pending proration invoice items.\n[Learn more.](/subscriptions#cancel)",
        "operationId": "subscriptions-cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the subscription",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionCancelOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "subscription_not_found",
          "subscription_cannot_be_cancelled"
        ]
      }
    },
    "/v1/billing/tax_rates": {
      "get": {
        "tags": [
          "Tax Rates"
        ],
        "summary": "List tax rates",
        "operationId": "tax-rates-list",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Filter options for `active` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inclusive",
            "in": "query",
            "description": "Filter options for `inclusive` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxRate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Tax Rates"
        ],
        "summary": "Create a tax rate",
        "operationId": "tax-rates-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaxRateCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/billing/tax_rates/{id}": {
      "get": {
        "tags": [
          "Tax Rates"
        ],
        "summary": "Retrieve a tax rate",
        "operationId": "tax-rates-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the tax rate",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Tax Rates"
        ],
        "summary": "Update a tax rate",
        "operationId": "tax-rates-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the tax rate",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaxRateUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaxRateUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "tax_rate_not_found"
        ]
      },
      "delete": {
        "tags": [
          "Tax Rates"
        ],
        "summary": "Delete a tax rate",
        "operationId": "tax-rates-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the tax rate",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "tax_rate_not_found",
          "tax_rate_cannot_be_modified"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "List events",
        "operationId": "events-list",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          {
            "name": "object",
            "in": "query",
            "description": "The unique identifier of the object for which to get events.",
            "schema": {
              "type": "string",
              "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            },
            "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackedEvent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve an event",
        "operationId": "events-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the event",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackedEvent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/events/{id}/redact": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Redact an event.",
        "description": "Redact an event to remove all collected information from Falu.\nThis will redact the Event its webhooks\n\nRedacting an event is also done when related objects such as identity verifications are redacted.\nAs such, you do not need to redact each event created in the process.\nRedacting an event is useful if the object that created it no longer exists.\n\nRedacting an event is instant and does not emit any other event. Redacted events cannot be delivered.\n\nRedaction is irreversible. Redacted objects are still accessible in the API,\nbut all the fields that contain personal data will be replaced by the string\n`[redacted]` or a similar placeholder. The metadata field will also be erased.\nRedacted objects cannot be updated or used for any purpose.",
        "operationId": "events-redact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the event",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackedEvent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "event_not_found"
        ]
      }
    },
    "/v1/file_links": {
      "get": {
        "tags": [
          "File Links"
        ],
        "summary": "List file links",
        "operationId": "file-links-list",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "Unique identifier of the file.",
            "schema": {
              "type": "string",
              "example": "file_602a8dd0a54847479a874de4"
            },
            "example": "file_602a8dd0a54847479a874de4"
          },
          {
            "name": "expired",
            "in": "query",
            "description": "Filter options for `expired` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileLink"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "File Links"
        ],
        "summary": "Create a file link",
        "operationId": "file-links-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileLinkCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileLink"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "file_not_found",
          "file_expired",
          "object_redacted",
          "file_cannot_be_downloaded"
        ]
      }
    },
    "/v1/file_links/{id}": {
      "get": {
        "tags": [
          "File Links"
        ],
        "summary": "Retrieve a file link",
        "operationId": "file-links-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the file link",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileLink"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "File Links"
        ],
        "summary": "Update a file link",
        "operationId": "file-links-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the file link",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileLinkUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a file link."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileLinkUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a file link."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileLink"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "file_link_not_found",
          "file_link_cannot_be_updated"
        ]
      }
    },
    "/v1/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List files",
        "operationId": "files-list",
        "parameters": [
          {
            "name": "purpose",
            "in": "query",
            "description": "Filter options for `purpose` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilePurpose"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload a file",
        "operationId": "files-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "Contents of the file.\nIt should follow the specifications of [RFC 2388](https://datatracker.ietf.org/doc/html/rfc2388).",
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "purpose"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Contents of the file.\nIt should follow the specifications of [RFC 2388](https://datatracker.ietf.org/doc/html/rfc2388).",
                    "format": "binary"
                  },
                  "purpose": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FilePurpose"
                      }
                    ],
                    "description": "Purpose of the file."
                  },
                  "description": {
                    "type": "string"
                  },
                  "expires": {
                    "type": "string",
                    "description": "Time at which the file expires.",
                    "format": "date-time"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "purpose": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                },
                "expires": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "file_type_not_allowed",
          "file_invalid"
        ]
      }
    },
    "/v1/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Retrieve a file",
        "operationId": "files-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/files/{id}/contents": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Download a file",
        "operationId": "files-download",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "The contents of the file are in the response.",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "206": {
            "description": "The partial contents of the file are in the response.",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "description": "The file has already expired or has been redacted and has been purged.",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          }
        },
        "x-error-codes": [
          "file_not_found",
          "file_expired",
          "object_redacted",
          "file_cannot_be_downloaded"
        ]
      }
    },
    "/v1/files/{id}/redact": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Redact the contents of a file.",
        "description": "Redact a file to remove all collected information from Falu.\nThis will redact the File and all objects related to it,\nincluding Events, request logs, etc.\n\nRedacting a file is also done when related objects such as identity verifications are redacted.\nAs such, you do not need to redact each file created in the process.\nRedacting a file is useful if you uploaded a file that you have not used and have\nno intention of doing so, such as one that was uploaded by mistake.\n\nWhen the redaction process completes a `file.redacted` event will be emitted.\n\nRedaction is irreversible. Redacted objects are still accessible in the API,\nbut all the fields that contain personal data will be replaced by the string\n`[redacted]` or a similar placeholder. The metadata field will also be erased.\nRedacted objects cannot be updated or used for any purpose.",
        "operationId": "files-redact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "file_not_found"
        ]
      }
    },
    "/v1/identity/verification_reports": {
      "get": {
        "tags": [
          "Identity Verification Reports"
        ],
        "summary": "List identity verification reports",
        "operationId": "identity-verification-reports-list",
        "parameters": [
          {
            "name": "verification",
            "in": "query",
            "description": "Unique identifier of the Identity Verification to filter for.",
            "schema": {
              "type": "string",
              "example": "idv_602a8dd0a54847479a874de4"
            },
            "example": "idv_602a8dd0a54847479a874de4"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityVerificationReport"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/identity/verification_reports/{id}": {
      "get": {
        "tags": [
          "Identity Verification Reports"
        ],
        "summary": "Retrieve an identity verification report",
        "operationId": "identity-verification-reports-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the identity verification report",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerificationReport"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/identity/verifications": {
      "get": {
        "tags": [
          "Identity Verifications"
        ],
        "summary": "List identity verifications",
        "operationId": "identity-verifications-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IdentityVerificationStatus"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IdentityVerificationType"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityVerification"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Identity Verifications"
        ],
        "summary": "Create an identity verification",
        "operationId": "identity-verifications-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IdentityVerificationCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "features_disabled"
        ]
      }
    },
    "/v1/identity/verifications/{id}": {
      "get": {
        "tags": [
          "Identity Verifications"
        ],
        "summary": "Retrieve an identity verification",
        "operationId": "identity-verifications-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the identity verification",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Identity Verifications"
        ],
        "summary": "Update an identity verification",
        "operationId": "identity-verifications-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the identity verification",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IdentityVerificationUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IdentityVerificationUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "identity_verification_not_found",
          "identity_verification_cannot_be_modified",
          "object_redacted"
        ]
      }
    },
    "/v1/identity/verifications/{id}/cancel": {
      "post": {
        "tags": [
          "Identity Verifications"
        ],
        "summary": "Cancel an identity verification",
        "description": "An identity verification can be cancelled when it is in `input_required` status.\nOnce cancelled, future submission attempts are disabled. This cannot be undone.\n[Learn more.](/identity/verifications#cancel)",
        "operationId": "identity-verifications-cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the identity verification",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "identity_verification_not_found",
          "identity_verification_cannot_be_cancelled"
        ]
      }
    },
    "/v1/identity/verifications/{id}/redact": {
      "post": {
        "tags": [
          "Identity Verifications"
        ],
        "summary": "Redact an identity verification",
        "description": "Redact an identity verification to remove all collected information from Falu.\nThis will redact the IdentityVerification and all objects related to it,\nincluding IdentityVerificationReports, Events, request logs, etc.\nAn identity verification can be redacted when it is in `input_required` or `verified` status.\nRedacting an identity verification in `input_required` state will automatically cancel it.\n\nThe redaction process may take up a week. When the redaction process is in progress,\nthe IdentityVerification's `redaction.status` field will be set to `processing`;\nwhen the process is finished, it will change to `redacted` and an\n`identity_verification.redacted` event will be emitted.\n\nRedaction is irreversible. Redacted objects are still accessible in the API,\nbut all the fields that contain personal data will be replaced by the string\n`[redacted]` or a similar placeholder. The metadata field will also be erased.\nRedacted objects cannot be updated or used for any purpose.",
        "operationId": "identity-verifications-redact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the identity verification",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "identity_verification_not_found",
          "object_cannot_be_redacted",
          "object_redaction_in_progress"
        ]
      }
    },
    "/v1/message_batches": {
      "get": {
        "tags": [
          "Message Batches"
        ],
        "summary": "List message batches",
        "operationId": "message-batches-list",
        "parameters": [
          {
            "name": "stream",
            "in": "query",
            "description": "Stream to filter for.\nIt can either be the name or unique identifier of the stream.",
            "schema": {
              "type": "string",
              "example": "transactional"
            },
            "example": "transactional"
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Unique identifier of the sender to filter for.",
            "schema": {
              "type": "string",
              "example": "msdr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            },
            "example": "msdr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageBatch"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ],
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Message Batches"
        ],
        "summary": "Create a message batch",
        "description": "You can send up to 1,000 messages in one API request.",
        "operationId": "message-batches-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageBatchCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found",
          "message_stream_archived",
          "message_template_not_found",
          "message_media_invalid",
          "messages_suppressions_flagged",
          "messages_limit_exceeded",
          "file_not_found",
          "file_invalid",
          "file_expired",
          "object_redacted"
        ]
      }
    },
    "/v1/message_batches/{id}": {
      "get": {
        "tags": [
          "Message Batches"
        ],
        "summary": "Retrieve a message batch",
        "operationId": "message-batches-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Message Batches"
        ],
        "summary": "Update a message batch",
        "operationId": "message-batches-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageBatchUpdateOptions"
                  }
                ],
                "description": "Represents the details about a message batch that can be patched."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageBatchUpdateOptions"
                  }
                ],
                "description": "Represents the details about a message batch that can be patched."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_batch_not_found",
          "object_redacted"
        ]
      }
    },
    "/v1/message_batches/{id}/cancel": {
      "post": {
        "tags": [
          "Message Batches"
        ],
        "summary": "Cancel a message batch",
        "description": "A message batch can be cancelled when all its messages are in `accepted` status.",
        "operationId": "message-batches-cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_batch_not_found",
          "message_batch_cannot_be_cancelled"
        ]
      }
    },
    "/v1/message_batches/{id}/redact": {
      "post": {
        "tags": [
          "Message Batches"
        ],
        "summary": "Redact a message batch",
        "description": "Redact a message batch to remove all collected information from Falu.\nThis will redact the Message Batch, its Messages and all objects related to it,\nincluding Events, request logs, etc.\nA message batch can be redacted when its messages are not in `sending` status.\nRedacting a message batch when all its messages are in `accepted` state will\nautomatically cancel it and its messages.\n\nThe redaction process may take up a week. When the redaction process is in progress,\nthe MessageBatch's `redaction.status` field will be set to `processing`;\nwhen the process is finished, it will change to `redacted` and a\n`message_batch.redacted` event will be emitted.\n\nRedaction is irreversible. Redacted objects are still accessible in the API,\nbut all the fields that contain personal data will be replaced by the string\n`[redacted]` or a similar placeholder. The metadata field will also be erased.\nRedacted objects cannot be updated or used for any purpose.",
        "operationId": "message-batches-redact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_batch_not_found",
          "object_cannot_be_redacted",
          "object_redaction_in_progress"
        ]
      }
    },
    "/v1/message_batches/{id}/status": {
      "get": {
        "tags": [
          "Message Batches"
        ],
        "summary": "Retrieve the status of a message batch",
        "operationId": "message-batches-status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatchStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_batch_not_found"
        ]
      }
    },
    "/v1/message_senders": {
      "get": {
        "tags": [
          "Message Senders"
        ],
        "summary": "List message senders",
        "operationId": "message-senders-list",
        "parameters": [
          {
            "name": "stream",
            "in": "query",
            "description": "Stream to filter for.\nIt can either be the name or unique identifier of the stream.",
            "schema": {
              "type": "string",
              "example": "transactional"
            },
            "example": "transactional"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageSenderType"
              }
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Filter options for `channel` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageChannelType"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageSenderStatus"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSender"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ],
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Message Senders"
        ],
        "summary": "Create a message sender",
        "operationId": "message-senders-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageSenderCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSender"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found",
          "message_sender_alphanumeric_in_use"
        ]
      }
    },
    "/v1/message_senders/{id}": {
      "get": {
        "tags": [
          "Message Senders"
        ],
        "summary": "Retrieve a message sender",
        "operationId": "message-senders-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSender"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Message Senders"
        ],
        "summary": "Update a message sender",
        "operationId": "message-senders-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageSenderUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageSenderUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSender"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_sender_not_found"
        ]
      },
      "delete": {
        "tags": [
          "Message Senders"
        ],
        "summary": "Delete a message sender",
        "operationId": "message-senders-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_sender_not_found",
          "message_sender_cannot_be_modified"
        ]
      }
    },
    "/v1/message_streams": {
      "get": {
        "tags": [
          "Message Streams"
        ],
        "summary": "List message streams",
        "operationId": "message-streams-list",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageStreamType"
              }
            }
          },
          {
            "name": "default",
            "in": "query",
            "description": "Filter options for `default` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageStream"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Message Streams"
        ],
        "summary": "Create a message stream",
        "operationId": "message-streams-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageStreamCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_name_in_use"
        ]
      }
    },
    "/v1/message_streams/{id}": {
      "get": {
        "tags": [
          "Message Streams"
        ],
        "summary": "Retrieve a message stream",
        "operationId": "message-streams-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message stream",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Message Streams"
        ],
        "summary": "Update a message stream",
        "operationId": "message-streams-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message stream",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageStreamUpdateOptions"
                  }
                ],
                "description": "Represents the details about a message stream that can be patched."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageStreamUpdateOptions"
                  }
                ],
                "description": "Represents the details about a message stream that can be patched."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found",
          "message_stream_cannot_be_modified"
        ]
      },
      "delete": {
        "tags": [
          "Message Streams"
        ],
        "summary": "Delete a message stream",
        "operationId": "message-streams-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message stream",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found",
          "message_stream_cannot_be_modified"
        ]
      }
    },
    "/v1/message_streams/{id}/archive": {
      "post": {
        "tags": [
          "Message Streams"
        ],
        "summary": "Archive a message stream",
        "operationId": "message-streams-archive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message stream",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ]
      }
    },
    "/v1/message_streams/{id}/unarchive": {
      "post": {
        "tags": [
          "Message Streams"
        ],
        "summary": "Unarchive a message stream",
        "operationId": "message-streams-unarchive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message stream",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ]
      }
    },
    "/v1/message_suppressions": {
      "get": {
        "tags": [
          "Message Suppressions"
        ],
        "summary": "List message suppressions",
        "operationId": "message-suppressions-list",
        "parameters": [
          {
            "name": "stream",
            "in": "query",
            "description": "Stream to filter for.\nIt can either be the name or unique identifier of the stream.",
            "schema": {
              "type": "string",
              "example": "transactional"
            },
            "example": "transactional"
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Filter options for `origin` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageSuppressionOrigin"
              }
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Filter options for `reason` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageSuppressionReason"
              }
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter options for `to` property.",
            "schema": {
              "type": "string",
              "format": "tel",
              "example": "+254722000000",
              "x-pii": true
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSuppression"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ],
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Message Suppressions"
        ],
        "summary": "Create a message suppression",
        "operationId": "message-suppressions-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageSuppressionCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSuppression"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ]
      }
    },
    "/v1/message_suppressions/{id}": {
      "get": {
        "tags": [
          "Message Suppressions"
        ],
        "summary": "Retrieve a message suppression",
        "operationId": "message-suppressions-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message suppression",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSuppression"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "delete": {
        "tags": [
          "Message Suppressions"
        ],
        "summary": "Delete a message suppression",
        "description": "Deleting a suppression allows you to resume sending messages to the given\ndestination. Suppressions with `spam_complaint` reason cannot be deleted.",
        "operationId": "message-suppressions-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message suppression",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_suppression_not_found",
          "message_suppression_cannot_be_modified"
        ]
      }
    },
    "/v1/message_templates": {
      "get": {
        "tags": [
          "Message Templates"
        ],
        "summary": "List message templates",
        "operationId": "message-templates-list",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageTemplateType"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Message Templates"
        ],
        "summary": "Create a message template",
        "operationId": "message-templates-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageTemplateCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_template_content_is_invalid",
          "message_template_alias_in_use"
        ]
      }
    },
    "/v1/message_templates/{id}": {
      "get": {
        "tags": [
          "Message Templates"
        ],
        "summary": "Retrieve a message template",
        "operationId": "message-templates-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Message Templates"
        ],
        "summary": "Update a message template",
        "operationId": "message-templates-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageTemplateUpdateOptions"
                  }
                ],
                "description": "Represents the details about a template that can be patched."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageTemplateUpdateOptions"
                  }
                ],
                "description": "Represents the details about a template that can be patched."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_template_not_found",
          "message_template_content_is_invalid",
          "message_template_alias_in_use"
        ]
      },
      "delete": {
        "tags": [
          "Message Templates"
        ],
        "summary": "Delete a message template",
        "operationId": "message-templates-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_template_not_found"
        ]
      }
    },
    "/v1/message_templates/validate": {
      "post": {
        "tags": [
          "Message Templates"
        ],
        "summary": "Validate a message template",
        "operationId": "message-templates-validate",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageTemplateValidateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateValidateResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_template_content_is_invalid"
        ]
      }
    },
    "/v1/messages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "List messages",
        "operationId": "messages-list",
        "parameters": [
          {
            "name": "stream",
            "in": "query",
            "description": "Stream to filter for.\nIt can either be the name or unique identifier of the stream.",
            "schema": {
              "type": "string",
              "example": "transactional"
            },
            "example": "transactional"
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Unique identifier of the sender to filter for.",
            "schema": {
              "type": "string",
              "example": "msdr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            },
            "example": "msdr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          {
            "name": "batch",
            "in": "query",
            "description": "Unique identifier of the batch to filter for.",
            "schema": {
              "type": "string",
              "example": "msba_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            },
            "example": "msba_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          {
            "name": "sent.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sent.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sent.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sent.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sent.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "read.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "read.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "read.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "read.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "read.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageStatus"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter options for `from` property.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter options for `to` property.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found"
        ],
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Create a message",
        "operationId": "messages-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_stream_not_found",
          "message_stream_archived",
          "message_template_not_found",
          "message_media_invalid",
          "messages_suppressions_flagged",
          "file_not_found",
          "file_invalid",
          "file_expired",
          "object_redacted"
        ]
      }
    },
    "/v1/messages/{id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Retrieve a message",
        "operationId": "messages-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Messages"
        ],
        "summary": "Update a message",
        "operationId": "messages-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageUpdateOptions"
                  }
                ],
                "description": "Represents the details about a message that can be patched."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageUpdateOptions"
                  }
                ],
                "description": "Represents the details about a message that can be patched."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_not_found",
          "object_redacted"
        ]
      }
    },
    "/v1/messages/{id}/cancel": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Cancel a message",
        "description": "A message can be cancelled when it is in `accepted` status.",
        "operationId": "messages-cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_not_found",
          "message_cannot_be_cancelled"
        ]
      }
    },
    "/v1/messages/{id}/redact": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Redact a message",
        "description": "Redact a message to remove all collected information from Falu.\nThis will redact the Message and all objects related to it,\nincluding Events, request logs, etc.\nA message can be redacted when it is not in `sending` status.\nRedacting a message in `accepted` state will automatically cancel it.\n\nThe redaction process may take up a week. When the redaction process is in progress,\nthe Message's `redaction.status` field will be set to `processing`;\nwhen the process is finished, it will change to `redacted` and a\n`message.redacted` event will be emitted.\n\nRedaction is irreversible. Redacted objects are still accessible in the API,\nbut all the fields that contain personal data will be replaced by the string\n`[redacted]` or a similar placeholder. The metadata field will also be erased.\nRedacted objects cannot be updated or used for any purpose.",
        "operationId": "messages-redact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the message",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "message_not_found",
          "object_cannot_be_redacted",
          "object_redaction_in_progress"
        ]
      }
    },
    "/v1/money_balances": {
      "get": {
        "tags": [
          "Money Balances"
        ],
        "summary": "Retrieve payment balances",
        "operationId": "money-balances-get",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoneyBalances"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/money_balances/refresh": {
      "post": {
        "tags": [
          "Money Balances"
        ],
        "summary": "Force a balance refresh",
        "description": "Balance request will be made upstream if the current balance is older than 5 min.",
        "operationId": "money-balances-refresh",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/payment_authorizations": {
      "get": {
        "tags": [
          "Payment Authorizations"
        ],
        "summary": "List payment authorizations",
        "operationId": "payment-authorizations-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentAuthorizationStatus"
              }
            }
          },
          {
            "name": "approved",
            "in": "query",
            "description": "Filter options for `approved` property.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status_reason",
            "in": "query",
            "description": "Filter options for `status_reason` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentAuthorizationStatusReason"
              }
            }
          },
          {
            "name": "decline_reason",
            "in": "query",
            "description": "Filter options for `decline_reason` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentAuthorizationDeclineReason"
              }
            }
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "amount.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentAuthorization"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/payment_authorizations/{id}": {
      "get": {
        "tags": [
          "Payment Authorizations"
        ],
        "summary": "Retrieve a payment authorization",
        "operationId": "payment-authorizations-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAuthorization"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Payment Authorizations"
        ],
        "summary": "Update a payment authorization",
        "operationId": "payment-authorizations-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentAuthorizationUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment authorization."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentAuthorizationUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment authorization."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAuthorization"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_authorization_not_found"
        ]
      }
    },
    "/v1/payment_authorizations/{id}/approve": {
      "post": {
        "tags": [
          "Payment Authorizations"
        ],
        "summary": "Approve a payment authorization",
        "operationId": "payment-authorizations-approve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentAuthorizationApproveOptions"
                  }
                ],
                "description": "Options for approving a payment authorization."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAuthorization"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_authorization_not_found",
          "payment_authorization_closed"
        ]
      }
    },
    "/v1/payment_authorizations/{id}/decline": {
      "post": {
        "tags": [
          "Payment Authorizations"
        ],
        "summary": "Decline a payment authorization",
        "operationId": "payment-authorizations-decline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentAuthorizationDeclineOptions"
                  }
                ],
                "description": "Options for declining a payment authorization."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAuthorization"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_authorization_not_found",
          "payment_authorization_closed"
        ]
      }
    },
    "/v1/payment_refunds": {
      "get": {
        "tags": [
          "Payment Refunds"
        ],
        "summary": "List payment refunds",
        "operationId": "payment-refunds-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentRefundStatus"
              }
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Filter options for `reason` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentRefundReason"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "money_provider",
            "in": "query",
            "description": "Filter options for `money_provider` property.",
            "schema": {
              "type": "string",
              "example": "mprov_602a8dd0a54847479a874de4"
            },
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "amount.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentRefund"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Payment Refunds"
        ],
        "summary": "Create a payment refund",
        "operationId": "payment-refunds-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentRefundCreateOptions"
                  }
                ],
                "description": "Options for creating a payment refund."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRefund"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "money_provider_not_found",
          "money_provider_not_active",
          "payment_not_found",
          "payment_cannot_be_refunded"
        ]
      }
    },
    "/v1/payment_refunds/{id}": {
      "get": {
        "tags": [
          "Payment Refunds"
        ],
        "summary": "Retrieve a payment refund",
        "operationId": "payment-refunds-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the refund.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRefund"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Payment Refunds"
        ],
        "summary": "Update a payment refund",
        "operationId": "payment-refunds-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the refund.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentRefundUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment refund."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentRefundUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment refund."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRefund"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_refund_not_found"
        ]
      }
    },
    "/v1/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "List payments",
        "operationId": "payments-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentType"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "money_provider",
            "in": "query",
            "description": "Filter options for `money_provider` property.",
            "schema": {
              "type": "string",
              "example": "mprov_602a8dd0a54847479a874de4"
            },
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "amount.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create a payment",
        "operationId": "payments-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentCreateOptions"
                  }
                ],
                "description": "Options for creating a payment."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "money_provider_not_found",
          "money_provider_not_active",
          "customer_not_found",
          "object_redacted"
        ]
      }
    },
    "/v1/payments/{id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Retrieve a payment",
        "operationId": "payments-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Payments"
        ],
        "summary": "Update a payment",
        "operationId": "payments-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a payment."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "payment_not_found"
        ]
      }
    },
    "/v1/temporary_keys": {
      "get": {
        "tags": [
          "Temporary Keys"
        ],
        "summary": "List temporary keys",
        "operationId": "temporary-keys-list",
        "parameters": [
          {
            "name": "object",
            "in": "query",
            "description": "Filter option for a given object identifier.",
            "schema": {
              "type": "string",
              "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            },
            "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemporaryKey"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Temporary Keys"
        ],
        "summary": "Create a temporary key",
        "operationId": "temporary-keys-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TemporaryKeyCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemporaryKey"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/temporary_keys/{id}": {
      "get": {
        "tags": [
          "Temporary Keys"
        ],
        "summary": "Retrieve a temporary key",
        "operationId": "temporary-keys-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the temporary key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemporaryKey"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "delete": {
        "tags": [
          "Temporary Keys"
        ],
        "summary": "Delete a temporary key",
        "description": "Deleting a temporary key may take up to 5 minutes for it to stop working.",
        "operationId": "temporary-keys-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the temporary key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/transfer_reversals": {
      "get": {
        "tags": [
          "Transfer Reversals"
        ],
        "summary": "List transfer reversals",
        "operationId": "transfer-reversals-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransferReversalStatus"
              }
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Filter options for `reason` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransferReversalReason"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "money_provider",
            "in": "query",
            "description": "Filter options for `money_provider` property.",
            "schema": {
              "type": "string",
              "example": "mprov_602a8dd0a54847479a874de4"
            },
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "amount.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferReversal"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Transfer Reversals"
        ],
        "summary": "Create a transfer reversal",
        "operationId": "transfer-reversals-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferReversalCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferReversal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "money_provider_not_found",
          "money_provider_not_active",
          "transfer_not_found",
          "transfer_cannot_be_reversed"
        ]
      }
    },
    "/v1/transfer_reversals/{id}": {
      "get": {
        "tags": [
          "Transfer Reversals"
        ],
        "summary": "Retrieve a transfer reversal",
        "operationId": "transfer-reversals-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the reversal",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferReversal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Transfer Reversals"
        ],
        "summary": "Update a transfer reversal",
        "operationId": "transfer-reversals-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the reversal",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferReversalUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a transfer reversal."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferReversalUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a transfer reversal."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferReversal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "transfer_reversal_not_found"
        ]
      }
    },
    "/v1/transfers": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "List transfers",
        "operationId": "transfers-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransferStatus"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransferType"
              }
            }
          },
          {
            "name": "purpose",
            "in": "query",
            "description": "Filter options for `purpose` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransferPurpose"
              }
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter options for `customer` property.",
            "schema": {
              "type": "string",
              "example": "cust_602a8dd0a54847479a874de4"
            },
            "example": "cust_602a8dd0a54847479a874de4"
          },
          {
            "name": "money_provider",
            "in": "query",
            "description": "Filter options for `money_provider` property.",
            "schema": {
              "type": "string",
              "example": "mprov_602a8dd0a54847479a874de4"
            },
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "format": "currency",
              "example": "kes"
            }
          },
          {
            "name": "amount.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Create a transfer",
        "operationId": "transfers-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "money_provider_not_found",
          "insufficient_balance",
          "customer_not_found",
          "object_redacted"
        ]
      }
    },
    "/v1/transfers/{id}": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Retrieve a transfer",
        "operationId": "transfers-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the transfer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Transfers"
        ],
        "summary": "Update a transfer",
        "operationId": "transfers-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the transfer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a transfer."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferUpdateOptions"
                  }
                ],
                "description": "Represents the details that can be patched in a transfer."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "transfer_not_found"
        ]
      }
    },
    "/v1/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List webhooks",
        "operationId": "webhooks-list",
        "parameters": [
          {
            "name": "endpoint",
            "in": "query",
            "description": "Filter options for `endpoint` property.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Filter options for `event` property.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter options for `type` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      }
    },
    "/v1/webhooks/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Retrieve a webhook",
        "operationId": "webhooks-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the webhook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/webhooks/endpoints": {
      "get": {
        "tags": [
          "Webhook Endpoints"
        ],
        "summary": "List webhook endpoints",
        "operationId": "webhook-endpoints-list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter options for `status` property.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WebhookEndpointStatus"
              }
            }
          },
          {
            "name": "created.eq",
            "in": "query",
            "description": "Option for equal (=).\nRecommended only for fixed integral values.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lt",
            "in": "query",
            "description": "Option for less than (<).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.lte",
            "in": "query",
            "description": "Option for less than or equal to (<=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gt",
            "in": "query",
            "description": "Option for greater than (>).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created.gte",
            "in": "query",
            "description": "Option for greater than or equal to (>=).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order to use for sorting the objects returned. Defaults to `desc`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortingOrder"
                }
              ],
              "default": "desc"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of objects to return. Defaults to `10`.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "ct",
            "in": "query",
            "description": "A cursor for use in pagination.\nThe token from a previous request as gotten from the header of it's response.\nFor instance, if you make a request and receive 10 objects, the response contain\na `X-Continuation-Token` header with value `bravo`, your subsequent\ncall can include `ct=bravo`.",
            "schema": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Int64ContinuationToken"
                }
              ],
              "format": "opaque"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              },
              "X-Continuation-Token": {
                "$ref": "#/components/headers/X-Continuation-Token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEndpoint"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-supports-pagination": true
      },
      "post": {
        "tags": [
          "Webhook Endpoints"
        ],
        "summary": "Create a webhook endpoint",
        "operationId": "webhook-endpoints-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookEndpointCreateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEndpoint"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/v1/webhooks/endpoints/{id}": {
      "get": {
        "tags": [
          "Webhook Endpoints"
        ],
        "summary": "Retrieve a webhook endpoint",
        "operationId": "webhook-endpoints-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the webhook endpoint",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEndpoint"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "patch": {
        "tags": [
          "Webhook Endpoints"
        ],
        "summary": "Update a webhook endpoint",
        "operationId": "webhook-endpoints-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the webhook endpoint",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookEndpointUpdateOptions"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookEndpointUpdateOptions"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEndpoint"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "webhook_endpoint_not_found"
        ]
      },
      "delete": {
        "tags": [
          "Webhook Endpoints"
        ],
        "summary": "Delete a webhook endpoint",
        "operationId": "webhook-endpoints-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the webhook endpoint",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-Falu-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Trace-Id": {
                "$ref": "#/components/headers/X-Trace-Id"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/X-Request-Id"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "x-error-codes": [
          "webhook_endpoint_not_found"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiVersion": {
        "enum": [
          "2024-06-01"
        ],
        "type": "string",
        "description": "The API version to use.",
        "example": "2024-06-01"
      },
      "BilledDiscountAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount (in the smallest currency unit) of the discount.",
            "format": "int64",
            "example": 4000
          },
          "discount": {
            "type": "string",
            "description": "Unique identifier of the discount that was applied to get this discount amount.",
            "nullable": true,
            "example": "disc_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "BilledTaxAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount (in the smallest currency unit) of the tax.",
            "format": "int64",
            "example": 8000
          },
          "tax_rate": {
            "type": "string",
            "description": "Unique identifier of the tax rate that was applied to get this tax amount.",
            "nullable": true,
            "example": "txr_602a8dd0a54847479a874de4"
          },
          "inclusive": {
            "type": "boolean",
            "description": "This specifies if the tax rate is inclusive or exclusive."
          }
        },
        "additionalProperties": false
      },
      "BilledTaxRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the tax rate.",
            "nullable": true,
            "example": "txr_602a8dd0a54847479a874de4"
          },
          "rate": {
            "type": "number",
            "description": "The tax rate as a percentage out of 100.",
            "format": "double",
            "example": 14
          },
          "country": {
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, where the tax rate applies.",
            "format": "country",
            "nullable": true,
            "example": "ken"
          },
          "name": {
            "type": "string",
            "description": "The display name of the tax rate, which will be shown to users.",
            "nullable": true,
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the tax rate for your use.\nIt will not be visible to your customers.",
            "nullable": true,
            "example": "Effective 01 April 2020"
          }
        },
        "additionalProperties": false
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers.\nWhen not supplied, the `id` is displayed instead.",
            "nullable": true,
            "example": "10% off"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the coupon is currently available for new usage.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "coupon_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponType"
              }
            ],
            "description": "Type of the coupon."
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponFrequency"
              }
            ],
            "description": "Frequency of applying the coupon."
          },
          "duration": {
            "type": "string",
            "description": "The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)\nfor which to apply the coupon.\nOnly for `recurring` coupon frequency.\nWhen set to `null`, the coupon is applied forever.",
            "format": "duration",
            "nullable": true,
            "example": "P12M"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "amount": {
            "type": "integer",
            "description": "The unit amount in smallest currency unit representing how much will be subtracted from an invoice total.",
            "format": "int64",
            "nullable": true,
            "example": 10000
          },
          "percentage": {
            "type": "number",
            "description": "Represents the percentage to subtract from an invoice total.",
            "format": "double",
            "nullable": true,
            "example": 10
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of product identifiers that this coupon will apply to.\nWhen `null` or empty, the coupon can be used with any product.",
            "nullable": true,
            "example": [
              "prod_602a8dd0a54847479a874de4",
              "prod_602a8dd0a54847479a874de3"
            ]
          },
          "expires": {
            "type": "string",
            "description": "Specifies time up to when the coupon is can be used.\nAfter this date, the coupon can no longer be applied to new subscriptions.\nWhen not specified, the coupon can be used indefinitely.",
            "format": "date-time",
            "nullable": true
          },
          "valid": {
            "type": "boolean",
            "description": "Whether this coupon is valid for use.",
            "readOnly": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "CouponCreateOptions": {
        "required": [
          "frequency",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers.\nWhen not supplied, the `id` is displayed instead.",
            "nullable": true,
            "example": "10% off"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the coupon is currently available for new usage.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponType"
              }
            ],
            "description": "Type of the coupon."
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponFrequency"
              }
            ],
            "description": "Frequency of applying the coupon."
          },
          "duration": {
            "type": "string",
            "description": "The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)\nfor which the coupon will be in effect.\nOnly for `recurring` coupon frequency.\nWhen set to `null`, the coupon is applied forever.",
            "format": "duration",
            "nullable": true,
            "example": "P12M"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "amount": {
            "minimum": 1,
            "type": "integer",
            "description": "The unit amount in smallest currency unit representing how much to subtract from an invoice total.\nRequired for `amount` types.",
            "format": "int64",
            "nullable": true,
            "example": 10000
          },
          "percentage": {
            "maximum": 100,
            "minimum": 0.01,
            "type": "number",
            "description": "Represents the percentage to subtract from an invoice total.\nThis value will be rounded off to 2 decimal places.\nRequired for `percentage` types.",
            "format": "double",
            "nullable": true,
            "example": 10
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of product identifiers that this coupon will apply to.\nWhen `null` or empty, the coupon can be used with any product.",
            "nullable": true,
            "example": [
              "prod_602a8dd0a54847479a874de4",
              "prod_602a8dd0a54847479a874de3"
            ]
          },
          "expires": {
            "type": "string",
            "description": "Specifies time up to when the coupon is can be used.\nAfter this date, the coupon can no longer be applied to new subscriptions.\nWhen not specified, the coupon can be used indefinitely.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CouponFrequency": {
        "enum": [
          "once",
          "recurring"
        ],
        "type": "string"
      },
      "CouponType": {
        "enum": [
          "percentage",
          "amount"
        ],
        "type": "string"
      },
      "CouponUpdateOptions": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers.\nWhen not supplied, the `id` is displayed instead.",
            "nullable": true,
            "example": "10% off"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the coupon is currently available for new usage.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditNote": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Customer-facing text that appears on the credit note PDF.",
            "nullable": true,
            "example": "Sponsored proof of concept"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "crnte_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreditNoteReason"
              }
            ],
            "description": "Reason for issuing this credit note."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreditNoteStatus"
              }
            ],
            "description": "Status of this credit note."
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer this credit note belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "invoice": {
            "type": "string",
            "description": "Identifier of the invoice this credit note belongs to.",
            "nullable": true,
            "example": "inv_602a8dd0a54847479a874de4"
          },
          "number": {
            "type": "string",
            "description": "A unique number that identifies this particular credit note and appears\non the PDF of the credit note and its associated invoice.",
            "nullable": true,
            "example": "70E8BD3B-0685-CN-01"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditNoteItem"
            },
            "description": "The individual items that make up the credit note.",
            "nullable": true
          },
          "discount_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledDiscountAmount"
            },
            "description": "The aggregate amounts calculated per discount for all credit note items.",
            "nullable": true
          },
          "tax_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxAmount"
            },
            "description": "The aggregate amounts calculated per tax rate for all credit note items.",
            "nullable": true
          },
          "subtotal": {
            "type": "integer",
            "description": "The amount (in the smallest unit of the specified `currency`) representing the amount of the credit note,\nexcluding tax and invoice level discounts.\nItem discounts are already incorporated.",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "description": "Total amount (in the smallest unit of the specified `currency`) of the credit note, including tax and all discounts.",
            "format": "int64",
            "example": 5800
          },
          "pdf_url": {
            "type": "string",
            "description": "The link to download the PDF for the credit note.",
            "format": "uri",
            "nullable": true,
            "example": "https://billing.falu.io/wksp_602a8dd0a54847479a874de4/credit_notes/test_1dhDoi1oJYTsZSA8tblyEEXqXz11IMV3mx/pdf"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "CreditNoteCreateOptions": {
        "required": [
          "invoice",
          "items",
          "reason"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Customer-facing text that appears on the credit note PDF.",
            "nullable": true,
            "example": "Sponsored proof of concept"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "invoice": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the invoice to create a credit note for.",
            "example": "inv_602a8dd0a54847479a874de4"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreditNoteReason"
              }
            ],
            "description": "Reason for issuing this credit note."
          },
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditNoteItemCreateOptionsItem"
            },
            "description": "Items that make up the credit note."
          }
        },
        "additionalProperties": false
      },
      "CreditNoteItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "crnti_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "credit_note": {
            "type": "string",
            "description": "Identifier of the credit note this credit note item belongs to.",
            "nullable": true,
            "example": "crnt_602a8dd0a54847479a874de4"
          },
          "invoice_item": {
            "type": "string",
            "description": "Identifier of the invoice item this credit note item belongs to.",
            "nullable": true,
            "example": "invi_602a8dd0a54847479a874de4"
          },
          "quantity": {
            "type": "integer",
            "description": "The number of units of product being credited.",
            "format": "int64",
            "example": 5
          },
          "unit_amount": {
            "type": "integer",
            "description": "Amount (in the smallest unit of the specified `currency`) for each unit of the credit note item.",
            "format": "int64",
            "example": 1000
          },
          "description": {
            "type": "string",
            "description": "Description of the item being credited.",
            "nullable": true,
            "example": "5 API Requests × Some good API (at KES1.00 / month)"
          },
          "amount": {
            "type": "integer",
            "description": "Amount (in the smallest currency unit) representing the gross amount being credited for\nthis credit note item, excluding tax and discounts.",
            "format": "int64",
            "example": 5000
          },
          "discount_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledDiscountAmount"
            },
            "description": "The amount of discount calculated per discount for this credit note item.",
            "nullable": true
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxRate"
            },
            "description": "The tax rates which apply to the credit note item.",
            "nullable": true
          },
          "tax_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxAmount"
            },
            "description": "The amount of tax calculated per tax rate for this credit note item.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "CreditNoteItemCreateOptionsItem": {
        "required": [
          "invoice_item"
        ],
        "type": "object",
        "properties": {
          "invoice_item": {
            "minLength": 1,
            "type": "string",
            "description": "The invoice item to credit.\nThis must be long to the same invoice as the credit note.",
            "example": "invi_602a8dd0a54847479a874de4"
          },
          "quantity": {
            "minimum": 1,
            "type": "integer",
            "description": "The line item quantity to credit.",
            "format": "int64",
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "CreditNoteReason": {
        "enum": [
          "duplicate",
          "fraudulent",
          "order_change",
          "product_unsatisfactory"
        ],
        "type": "string"
      },
      "CreditNoteStatus": {
        "enum": [
          "issued",
          "voided"
        ],
        "type": "string"
      },
      "CreditNoteUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Customer-facing text that appears on the credit note PDF.",
            "nullable": true,
            "example": "Sponsored proof of concept"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The customer’s primary address.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "email": {
            "type": "string",
            "description": "The customer’s email address.",
            "format": "email",
            "nullable": true,
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "The customer’s full name or business name.",
            "nullable": true,
            "example": "John Kamau Onyango"
          },
          "phone": {
            "type": "string",
            "description": "The customer’s phone number.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          },
          "timezone": {
            "type": "string",
            "description": "The customer’s timezone.\nWhen not provided, the server decides depending on the task at hand.",
            "format": "timezone",
            "nullable": true,
            "example": "Africa/Nairobi"
          },
          "language": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO language code](https://www.iso.org/iso-639-language-codes.html),\nin lowercase.\n\nThis determines the language to be used for communications to the customer\nincluding emails, messages, PDF documents, and hosted pages.\nWhen not provided, `eng` (English) is used.\nCurrently only `eng` is allowed.",
            "format": "language",
            "nullable": true,
            "example": "eng"
          },
          "coupon": {
            "type": "string",
            "description": "The coupon attached to the customer.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerType"
              }
            ],
            "description": "Type of customer\nDefaults to `individual`.",
            "default": "individual"
          },
          "invoicing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInvoicing"
              }
            ],
            "description": "Settings for invoicing the customer.",
            "nullable": true
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Set of key-value pairs mapping a customer's balances in various currencies. The key is the currency while the value is the customer balance.\nNegative values are treated as credit (a reduction in the amount owed by the customer) that you can apply to the next invoice.\nPositive values are treated as a debit (an increase in the amount owed by the customer to you) that you can apply to the next invoice.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerBalanceTransaction": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the customer balance transaction that can be displayed to your customers.",
            "nullable": true,
            "example": "Migrated balance transaction from previous system."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "custbtr_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerBalanceTransactionType"
              }
            ],
            "description": "The transaction type for this transaction."
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer this balance transaction belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "credit_note": {
            "type": "string",
            "description": "Identifier of the credit note this transaction is related to.",
            "nullable": true,
            "example": "crnt_602a8dd0a54847479a874de4"
          },
          "invoice": {
            "type": "string",
            "description": "Identifier of the invoice this transaction is related to.",
            "nullable": true,
            "example": "inv_602a8dd0a54847479a874de4"
          },
          "amount": {
            "type": "integer",
            "description": "The amount for the transaction, in the smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "balance_brought_forward": {
            "type": "integer",
            "description": "Customer balance, in the smallest currency unit,\nbefore this transaction was effected.",
            "format": "int64",
            "example": 0
          },
          "balance_resulting": {
            "type": "integer",
            "description": "Customer balance, in smallest currency unit,\nafter this transaction has been effected.",
            "format": "int64",
            "example": 10000
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "CustomerBalanceTransactionCreateOptions": {
        "required": [
          "amount",
          "currency",
          "customer"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the customer balance transaction that can be displayed to your customers.",
            "nullable": true,
            "example": "Migrated balance transaction from previous system."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "customer": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the customer this balance transaction belongs to.",
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "amount": {
            "type": "integer",
            "description": "The amount for the transaction, in the smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "example": "kes"
          }
        },
        "additionalProperties": false
      },
      "CustomerBalanceTransactionType": {
        "enum": [
          "initial",
          "adjustment",
          "credit_note",
          "applied_to_invoice",
          "invoice_too_small",
          "invoice_too_large",
          "unapplied_from_invoice"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "initial": "Represents the starting balance of a customer at the point of a customer's creation.",
          "adjustment": "Represents a credit or debit adjustment against a customer's balance. This is the only\ntype of transaction that can be created via the API or dashboard. It can also be created\nas a result of prorations and thus can be applied to future invoices.",
          "credit_note": "Traces creation of credit to a credit note and it's associated invoice.",
          "applied_to_invoice": "Traces application of credit against a linked invoice.",
          "invoice_too_small": "When the amount due on an invoice is smaller than the minimum chargeable amount the invoice\nis debited to the customer balance and added to the amount due of the next issued invoice.",
          "invoice_too_large": "When the amount due on an invoice is greater than the maximum chargeable amount the invoice\nis debited to the customer balance and added to the amount due of the next issued invoice.",
          "unapplied_from_invoice": "Traces the reversal of an applied customer balance from a linked invoice.\nPaired with an earlier ‘applied_to_invoice’ transaction."
        }
      },
      "CustomerBalanceTransactionUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the customer balance transaction that can be displayed to your customers.",
            "nullable": true,
            "example": "Migrated balance transaction from previous system."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerCreateOptions": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The customer’s primary address.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "email": {
            "type": "string",
            "description": "The customer’s email address.",
            "format": "email",
            "nullable": true,
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "The customer’s full name or business name.",
            "nullable": true,
            "example": "John Kamau Onyango"
          },
          "phone": {
            "type": "string",
            "description": "The customer’s phone number.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          },
          "timezone": {
            "type": "string",
            "description": "The customer’s timezone.\nWhen not provided, the server decides depending on the task at hand.",
            "format": "timezone",
            "nullable": true,
            "example": "Africa/Nairobi"
          },
          "language": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO language code](https://www.iso.org/iso-639-language-codes.html),\nin lowercase.\n\nThis determines the language to be used for communications to the customer\nincluding emails, messages, PDF documents, and hosted pages.\nWhen not provided, `eng` (English) is used.\nCurrently only `eng` is allowed.",
            "format": "language",
            "nullable": true,
            "example": "eng"
          },
          "coupon": {
            "type": "string",
            "description": "The coupon attached to the customer.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerType"
              }
            ],
            "description": "Type of customer\nDefaults to `individual`.",
            "default": "individual"
          },
          "invoicing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInvoicing"
              }
            ],
            "description": "Settings for invoicing the customer.",
            "nullable": true
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Set of key-value pairs mapping a customer's balances in various currencies. The key is the currency while the value is the customer balance.\nNegative values are treated as credit (a reduction in the amount owed by the customer) that you can apply to the next invoice.\nPositive values are treated as a debit (an increase in the amount owed by the customer to you) that you can apply to the next invoice.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerInvoicing": {
        "required": [
          "prefix"
        ],
        "type": "object",
        "properties": {
          "prefix": {
            "minLength": 1,
            "pattern": "^[A-Z0-9]{3,12}$",
            "type": "string",
            "description": "Prefix used to generate unique invoice numbers for the customer.\nLeave this blank for the server to generate one on creation.",
            "example": "70E8BD3B"
          },
          "next_sequence": {
            "minimum": 1,
            "type": "integer",
            "description": "The sequence to be used on the customer’s next invoice.\nDefaults to 1.",
            "format": "int32",
            "default": 1
          },
          "default_payment_method": {
            "type": "string",
            "description": "Identifier of the payment method that's attached to the customer,\nto be used as the customer's default payment method for subscriptions and invoices.",
            "nullable": true,
            "example": "pm_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "CustomerTaxId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "custtxid_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer that this tax id belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "country": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, where the tax rate applies.",
            "format": "country",
            "nullable": true,
            "example": "ken"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxIdType"
              }
            ],
            "description": "Customer tax id type"
          },
          "tax_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxIdStatus"
              }
            ],
            "description": "Status of the customer tax identification number."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxIdVerificationStatus"
              }
            ],
            "description": "Status of the tax id verification."
          },
          "value": {
            "type": "string",
            "description": "Value of the tax id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The verified name of the customer",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The verified address of the customer",
            "nullable": true
          },
          "obligations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerTaxObligation"
            },
            "description": "The verified registered tax obligations",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "CustomerTaxIdCreateOptions": {
        "required": [
          "customer",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the customer this customer tax id belongs to.",
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "Value of the tax id"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxIdType"
              }
            ],
            "description": "Customer tax id type"
          }
        },
        "additionalProperties": false
      },
      "CustomerTaxIdDetails": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the tax id",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxIdType"
              }
            ],
            "description": "Customer tax id type"
          }
        },
        "additionalProperties": false
      },
      "CustomerTaxIdStatus": {
        "enum": [
          "unknown",
          "active",
          "inactive"
        ],
        "type": "string",
        "description": "Status of a customer tax identification number.",
        "x-enumDescriptions": {
          "unknown": "Unknown.",
          "active": "Active customer tax identification number.",
          "inactive": "Inactive customer tax identification number."
        }
      },
      "CustomerTaxIdType": {
        "enum": [
          "ken_pin",
          "uga_tin",
          "tza_tin"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "ken_pin": "Kenyan Personal Identification Number (PIN).",
          "uga_tin": "Ugandan Tax Identification Number (TIN).",
          "tza_tin": "Tanzanian Tax Identification Number (TIN)."
        }
      },
      "CustomerTaxIdVerificationStatus": {
        "enum": [
          "pending",
          "verified",
          "unverified",
          "unavailable"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "pending": "The customer tax id verification is still being processed.",
          "verified": "The customer tax id has been verified.",
          "unverified": "The customer tax id cannot be verified."
        }
      },
      "CustomerTaxObligation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The Name.",
            "nullable": true,
            "example": "Value Added Tax (VAT)"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxObligationStatus"
              }
            ],
            "description": "The status"
          },
          "effective": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerTaxObligationPeriod"
              }
            ],
            "description": "The tax obligation registration dates",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerTaxObligationPeriod": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "The starting date of the effective period.",
            "format": "date-time",
            "example": "2019-08-24T14:15:22.0000000+00:00"
          },
          "end": {
            "type": "string",
            "description": "The ending date of the effective period.\nWhen null, it means the obligation is still effective.",
            "format": "date-time",
            "nullable": true,
            "example": "2019-09-24T14:15:22.0000000+00:00"
          }
        },
        "additionalProperties": false
      },
      "CustomerTaxObligationStatus": {
        "enum": [
          "unknown",
          "registered",
          "cancelled"
        ],
        "type": "string"
      },
      "CustomerType": {
        "enum": [
          "other",
          "individual",
          "corporate",
          "small_business"
        ],
        "type": "string"
      },
      "CustomerUpdateOptions": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The customer’s primary address.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "email": {
            "type": "string",
            "description": "The customer’s email address.",
            "format": "email",
            "nullable": true,
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "The customer’s full name or business name.",
            "nullable": true,
            "example": "John Kamau Onyango"
          },
          "phone": {
            "type": "string",
            "description": "The customer’s phone number.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          },
          "timezone": {
            "type": "string",
            "description": "The customer’s timezone.\nWhen not provided, the server decides depending on the task at hand.",
            "format": "timezone",
            "nullable": true,
            "example": "Africa/Nairobi"
          },
          "language": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO language code](https://www.iso.org/iso-639-language-codes.html),\nin lowercase.\n\nThis determines the language to be used for communications to the customer\nincluding emails, messages, PDF documents, and hosted pages.\nWhen not provided, `eng` (English) is used.\nCurrently only `eng` is allowed.",
            "format": "language",
            "nullable": true,
            "example": "eng"
          },
          "coupon": {
            "type": "string",
            "description": "The coupon attached to the customer.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerType"
              }
            ],
            "description": "Type of customer\nDefaults to `individual`.",
            "default": "individual"
          },
          "invoicing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInvoicing"
              }
            ],
            "description": "Settings for invoicing the customer.",
            "nullable": true
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Set of key-value pairs mapping a customer's balances in various currencies. The key is the currency while the value is the customer balance.\nNegative values are treated as credit (a reduction in the amount owed by the customer) that you can apply to the next invoice.\nPositive values are treated as a debit (an increase in the amount owed by the customer to you) that you can apply to the next invoice.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRedaction": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedactionStatus"
              }
            ],
            "description": "Indicates whether the object and its related objects have been redacted or not."
          },
          "requested": {
            "type": "string",
            "description": "Time at which the redaction was requested.\nPopulated after the object has been scheduled for redaction.",
            "format": "date-time",
            "nullable": true
          },
          "completed": {
            "type": "string",
            "description": "Time at which the redaction was completed.\nThis is not present or `null` if the redaction is still enqueued or in progress.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRedactionStatus": {
        "enum": [
          "redacted",
          "processing"
        ],
        "type": "string",
        "description": "Represents the status of a redaction.",
        "x-enumDescriptions": {
          "redacted": "The object and its related objects have been redacted.",
          "processing": "The object has been redacted, and its related objects are in the process of being redacted.\nThis process may take up to a week."
        }
      },
      "Discount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "disc_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "start": {
            "type": "string",
            "description": "Date that the coupon was applied.",
            "format": "date-time",
            "example": "2019-08-24T14:15:22.0000000+00:00"
          },
          "end": {
            "type": "string",
            "description": "For coupons with `recurring` frequency and `duration` that is not `null`,\nthis represents the date the discount will end.\nOtherwise, it is null or not populated to indicate that the discount applies indefinitely.",
            "format": "date-time",
            "nullable": true
          },
          "coupon": {
            "type": "string",
            "description": "Identifier of the coupon applied to create this discount.",
            "nullable": true,
            "example": "coupon_602a8dd0a54847479a874de4"
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer that this discount belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "subscription": {
            "type": "string",
            "description": "Identifier of the subscription that the coupon is applied to, if any.",
            "nullable": true,
            "example": "sub_602a8dd0a54847479a874de4"
          },
          "invoice": {
            "type": "string",
            "description": "Identifier of the invoice this discount's coupon was applied to, if it was applied directly to a particular invoice.",
            "nullable": true,
            "example": "inv_602a8dd0a54847479a874de4"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "EventData": {
        "type": "object",
        "properties": {
          "object": {
            "type": "object",
            "additionalProperties": {},
            "description": "Object containing the API resource relevant to the event.\nFor example, a `money_provider.balance.updated` event will have a full payment balances object.",
            "nullable": true
          },
          "previous": {
            "type": "object",
            "additionalProperties": {},
            "description": "Object containing the names of the properties that have changed, and their previous\nvalues (sent along only with `*.updated` events).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The data in an event"
      },
      "EventRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the API request that caused the event. If null, the event was automatic\n(e.g., automatic balance updates), otherwise details on the request can be pulled\nfrom the request/developer logs.",
            "nullable": true,
            "example": "req_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "idempotency_key": {
            "type": "string",
            "description": "The idempotency key transmitted during the request, if any.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "enum": [
          "customer.created",
          "customer.updated",
          "customer.redacted",
          "payment.method.created",
          "payment.method.updated",
          "payment.method.attached",
          "payment.method.detached",
          "product.created",
          "product.updated",
          "product.deleted",
          "price.created",
          "price.updated",
          "price.deleted",
          "coupon.created",
          "coupon.updated",
          "coupon.deleted",
          "discount.created",
          "discount.updated",
          "subscription.created",
          "subscription.updated",
          "subscription.cancelled",
          "invoice.created",
          "invoice.updated",
          "credit_note.created",
          "credit_note.updated",
          "customer.tax_id.created",
          "customer.tax_id.updated",
          "customer.tax_id.deleted",
          "money_statement.uploaded",
          "money_provider.created",
          "money_provider.updated",
          "money_provider.balance.updated",
          "payment.updated",
          "payment.succeeded",
          "payment.failed",
          "payment.authorization.request",
          "payment.authorization.created",
          "payment.authorization.updated",
          "payment.refund.created",
          "payment.refund.updated",
          "payment.refund.succeeded",
          "payment.refund.failed",
          "transfer.created",
          "transfer.updated",
          "transfer.succeeded",
          "transfer.failed",
          "transfer.reversal.created",
          "transfer.reversal.updated",
          "transfer.reversal.succeeded",
          "transfer.reversal.failed",
          "message.created",
          "message.scheduled",
          "message.sent",
          "message.failed",
          "message.delivered",
          "message.read",
          "message.cancelled",
          "message.redacted",
          "message.received",
          "message_batch.created",
          "message_batch.scheduled",
          "message_batch.cancelled",
          "message_batch.redacted",
          "message_template.created",
          "message_template.updated",
          "message_template.deleted",
          "message_suppression.created",
          "message_suppression.updated",
          "message_suppression.deleted",
          "file.created",
          "file.redacted",
          "identity_verification.created",
          "identity_verification.processing",
          "identity_verification.verified",
          "identity_verification.input_required",
          "identity_verification.cancelled",
          "identity_verification.redacted"
        ],
        "type": "string",
        "description": "Types of events that can be sent to external systems via Webhook Endpoints",
        "x-enumDescriptions": {
          "customer.created": "Occurs whenever an customer is created.",
          "customer.updated": "Occurs whenever an customer is updated.",
          "customer.redacted": "Occurs whenever an customer is redacted.",
          "payment.method.created": "Occurs whenever an payment method is created.",
          "payment.method.updated": "Occurs whenever an payment method is updated.",
          "payment.method.attached": "Occurs whenever an payment method is attached.",
          "payment.method.detached": "Occurs whenever an payment method is detached.",
          "product.created": "Occurs whenever a product is created.",
          "product.updated": "Occurs whenever a product is updated.",
          "product.deleted": "Occurs whenever a product is deleted.",
          "price.created": "Occurs whenever a price is created.",
          "price.updated": "Occurs whenever a price is updated.",
          "price.deleted": "Occurs whenever a price is deleted.",
          "coupon.created": "Occurs whenever a coupon is created.",
          "coupon.updated": "Occurs whenever a coupon is updated.",
          "coupon.deleted": "Occurs whenever a coupon is deleted.",
          "discount.created": "Occurs whenever a discount is created.",
          "discount.updated": "Occurs whenever a discount is updated.",
          "subscription.created": "Occurs whenever a subscription is created.",
          "subscription.updated": "Occurs whenever a subscription is updated.",
          "subscription.cancelled": "Occurs whenever a subscription is cancelled.",
          "invoice.created": "Occurs whenever a invoice is created.",
          "invoice.updated": "Occurs whenever a invoice is updated.",
          "credit_note.created": "Occurs whenever a credit note is created.",
          "credit_note.updated": "Occurs whenever a credit note is updated.",
          "customer.tax_id.created": "Occurs whenever an customer tax id is created.",
          "customer.tax_id.updated": "Occurs whenever an customer tax id is updated.",
          "customer.tax_id.deleted": "Occurs whenever an customer tax id is deleted.",
          "money_statement.uploaded": "Occurs whenever a money statement is uploaded.",
          "money_provider.created": "Occurs whenever a money provider is created.",
          "money_provider.updated": "Occurs whenever a money provider is updated.",
          "money_provider.balance.updated": "Occurs whenever a money provider's balance is updated.",
          "payment.updated": "Occurs whenever a payment is updated.",
          "payment.succeeded": "Occurs whenever a payment succeeds.",
          "payment.failed": "Occurs whenever a payment fails.",
          "payment.authorization.request": "Occurs whenever a payment authorization is requested.",
          "payment.authorization.created": "Occurs whenever a payment authorization is created.",
          "payment.authorization.updated": "Occurs whenever a payment authorization is updated.",
          "payment.refund.created": "Occurs whenever a payment refund is created.",
          "payment.refund.updated": "Occurs whenever a payment refund is updated.",
          "payment.refund.succeeded": "Occurs whenever a payment refund succeeds.",
          "payment.refund.failed": "Occurs whenever a payment refund fails.",
          "transfer.created": "Occurs whenever a transfer is created.",
          "transfer.updated": "Occurs whenever a transfer is updated.",
          "transfer.succeeded": "Occurs whenever a transfer succeeds.",
          "transfer.failed": "Occurs whenever a transfer fails.",
          "transfer.reversal.created": "Occurs whenever a transfer reversal is created.",
          "transfer.reversal.updated": "Occurs whenever a transfer reversal is updated.",
          "transfer.reversal.succeeded": "Occurs whenever a transfer reversal succeeds.",
          "transfer.reversal.failed": "Occurs whenever a transfer reversal fails.",
          "message.created": "Occurs whenever a message is created.",
          "message.scheduled": "Occurs whenever a message is scheduled.",
          "message.sent": "Occurs whenever a message is sent.",
          "message.failed": "Occurs whenever a message fails to send.",
          "message.delivered": "Occurs whenever a message is delivered successfully.",
          "message.read": "Occurs whenever a message is read by the recipient.",
          "message.cancelled": "Occurs whenever the message has been cancelled and future\nupdate attempts have been disabled.",
          "message.redacted": "Occurs whenever a message has been redacted.",
          "message.received": "Occurs whenever an incoming message is received.",
          "message_batch.created": "Occurs whenever a message batch is created.",
          "message_batch.scheduled": "Occurs whenever a message batch is scheduled.",
          "message_batch.cancelled": "Occurs whenever the message batch has been cancelled and future\nupdate attempts have been disabled.",
          "message_batch.redacted": "Occurs whenever a message batch has been redacted.",
          "message_template.created": "Occurs whenever a message template is created.",
          "message_template.updated": "Occurs whenever a message template is updated.",
          "message_template.deleted": "Occurs whenever a message template is deleted.",
          "message_suppression.created": "Occurs whenever a message suppression is created.",
          "message_suppression.updated": "Occurs whenever a message suppression is updated.",
          "message_suppression.deleted": "Occurs whenever a message suppression is deleted.",
          "file.created": "Occurs whenever a file is created.",
          "file.redacted": "Occurs whenever a file is redacted.",
          "identity_verification.created": "Occurs whenever an identity verification is created.",
          "identity_verification.processing": "Occurs whenever a user has successfully submitted their information,\nand verification checks have started processing.",
          "identity_verification.verified": "Occurs whenever processing of all the verification checks have completed\nand they’re all successfully verified.",
          "identity_verification.input_required": "Occurs whenever processing of all the verification checks have completed, and at least one of the checks failed.",
          "identity_verification.cancelled": "Occurs whenever an identity verification has been cancelled and future\nsubmission attempts have been disabled.",
          "identity_verification.redacted": "Occurs whenever an identity verification has been redacted."
        }
      },
      "FailureReason": {
        "enum": [
          "unknown",
          "insufficient_balance",
          "authentication_error",
          "amount_out_of_bound",
          "timeout",
          "unavailable",
          "other"
        ],
        "type": "string",
        "description": "Reason for failure of a payment, transfer or reversal.",
        "x-enumDescriptions": {
          "unavailable": "The user is not reachable either because the mobile device\nis switched off or the SIM card is out of date."
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "file_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "purpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilePurpose"
              }
            ],
            "description": "Purpose of the file."
          },
          "type": {
            "type": "string",
            "description": "Type of file.",
            "nullable": true,
            "example": "image/png"
          },
          "filename": {
            "type": "string",
            "description": "A name of the file suitable for saving to a file system.",
            "nullable": true,
            "example": "logo192.png"
          },
          "size": {
            "type": "integer",
            "description": "Size in bytes of the file.",
            "format": "int64",
            "example": 73338
          },
          "hashes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileContentHashes"
              }
            ],
            "description": "Various hashes of the file content.",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "description": "Time at which the file expires.",
            "format": "date-time",
            "nullable": true
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a file."
      },
      "FileContentHashes": {
        "type": "object",
        "properties": {
          "md5": {
            "type": "string",
            "description": "Plain hash using [MD5](https://en.wikipedia.org/wiki/MD5) in hex.",
            "nullable": true
          },
          "sha256": {
            "type": "string",
            "description": "Plain hash using [SHA256](https://en.wikipedia.org/wiki/SHA-2) in hex.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents various hashes of a file."
      },
      "FileLink": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "description": "Time at which the link expires.",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "flnk_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "file": {
            "type": "string",
            "description": "Unique identifier of the file.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          },
          "url": {
            "type": "string",
            "description": "Publicly accessible URL to download the file.",
            "format": "uri",
            "nullable": true,
            "example": "https://files.falu.io/v1/links/jfHCcvJ6nFNRpfksm"
          },
          "expired": {
            "type": "boolean",
            "description": "Whether this link is already expired."
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents an unauthenticated link to a file."
      },
      "FileLinkCreateOptions": {
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "description": "Time at which the link expires.",
            "format": "date-time",
            "nullable": true
          },
          "file": {
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the file.",
            "example": "file_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "FileLinkUpdateOptions": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "description": "Time at which the link expires.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a file link."
      },
      "FilePurpose": {
        "enum": [
          "business.icon",
          "business.logo",
          "customer.signature",
          "customer.selfie",
          "customer.tax.document",
          "message.media",
          "identity.document",
          "identity.video"
        ],
        "type": "string",
        "description": "Purpose for a file.",
        "x-enumDescriptions": {
          "business.icon": "A business icon.",
          "business.logo": "A business logo.",
          "customer.signature": "Customer signature image.",
          "customer.selfie": "Image of a selfie collected for identification purposes.",
          "customer.tax.document": "Customer provided tax document.",
          "message.media": "Media attached to a message.",
          "identity.document": "Document to verify the identity of an entity.",
          "identity.video": "Video to verify the liveness of an individual."
        }
      },
      "IdentityDocumentIdCardType": {
        "enum": [
          "civilian",
          "alien",
          "military"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "civilian": "ID card issued to general citizens.\nThis is usually the most popular ID card in a country/region.",
          "alien": "ID card issued to non-citizens such as refugees.",
          "military": "ID card issued to military personnel."
        }
      },
      "IdentityDocumentPassportType": {
        "enum": [
          "civilian",
          "diplomatic",
          "military",
          "service"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "civilian": "Passport issued to general citizens for general travel and identification.",
          "diplomatic": "Passport issued to diplomatic personnel.",
          "military": "Passport issued to military personnel.",
          "service": "Passport issued to people who work abroad for the state."
        }
      },
      "IdentityDocumentType": {
        "enum": [
          "driving_license",
          "passport",
          "id_card"
        ],
        "type": "string",
        "description": "The type of identification document.",
        "x-enumDescriptions": {
          "driving_license": "Drivers license document type.",
          "passport": "Passport document type.",
          "id_card": "ID card document type."
        }
      },
      "IdentityVerification": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationStatus"
              }
            ],
            "description": "Status of the verification.\n[Learn more about the lifecycle of verifications](/identity/how-verifications-work)."
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationType"
              }
            ],
            "description": "The type of [verification check](/identity/verification-checks)\nto be performed."
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptions"
              }
            ],
            "description": "Options (settings) for the verification.",
            "nullable": true
          },
          "return_url": {
            "maxLength": 512,
            "type": "string",
            "description": "The URL the user will be redirected to upon completing the verification flow.",
            "format": "uri",
            "nullable": true,
            "example": "https://example.com/verification-submitted"
          },
          "client_secret": {
            "type": "string",
            "description": "The short-lived client secret used by front-end libraries to show a verification modal inside your app.\nThis client secret expires after 24 hours and can only be used once.\nDon’t store it, log it, embed it in a URL, or expose it to anyone other than the user.\nMake sure that you have TLS enabled on any page that includes the client secret.\nRefer to our docs on\n[passing the client secret to the frontend](/identity/verifications#client-secret)\nto learn more.",
            "nullable": true,
            "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3_secret_test_1dhDoi1oJYTsZSA8tblyEEXqXz11IMV3mx"
          },
          "url": {
            "type": "string",
            "description": "The short-lived URL that you use to redirect a user to Falu to submit their identity information.\nThis link expires after 24 hours and can only be used once.\nDon’t store it, log it, send it in emails or expose it to anyone other than the target user.\n\n\nRefer to the\n[verifying identity documents](/identity/verify-documents?platform=web&type=redirect)\nguide to learn how to redirect users to Falu.",
            "format": "uri",
            "nullable": true,
            "example": "https://verify.falu.io/start/test_1dhDoi1oJYTsZSA8tblyEEXqXz11IMV3mx"
          },
          "reports": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identifiers of the reports for this verification.",
            "nullable": true,
            "example": [
              "idvr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationLastError"
              }
            ],
            "description": "If present, this property tells you the last error encountered when processing the identity verification.",
            "nullable": true
          },
          "outputs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOutputs"
              }
            ],
            "description": "The user's verified data.",
            "nullable": true,
            "x-pii": true
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "outputs"
        ]
      },
      "IdentityVerificationCreateOptions": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationType"
              }
            ],
            "description": "The type of [verification check](/identity/verification-checks)\nto be performed."
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptions"
              }
            ],
            "description": "A set of verification checks to be performed.",
            "nullable": true
          },
          "return_url": {
            "maxLength": 512,
            "type": "string",
            "description": "The URL the user will be redirected to upon completing the verification flow.",
            "format": "uri",
            "nullable": true,
            "example": "https://example.com/verification-submitted"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationDeviceErrorCode": {
        "enum": [
          "device_info_unresolvable"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "device_info_unresolvable": "The device could not be detected."
        }
      },
      "IdentityVerificationDeviceErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationDeviceErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationDocumentErrorCode": {
        "enum": [
          "document_expired",
          "document_unverified_other",
          "document_type_not_supported"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "document_expired": "The provided identity document has expired.",
          "document_unverified_other": "Falu could not verify the provided identity document.\nEnsure the document is supported.",
          "document_type_not_supported": "The provided identity document isn't one of the verification's allowed document types."
        }
      },
      "IdentityVerificationDocumentErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationDocumentErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationErrorCode": {
        "enum": [
          "consent_declined",
          "device_not_supported",
          "abandoned",
          "under_supported_age",
          "country_not_supported",
          "id_number_unverified_other",
          "id_number_insufficient_document_data",
          "id_number_mismatch",
          "document_expired",
          "document_unverified_other",
          "document_type_not_supported",
          "selfie_document_missing_photo",
          "selfie_face_mismatch",
          "selfie_unverified_other",
          "selfie_manipulated",
          "liveness_document_missing_photo",
          "liveness_face_mismatch",
          "liveness_unverified_other",
          "liveness_manipulated",
          "ipaddress_unresolvable",
          "ipaddress_private",
          "device_info_unresolvable",
          "tax_authority_unavailable",
          "tax_id_mismatch",
          "tax_id_unverified"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "consent_declined": "The user declined to be verified by Falu.\nCheck with your legal counsel to see if you have an obligation to offer an alternative,\nnon-biometric means to verify, such as through a manual review.",
          "device_not_supported": "The user's device didn't have a camera or they declined to grant Falu permission to access it.",
          "abandoned": "The user began the verification but didn’t submit it.",
          "under_supported_age": "Falu does not verify users under the age of 18.",
          "country_not_supported": "Falu does not verify users from the provided country.",
          "id_number_unverified_other": "The information provided couldn't be verified.\nEnsure the document is supported.",
          "id_number_insufficient_document_data": "The provided document didn’t contain enough data to match against the ID number.",
          "id_number_mismatch": "The information provided couldn’t be matched against global databases.",
          "document_expired": "The provided identity document has expired.",
          "document_unverified_other": "Falu could not verify the provided identity document.\nEnsure the document is supported.",
          "document_type_not_supported": "The provided identity document isn't one of the verification's allowed document types.",
          "selfie_document_missing_photo": "The provided identity document didn't contain a picture of a face.",
          "selfie_face_mismatch": "The captured face image didn't match with the document's face.",
          "selfie_unverified_other": "Falu couldn't verify the provided selfie.",
          "selfie_manipulated": "The captured face image was manipulated.",
          "liveness_document_missing_photo": "The provided identity document didn't contain a picture of a face.",
          "liveness_face_mismatch": "The captured face image didn't match with the document's face.",
          "liveness_unverified_other": "Falu couldn't verify the provided video.",
          "liveness_manipulated": "The captured video was manipulated.",
          "ipaddress_unresolvable": "The IP address of the client could not be resolved.",
          "ipaddress_private": "The IP address of the client is privately registered.",
          "device_info_unresolvable": "The device could not be detected.",
          "tax_authority_unavailable": "The tax authority is unavailable for tax verification purposes.\nNormally this will be the result after trying multiple retires.",
          "tax_id_mismatch": "The tax id information doesn't match details extracted from the document(s) provided.",
          "tax_id_unverified": "The tax id could not be verified by the tax authority."
        }
      },
      "IdentityVerificationIdNumberErrorCode": {
        "enum": [
          "id_number_unverified_other",
          "id_number_insufficient_document_data",
          "id_number_mismatch"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "id_number_unverified_other": "The information provided couldn't be verified.\nEnsure the document is supported.",
          "id_number_insufficient_document_data": "The provided document didn’t contain enough data to match against the ID number.",
          "id_number_mismatch": "The information provided couldn’t be matched against global databases."
        }
      },
      "IdentityVerificationIdNumberErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationIdNumberErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationIPAddressErrorCode": {
        "enum": [
          "ipaddress_unresolvable",
          "ipaddress_private"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "ipaddress_unresolvable": "The IP address of the client could not be resolved.",
          "ipaddress_private": "The IP address of the client is privately registered."
        }
      },
      "IdentityVerificationIPAddressErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationIPAddressErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationLastError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for verification or user-session failure."
          },
          "description": {
            "type": "string",
            "description": "A human-readable message that explains the reason for verification or user-session failure.\nThis message can be shown to your user.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationOptions": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The allowed countries specified as the three-letter\n[ISO country code](https://www.iso.org/iso-3166-country-codes.html), in lowercase.\nIf a user selects or uploads a document from a country which isn't one of the allowed ones, it will be rejected.\nWhen not provided, all countries are allowed.",
            "nullable": true,
            "example": [
              "ken",
              "uga",
              "tza"
            ]
          },
          "allow_uploads": {
            "type": "boolean",
            "description": "Whether to allow uploads for documents, images and videos.\nThis only applies to document related checks.\nTo enhance security and improved the overall user experience,\nuploads are disabled by default. Set this to\ntrue to allow uploading files."
          },
          "max_attempts": {
            "minimum": 1,
            "type": "integer",
            "description": "The maximum number of verification attempts the user is allowed to make. A large number of attempts\ncould signal fraudulent behavior.",
            "format": "int32",
            "nullable": true
          },
          "id_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptionsForIdNumber"
              }
            ],
            "description": "Options for the id number check.",
            "nullable": true
          },
          "document": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptionsForDocument"
              }
            ],
            "description": "Options for the document check.",
            "nullable": true
          },
          "selfie": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptionsForSelfie"
              }
            ],
            "description": "Options for the selfie check.",
            "nullable": true
          },
          "video": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptionsForVideo"
              }
            ],
            "description": "Options for the video check.",
            "nullable": true
          },
          "tax_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptionsForTaxId"
              }
            ],
            "description": "Options for tax id check",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationOptionsForDocument": {
        "type": "object",
        "properties": {
          "allowed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDocumentType"
            },
            "description": "The allowed identity document types.\nIf a user uploads a document which isn't one of the allowed types, it will be rejected.\nWhen not provided, all the document types are allowed.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationOptionsForIdNumber": {
        "type": "object",
        "additionalProperties": false
      },
      "IdentityVerificationOptionsForSelfie": {
        "type": "object",
        "additionalProperties": false
      },
      "IdentityVerificationOptionsForTaxId": {
        "required": [
          "allowed"
        ],
        "type": "object",
        "properties": {
          "allowed": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationTaxIdType"
            },
            "description": "The allowed identity tax id types.\nIf a user provides an identity tax id type which isn't one of the allowed types, it will be rejected."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationOptionsForVideo": {
        "type": "object",
        "properties": {
          "poses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationVideoPose"
            },
            "description": "Face poses to be performed in the video recording.\nIt is recommended to leave this field unassigned for the server to\ngenerate random values per verification for security purposes.",
            "nullable": true,
            "example": [
              "blink",
              "nod"
            ]
          },
          "recital": {
            "maximum": 999,
            "minimum": 100,
            "type": "integer",
            "description": "Numerical phrase to be recited in the video recording.\nWhen not provided, the server generates a random one.",
            "format": "int32",
            "nullable": true,
            "example": 102
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationOutputs": {
        "type": "object",
        "properties": {
          "id_number_type": {
            "type": "string",
            "description": "The user’s verified id number type.",
            "nullable": true
          },
          "id_number": {
            "type": "string",
            "description": "The user’s verified id number.",
            "nullable": true,
            "example": "123456789"
          },
          "issuer": {
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, which issued the document used, if any.",
            "nullable": true,
            "example": "ken"
          },
          "first_name": {
            "type": "string",
            "description": "The user’s verified first name.",
            "nullable": true,
            "example": "JOHN"
          },
          "last_name": {
            "type": "string",
            "description": "The user’s verified last name.",
            "nullable": true,
            "example": "KAMAU"
          },
          "other_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The user’s other verified names.",
            "nullable": true,
            "example": [
              "ONYANGO"
            ]
          },
          "birthday": {
            "type": "string",
            "description": "The user’s verified date of birth.",
            "format": "date-time",
            "nullable": true,
            "example": "1989-10-20T00:00:00.0000000+00:00"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The user’s verified address.",
            "nullable": true
          },
          "sex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationSex"
              }
            ],
            "description": "The user's sex",
            "nullable": true
          },
          "driving_license_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationReportDocumentVehicleCategory"
            },
            "description": "The driving license vehicle categories.\nOnly populated if this report is for a driving license.",
            "nullable": true
          },
          "issuing_authority": {
            "type": "string",
            "description": "The issuing authority for the document",
            "nullable": true
          },
          "place_of_birth": {
            "type": "string",
            "description": "Place where the document holder was born",
            "nullable": true
          },
          "tax_id": {
            "type": "string",
            "description": "The verified tax id",
            "nullable": true
          },
          "tax_id_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationTaxIdType"
              }
            ],
            "description": "The tax id type",
            "nullable": true
          },
          "tax_id_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationTaxIdStatus"
              }
            ],
            "description": "Status of the tax id.",
            "nullable": true
          },
          "tax_id_obligations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationTaxIdObligation"
            },
            "description": "The verified registered tax obligations",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "idvr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "verification": {
            "type": "string",
            "description": "Identifier of the identity verification that created this report.",
            "nullable": true,
            "example": "idv_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationOptions"
              }
            ],
            "description": "The checks that initiated this report.",
            "nullable": true
          },
          "consent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserConsent"
              }
            ],
            "description": "Details on the user’s acceptance of the Services Agreement.",
            "nullable": true
          },
          "id_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportIdNumber"
              }
            ],
            "description": "Result from an id number check.",
            "nullable": true,
            "x-pii": true
          },
          "document": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDocument"
              }
            ],
            "description": "Result from a document check.",
            "nullable": true,
            "x-pii": true
          },
          "selfie": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportSelfie"
              }
            ],
            "description": "Result from a selfie check.",
            "nullable": true,
            "x-pii": true
          },
          "video": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportVideo"
              }
            ],
            "description": "Result from a video check.",
            "nullable": true,
            "x-pii": true
          },
          "ip_address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportIPAddress"
              }
            ],
            "description": "Result from the IP address check.",
            "nullable": true
          },
          "device": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDevice"
              }
            ],
            "description": "Result from the device check.",
            "nullable": true
          },
          "tax_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportTaxId"
              }
            ],
            "description": "Result from tax id check",
            "nullable": true,
            "x-pii": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "id_number",
          "document",
          "selfie",
          "video",
          "tax_id"
        ]
      },
      "IdentityVerificationReportDevice": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationDeviceErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "user_agent": {
            "type": "string",
            "description": "User agent of the device from which the verification was done.",
            "nullable": true,
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"
          },
          "client_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDeviceClientType"
              }
            ],
            "description": "Type of the client.",
            "example": "browser"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDeviceType"
              }
            ],
            "description": "Type of the device.",
            "example": "smartphone"
          },
          "brand": {
            "type": "string",
            "description": "Brand of the device.",
            "nullable": true,
            "example": "Apple"
          },
          "model": {
            "type": "string",
            "description": "Name or model of the device.",
            "nullable": true,
            "example": "iPhone"
          },
          "os": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDeviceOs"
              }
            ],
            "description": "Operating system information.",
            "nullable": true
          },
          "browser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDeviceBrowser"
              }
            ],
            "description": "Browser information.\nOnly populated when `client_type=browser`.",
            "nullable": true
          },
          "sdk": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportDeviceSdk"
              }
            ],
            "description": "SDK information.\nOnly populated when `client_type=sdk`.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportDeviceBrowser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the browser.",
            "nullable": true,
            "example": "safari"
          },
          "version": {
            "type": "string",
            "description": "Version of the browser.",
            "nullable": true,
            "example": "16.0"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportDeviceClientType": {
        "enum": [
          "other",
          "browser",
          "sdk",
          "bot"
        ],
        "type": "string"
      },
      "IdentityVerificationReportDeviceOs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the operating system.",
            "nullable": true,
            "example": "iOS"
          },
          "type": {
            "type": "string",
            "description": "Type of operating system.",
            "nullable": true,
            "example": "ios"
          },
          "version": {
            "type": "string",
            "description": "Version of the operating system.",
            "nullable": true,
            "example": "16.0"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportDeviceSdk": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the SDK.",
            "nullable": true,
            "example": "falu-ios"
          },
          "version": {
            "type": "string",
            "description": "Version of the SDK.",
            "nullable": true,
            "example": "2.2.11"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportDeviceType": {
        "enum": [
          "other",
          "desktop",
          "tablet",
          "smartphone"
        ],
        "type": "string"
      },
      "IdentityVerificationReportDocument": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationDocumentErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "expiry": {
            "type": "string",
            "description": "Expiry date of the document.",
            "format": "date-time",
            "nullable": true,
            "example": "2025-10-20T00:00:00.0000000+00:00"
          },
          "issued": {
            "type": "string",
            "description": "Issued date of the document.",
            "format": "date-time",
            "nullable": true,
            "example": "2020-10-20T00:00:00.0000000+00:00"
          },
          "issuer": {
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, which issued the document.",
            "nullable": true,
            "example": "ken"
          },
          "nationality": {
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, where the entity issued the document originates from.",
            "nullable": true,
            "example": "ken"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityDocumentType"
              }
            ],
            "description": "Type of the document."
          },
          "id_card_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityDocumentIdCardType"
              }
            ],
            "description": "Type of ID card.\nOnly populated if `type` is `id_card`.",
            "nullable": true
          },
          "passport_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityDocumentPassportType"
              }
            ],
            "description": "Type of passport.\nOnly populated if `type` is `passport`.",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Document identification number.",
            "nullable": true
          },
          "personal_number": {
            "type": "string",
            "description": "Personal number",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "First name as it appears in the document.",
            "nullable": true,
            "example": "JOHN"
          },
          "last_name": {
            "type": "string",
            "description": "Last name as it appears in the document.",
            "nullable": true,
            "example": "KAMAU"
          },
          "other_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other names as they appear in the document.",
            "nullable": true,
            "example": [
              "ONYANGO"
            ]
          },
          "sex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationSex"
              }
            ],
            "description": "Sex as it appears on the document",
            "nullable": true,
            "example": "M"
          },
          "birthday": {
            "type": "string",
            "description": "Date of birth as it appears in the document.",
            "format": "date-time",
            "nullable": true,
            "example": "1989-10-20T00:00:00.0000000+00:00"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "Address as it appears in the document.",
            "nullable": true
          },
          "driving_license_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationReportDocumentVehicleCategory"
            },
            "description": "The driving license vehicle categories.\nOnly populated if this report is for a driving license.",
            "nullable": true
          },
          "issuing_authority": {
            "type": "string",
            "description": "The issuing authority for the document",
            "nullable": true
          },
          "place_of_birth": {
            "type": "string",
            "description": "Place where the document holder was born",
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identifiers of the files containing images for this document.",
            "nullable": true,
            "example": [
              "file_602a8dd0a54847479a874de4",
              "file_602a8dd0a54847479a874de4"
            ]
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportDocumentVehicleCategory": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Vehicle category",
            "nullable": true,
            "example": "C1"
          },
          "issued": {
            "type": "string",
            "description": "License valid from",
            "format": "date-time",
            "nullable": true,
            "example": "2020-10-20T00:00:00.0000000+00:00"
          },
          "expires": {
            "type": "string",
            "description": "License valid to",
            "format": "date-time",
            "nullable": true,
            "example": "2025-10-20T00:00:00.0000000+00:00"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportIdNumber": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationIdNumberErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "id_number_type": {
            "type": "string",
            "description": "Type of ID number.",
            "nullable": true
          },
          "id_number": {
            "type": "string",
            "description": "Identification number.",
            "nullable": true,
            "example": "123456789"
          },
          "issuer": {
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, which issued the document.",
            "nullable": true,
            "example": "ken"
          },
          "first_name": {
            "type": "string",
            "description": "The first name.",
            "nullable": true,
            "example": "JOHN"
          },
          "last_name": {
            "type": "string",
            "description": "The last name.",
            "nullable": true,
            "example": "KAMAU"
          },
          "other_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The other names.",
            "nullable": true,
            "example": [
              "ONYANGO"
            ]
          },
          "birthday": {
            "type": "string",
            "description": "The date of birth.",
            "format": "date-time",
            "nullable": true,
            "example": "1989-10-20T00:00:00.0000000+00:00"
          },
          "sex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationSex"
              }
            ],
            "description": "The sex as it should appear on the document",
            "nullable": true,
            "example": "M"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportIPAddress": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationIPAddressErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "ip": {
            "type": "string",
            "description": "IP address from which the verification was done.",
            "format": "ip-address",
            "nullable": true,
            "example": "::ffff:127.0.0.1"
          },
          "city": {
            "type": "string",
            "description": "The city.",
            "nullable": true,
            "example": "Nairobi"
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code or zip code.\nEach country has its way of denoting postal codes.",
            "nullable": true,
            "example": "00100"
          },
          "state": {
            "type": "string",
            "description": "The state or province.\nAlso referred to as the `province`",
            "nullable": true,
            "example": "Nairobi"
          },
          "country": {
            "type": "string",
            "description": "The country.",
            "nullable": true,
            "example": "Kenya"
          },
          "longitude": {
            "type": "number",
            "description": "Longitudinal measurement (east or west), if available.",
            "format": "double",
            "nullable": true,
            "example": 36.8155
          },
          "latitude": {
            "type": "number",
            "description": "Latitudinal measurement (north or south), if available.",
            "format": "double",
            "nullable": true,
            "example": -1.2841
          },
          "mobile": {
            "type": "boolean",
            "description": "Whether the `ip` points to a mobile (cellular) connection.\n`null` when the relevant information is unavailable.",
            "nullable": true
          },
          "proxied": {
            "type": "boolean",
            "description": "Whether the `ip` points to a Web Proxy, Virtual Private Network (VPN), or a TOR exit.\n`null` when the relevant information is unavailable.",
            "nullable": true
          },
          "hosted": {
            "type": "boolean",
            "description": "Whether the `ip` points to a hosting provider, cloud provider, data center or co-located server farm.\n`null` when the relevant information is unavailable.",
            "nullable": true
          },
          "asn": {
            "type": "string",
            "description": "The `ip`'s Autonomous System Number (ASN), if available.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportSelfie": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationSelfieErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "document": {
            "type": "string",
            "description": "Identifier of the file holding the image of the identity document used in this check.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          },
          "selfie": {
            "type": "string",
            "description": "Identifier of the file holding the image of the selfie used in this check.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportTaxId": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportTaxIdErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationTaxIdType"
              }
            ],
            "description": "The tax id type"
          },
          "tax_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationTaxIdStatus"
              }
            ],
            "description": "Status of the tax identification number.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value of the tax id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The verified name of the tax payer",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The verified address of the customer",
            "nullable": true
          },
          "obligations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationTaxIdObligation"
            },
            "description": "The verified registered tax obligations",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportTaxIdErrorCode": {
        "enum": [
          "tax_authority_unavailable",
          "tax_id_mismatch",
          "tax_id_unverified"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "tax_authority_unavailable": "The tax authority is unavailable for tax verification purposes.\nNormally this will be the result after trying multiple retires.",
          "tax_id_mismatch": "The tax id information doesn't match details extracted from the document(s) provided.",
          "tax_id_unverified": "The tax id could not be verified by the tax authority."
        }
      },
      "IdentityVerificationReportTaxIdErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationReportTaxIdErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationReportVideo": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationVideoErrorCodeIdentityVerificationReportError"
              }
            ],
            "description": "Details on the verification error.\nPresent when not verified.",
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the check resulted in a successful verification."
          },
          "document": {
            "type": "string",
            "description": "Identifier of the file holding the image of the identity document used in this check.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          },
          "video": {
            "type": "string",
            "description": "Identifier of the file holding the video used in this check.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          },
          "portrait": {
            "type": "string",
            "description": "Identifier of the file holding the image of the portrait used in this check.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationSelfieErrorCode": {
        "enum": [
          "selfie_document_missing_photo",
          "selfie_face_mismatch",
          "selfie_unverified_other",
          "selfie_manipulated"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "selfie_document_missing_photo": "The provided identity document didn't contain a picture of a face.",
          "selfie_face_mismatch": "The captured face image didn't match with the document's face.",
          "selfie_unverified_other": "Falu couldn't verify the provided selfie.",
          "selfie_manipulated": "The captured face image was manipulated."
        }
      },
      "IdentityVerificationSelfieErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationSelfieErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationSex": {
        "enum": [
          "male",
          "female"
        ],
        "type": "string"
      },
      "IdentityVerificationStatus": {
        "enum": [
          "input_required",
          "processing",
          "verified",
          "cancelled"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "input_required": "Requires user input before processing can continue.",
          "processing": "The session has been submitted and is being processed.\nMost verification checks take a few minutes to process.",
          "verified": "Processing of all the verification checks are complete and successfully verified.",
          "cancelled": "The IdentityVerification has been invalidated for future submission attempts."
        }
      },
      "IdentityVerificationTaxIdObligation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The Name.",
            "nullable": true,
            "example": "Value Added Tax (VAT)"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationTaxIdObligationStatus"
              }
            ],
            "description": "The status"
          },
          "effective": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationTaxIdObligationPeriod"
              }
            ],
            "description": "The tax obligation registration dates",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationTaxIdObligationPeriod": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "The starting date of the effective period.",
            "format": "date-time",
            "example": "2019-08-24T14:15:22.0000000+00:00"
          },
          "end": {
            "type": "string",
            "description": "The ending date of the effective period.\nWhen null, it means the obligation is still effective.",
            "format": "date-time",
            "nullable": true,
            "example": "2019-09-24T14:15:22.0000000+00:00"
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationTaxIdObligationStatus": {
        "enum": [
          "unknown",
          "registered",
          "cancelled"
        ],
        "type": "string"
      },
      "IdentityVerificationTaxIdStatus": {
        "enum": [
          "unknown",
          "active",
          "inactive"
        ],
        "type": "string",
        "description": "Status of an identity tax identification number.",
        "x-enumDescriptions": {
          "unknown": "Unknown.",
          "active": "Active tax identification number.",
          "inactive": "Inactive tax identification number."
        }
      },
      "IdentityVerificationTaxIdType": {
        "enum": [
          "ken_pin"
        ],
        "type": "string",
        "description": "Type of a tax identification number.",
        "x-enumDescriptions": {
          "ken_pin": "Kenyan Personal Identification Number (PIN)."
        }
      },
      "IdentityVerificationType": {
        "enum": [
          "id_number",
          "document",
          "document_and_selfie",
          "document_and_video"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "id_number": "Only check the ID number as input by the user.",
          "document": "Requires the user to upload a verifiable identification document.",
          "document_and_selfie": "Requires the user to upload a verifiable identification\ndocument with a matching selfie image.",
          "document_and_video": "Requires the user to upload a verifiable identification\ndocument alongside a video recording."
        }
      },
      "IdentityVerificationUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationVideoErrorCode": {
        "enum": [
          "video_document_missing_photo",
          "video_face_mismatch",
          "video_unverified_other",
          "video_manipulated"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "video_document_missing_photo": "The provided identity document didn't contain a picture of a face.",
          "video_face_mismatch": "The captured face image didn't match with the document's face.",
          "video_unverified_other": "Falu couldn't verify the provided video.",
          "video_manipulated": "The captured video was manipulated."
        }
      },
      "IdentityVerificationVideoErrorCodeIdentityVerificationReportError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityVerificationVideoErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "IdentityVerificationVideoPose": {
        "enum": [
          "blink",
          "turn_left",
          "turn_right",
          "nod",
          "smile"
        ],
        "type": "string"
      },
      "Int64ContinuationToken": {
        "type": "string",
        "additionalProperties": false,
        "format": "opaque"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "default_payment_method": {
            "type": "string",
            "description": "Identifier of the default payment method that's attached to the customer associated with the invoice,\nto be used as the default payment method for invoice.\nIf none is set, the customer's default payment method us used.",
            "nullable": true,
            "example": "pm_602a8dd0a54847479a874de4"
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "inv_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ],
            "description": "Status of the invoice."
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer this invoice belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "customer_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoicedCustomerDetails"
              }
            ],
            "description": "Invoiced customer details.\nThis information is pulled from the customer at the\npoint of invoice creation and cannot be changed afterwards.",
            "nullable": true
          },
          "subscription": {
            "type": "string",
            "description": "Identifier of the subscription this invoice was prepared for, if any.",
            "nullable": true,
            "example": "sub_602a8dd0a54847479a874de4"
          },
          "number": {
            "type": "string",
            "description": "A uniquely identifying string that appears on communications sent to the customer for this invoice.\nThis is prefixed by a global workspace prefix or per customer, if specified.",
            "nullable": true,
            "example": "70E8BD3B-0685"
          },
          "period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Period"
              }
            ],
            "description": "Usage period during which invoice items were added to this invoice.",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItem"
            },
            "description": "The individual items that make up the invoice.\nThey are sorted as follows:\n- (1) pending invoice items (including prorations) in reverse chronological order,\n- (2) subscription items in reverse chronological order, and\n- (3) invoice items added after invoice creation in chronological order.",
            "nullable": true
          },
          "subtotal": {
            "type": "integer",
            "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or tax is applied.\nItem discounts are already incorporated.",
            "format": "int64"
          },
          "tax": {
            "type": "integer",
            "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
            "format": "int64",
            "example": 8000
          },
          "total": {
            "type": "integer",
            "description": "Total amount (in the smallest unit of the specified `currency`) of the invoice.",
            "format": "int64",
            "example": 58000
          },
          "balance_brought_forward": {
            "type": "integer",
            "description": "Starting customer balance before the invoice is finalized.\nIf the invoice has not been finalized yet, this will be the current customer balance.",
            "format": "int64"
          },
          "balance_resulting": {
            "type": "integer",
            "description": "The customer balance after the invoice has been finalized.",
            "format": "int64",
            "nullable": true
          },
          "amount_due": {
            "type": "integer",
            "description": "Final amount due at this time for this invoice.\nIf the invoice’s total is smaller than the minimum payment amount, for example,\nor if there is account credit that can be applied to the invoice, this value may be 0.\nIf there is a positive `starting_balance` for the invoice (the customer owes money),\nthis value will also take that into account.\nThe payment that gets generated for the invoice will be for the value specified here.",
            "format": "int64"
          },
          "amount_paid": {
            "type": "integer",
            "description": "Amount (in the smallest unit of the specified `currency`) that was paid.",
            "format": "int64"
          },
          "amount_remaining": {
            "type": "integer",
            "description": "The difference between `amount_due` and `amount_paid`,\nin the smallest unit of the specified `currency`.",
            "format": "int64"
          },
          "paid": {
            "type": "boolean",
            "description": "Whether a payment was successfully collected for the invoice.\nA successful payment can come via credit or a charge via a payment method."
          },
          "paid_externally": {
            "type": "boolean",
            "description": "Boolean representing if a payment was settled outside Falu.\nReturns true if the payment has been manually marked as paid,\nreturns false if the invoice hasn't been paid yet or was paid in Falu."
          },
          "default_tax_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxRate"
            },
            "description": "The tax rates that applied to this invoice for invoice items that does not have rax rates set.",
            "nullable": true
          },
          "total_discount_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledDiscountAmount"
            },
            "description": "The aggregate amounts calculated per discount across all line items.",
            "nullable": true
          },
          "total_tax_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxAmount"
            },
            "description": "The aggregate amounts calculated per tax rate for all invoice items.",
            "nullable": true
          },
          "pdf_url": {
            "type": "string",
            "description": "The link to download the PDF for the invoice.\nOnly available after the invoice has been finalized.",
            "format": "uri",
            "nullable": true,
            "example": "https://billing.falu.io/wksp_602a8dd0a54847479a874de4/invoices/test_1dhDoi1oJYTsZSA8tblyEEXqXz11IMV3mx/pdf"
          },
          "attempts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceAttempts"
              }
            ],
            "description": "Details about attempts for the invoice.\nOnly available after the invoice has been finalized.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "InvoiceAttempts": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule.\nAny payment attempt counts as the first attempt, and subsequently only automatic retries increment this value.\nIn other words, manual payment attempts after the first attempt do not affect the retry schedule.",
            "format": "int32"
          },
          "next": {
            "type": "string",
            "description": "The time at which payment will next be attempted.\nThis value will be `null` for invoices where collection is manual or there is no further attempt.",
            "format": "date-time",
            "nullable": true
          },
          "previous": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Timestamps for all previous payment attempts of this invoice.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicedCustomerDetails": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The customer’s billing address.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The customer’s email address.",
            "format": "email",
            "nullable": true,
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "The customer’s full name or business name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The customer’s phone number.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          },
          "timezone": {
            "type": "string",
            "description": "The customer’s timezone.",
            "format": "timezone",
            "nullable": true,
            "example": "Africa/Nairobi"
          },
          "language": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "The customer’s language.",
            "format": "language",
            "nullable": true,
            "example": "eng"
          },
          "customer_tax_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerTaxIdDetails"
            },
            "description": "Customer tax ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceItem": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "invi_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer this invoice item belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "invoice": {
            "type": "string",
            "description": "Identifier of the invoice this invoice item belongs to.",
            "nullable": true,
            "example": "inv_602a8dd0a54847479a874de4"
          },
          "price": {
            "type": "string",
            "description": "Identifier of the price for the invoice item.",
            "nullable": true,
            "example": "price_602a8dd0a54847479a874de4"
          },
          "subscription": {
            "type": "string",
            "description": "Identifier of the subscription that this invoice item has been created for, if any.",
            "nullable": true,
            "example": "sub_602a8dd0a54847479a874de4"
          },
          "subscription_item": {
            "type": "string",
            "description": "Identifier of the subscription item that this invoice item has been created for, if any.",
            "nullable": true,
            "example": "subi_602a8dd0a54847479a874de4"
          },
          "period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Period"
              }
            ],
            "description": "The period associated with this invoice item.\nWhen set to different values, the period will be rendered on the invoice.",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of units for the invoice item.\nIf the invoice item is a proration, the quantity of the subscription that the proration was computed for.",
            "format": "int64",
            "example": 10
          },
          "unit_amount": {
            "type": "integer",
            "description": "Amount (in the smallest unit of the specified `currency`) for each unit of the invoice item.\nThis will be multiplied by the quantity to get the total.",
            "format": "int64",
            "example": 5000
          },
          "amount": {
            "type": "integer",
            "description": "Amount (in the smallest unit of the specified `currency`) of the invoice item.\nThis should always be equal to `unit_amount` * `quantity`.",
            "format": "int64",
            "example": 50000
          },
          "proration": {
            "type": "boolean",
            "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans."
          },
          "discount_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledDiscountAmount"
            },
            "description": "The amount of discount calculated per discount for this invoice item.",
            "nullable": true
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxRate"
            },
            "description": "The tax rates which apply to the invoice item.\nWhen set, the default tax rates on the invoice do not apply to this invoice item.",
            "nullable": true
          },
          "tax_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BilledTaxAmount"
            },
            "description": "The amount of tax calculated per tax rate for this invoice item.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "InvoiceItemUpdateOptions": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePayOptions": {
        "required": [
          "paid_externally"
        ],
        "type": "object",
        "properties": {
          "paid_externally": {
            "type": "boolean",
            "description": "Boolean representing if a payment was settled outside Falu."
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatus": {
        "enum": [
          "draft",
          "paid",
          "void",
          "ready",
          "written_off"
        ],
        "type": "string"
      },
      "InvoiceUpdateOptions": {
        "type": "object",
        "properties": {
          "default_payment_method": {
            "type": "string",
            "description": "Identifier of the default payment method that's attached to the customer associated with the invoice,\nto be used as the default payment method for invoice.\nIf none is set, the customer's default payment method us used.",
            "nullable": true,
            "example": "pm_602a8dd0a54847479a874de4"
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "msg_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStatus"
              }
            ],
            "description": "Status of the message."
          },
          "from": {
            "type": "string",
            "description": "The phone number (in [E.164 format](https://en.wikipedia.org/wiki/E.164)),\nor identifier of the `MessageSender` that initiated the message.\nFor incoming messages, this will be the number of the sending phone.\nFor outgoing messages, this will be the identifier of the `MessageSender` used.",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "The phone number (in [E.164 format](https://en.wikipedia.org/wiki/E.164)),\nor identifier of the `MessageSender` that received the message.\nFor outgoing messages, this will be the number of the receiving phone.\nFor incoming messages, this will be the identifier of the `MessageSender` used.",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Actual message content sent.",
            "nullable": true,
            "x-pii": true
          },
          "template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSourceTemplate"
              }
            ],
            "description": "Template used for the message",
            "nullable": true
          },
          "media": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageMedia"
              }
            ],
            "description": "Media included with the message.",
            "nullable": true
          },
          "stream": {
            "type": "string",
            "description": "Stream used for the message.",
            "nullable": true,
            "example": "mstr_602a8dd0a54847479a874de4"
          },
          "sender": {
            "type": "string",
            "description": "Sender used for the message.",
            "nullable": true,
            "example": "msdr_602a8dd0a54847479a874de4"
          },
          "batch": {
            "type": "string",
            "description": "Batch that the message belongs to, if any.",
            "nullable": true,
            "example": "msba_602a8dd0a54847479a874de4"
          },
          "segments": {
            "type": "integer",
            "description": "Number of segments that make up the complete message.\nIf the body that is too large to be sent in a single\nmessage, it is segmented and charged as multiple messages.\n\n\nInbound messages over 160 characters are reassembled when the message is received.",
            "format": "int32",
            "nullable": true
          },
          "schedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSchedule"
              }
            ],
            "description": "Schedule information for the message.",
            "nullable": true
          },
          "sent": {
            "type": "string",
            "description": "Time at which the message was sent.",
            "format": "date-time",
            "nullable": true
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageError"
              }
            ],
            "description": "Details on the message error.\nPresent when in failed state.",
            "nullable": true
          },
          "delivered": {
            "type": "string",
            "description": "Time at which the message was delivered, where available.",
            "format": "date-time",
            "nullable": true
          },
          "read": {
            "type": "string",
            "description": "Time at which the message was read, where available.",
            "format": "date-time",
            "nullable": true
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a message.",
        "x-pii": [
          "body"
        ]
      },
      "MessageBatch": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "msba_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "stream": {
            "type": "string",
            "description": "Stream used for the message batch.",
            "nullable": true,
            "example": "mstr_602a8dd0a54847479a874de4"
          },
          "sender": {
            "type": "string",
            "description": "Sender used for the message batch.",
            "nullable": true,
            "example": "msdr_602a8dd0a54847479a874de4"
          },
          "schedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageBatchSchedule"
              }
            ],
            "description": "Schedule information for the message batch.",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identifiers of the messages tracked in this batch.",
            "nullable": true,
            "example": [
              "msg_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            ]
          },
          "segments": {
            "type": "integer",
            "description": "Total number of segments from each message.\nSee `segments` in `Message` schema for computation on each message.",
            "format": "int32",
            "nullable": true
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a batch of messages for tracking purposes."
      },
      "MessageBatchCreateOptions": {
        "required": [
          "messages",
          "stream"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "messages": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageBatchCreateOptionsMessage"
            },
            "description": "The messages.\nYou can send up to 1,000 messages in one API request."
          },
          "stream": {
            "minLength": 1,
            "type": "string",
            "description": "The stream to use.\nIt can either be the name or unique identifier of the stream.",
            "example": "transactional"
          },
          "from": {
            "type": "string",
            "description": "The sender that sends these messages.\nIt can be a short code, alphanumeric sender value or unique identifier of the sender.\nWhen not provided, Falu will use the most appropriate or first available sender in your stream.",
            "nullable": true,
            "example": "FALU ALERTS"
          },
          "schedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageCreateOptionsSchedule"
              }
            ],
            "description": "Schedule for sending the messages.\nWhen not provided or set to `null`, the message(s)\nis/are enqueued for immediate sending.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageBatchCreateOptionsMessage": {
        "required": [
          "tos"
        ],
        "type": "object",
        "properties": {
          "tos": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "tel",
              "example": "+254722000000"
            },
            "description": "Destination phone numbers in [E.164 format](https://en.wikipedia.org/wiki/E.164).\nYou can send up to 1,000 messages in one API request.",
            "x-pii": true
          },
          "body": {
            "maxLength": 1600,
            "type": "string",
            "description": "Actual message content to be sent.\nRequired if `template` is not specified.",
            "nullable": true,
            "example": "Welcome home John!",
            "x-pii": true
          },
          "template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageCreateOptionsTemplate"
              }
            ],
            "description": "The template to use.\nRequired if `body` is not specified.",
            "nullable": true
          },
          "media": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageCreateOptionsMedia"
              }
            ],
            "description": "Media to be sent with the message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "tos",
          "body"
        ]
      },
      "MessageBatchSchedule": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time at which the message batch is/was scheduled to be sent.",
            "format": "date-time"
          },
          "delay": {
            "type": "string",
            "description": "The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)\nfor which the message batch is/was to be delayed before sending.",
            "format": "duration",
            "nullable": true,
            "example": "P1D15M"
          }
        },
        "additionalProperties": false
      },
      "MessageBatchStatus": {
        "type": "object",
        "properties": {
          "accepted": {
            "type": "integer",
            "description": "Number of messages in the `accepted` status.",
            "format": "int32",
            "example": 10
          },
          "sending": {
            "type": "integer",
            "description": "Number of messages in the `sending` status.",
            "format": "int32"
          },
          "sent": {
            "type": "integer",
            "description": "Number of messages in the `sent` status.",
            "format": "int32",
            "example": 1
          },
          "failed": {
            "type": "integer",
            "description": "Number of messages in the `failed` status.",
            "format": "int32",
            "example": 3
          },
          "delivered": {
            "type": "integer",
            "description": "Number of messages in the `delivered` status.",
            "format": "int32",
            "example": 12
          },
          "read": {
            "type": "integer",
            "description": "Number of messages in the `read` status.",
            "format": "int32",
            "example": 7
          },
          "cancelled": {
            "type": "integer",
            "description": "Number of messages in the `cancelled` status.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageBatchUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details about a message batch that can be patched."
      },
      "MessageChannelType": {
        "enum": [
          "sms",
          "rcs",
          "whatsapp",
          "apple"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "sms": "Short Message Service (SMS) as described\n[here](https://en.wikipedia.org/wiki/SMS).",
          "rcs": "Rich Communication Services (RCS)\npowered by [Google](https://businessmessages.google/),\nand as described\n[here](https://en.wikipedia.org/wiki/Rich_Communication_Services).",
          "whatsapp": "WhatsApp for Business as described\n[here](https://business.whatsapp.com/).",
          "apple": "Apple Business Chat as described\n[here](https://apple.com/ios/business-chat/)."
        }
      },
      "MessageCreateOptions": {
        "required": [
          "stream",
          "to"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "to": {
            "minLength": 1,
            "type": "string",
            "description": "Destination phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
            "format": "tel",
            "example": "+254722000000",
            "x-pii": true
          },
          "body": {
            "maxLength": 1600,
            "type": "string",
            "description": "Actual message content to be sent.\nRequired if `template` is not specified.",
            "nullable": true,
            "example": "Welcome home John!",
            "x-pii": true
          },
          "template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageCreateOptionsTemplate"
              }
            ],
            "description": "The template to use.\nRequired if `body` is not specified.",
            "nullable": true
          },
          "media": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageCreateOptionsMedia"
              }
            ],
            "description": "Media to be sent with the message.",
            "nullable": true
          },
          "stream": {
            "minLength": 1,
            "type": "string",
            "description": "The stream to use.\nIt can either be the name or unique identifier of the stream.",
            "example": "transactional"
          },
          "from": {
            "type": "string",
            "description": "The sender that sends this message.\nIt can be a short code, alphanumeric sender value or unique identifier of the sender.\nWhen not provided, Falu will use the most appropriate or first available sender in your stream.",
            "nullable": true,
            "example": "FALU ALERTS"
          },
          "schedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageCreateOptionsSchedule"
              }
            ],
            "description": "Schedule for sending the message.\nWhen not provided or set to `null`, the message\nis/are enqueued for immediate sending.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "to",
          "body"
        ]
      },
      "MessageCreateOptionsMedia": {
        "type": "object",
        "properties": {
          "url": {
            "maxLength": 512,
            "type": "string",
            "description": "Publicly accessible URL for the media file.\nRequired if `file` is not specified.",
            "format": "uri",
            "nullable": true,
            "example": "https://c1.staticflickr.com/3/2899/14341091933_1e92e62d12_b.jpg"
          },
          "file": {
            "type": "string",
            "description": "Unique identifier of the file containing the media file.\nRequired if `url` is not specified.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "MessageCreateOptionsSchedule": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time at which the message(s) should be sent.\nBetween 5 minutes and 30 days in the future.\nRequired if `delay` is not specified.",
            "format": "date-time",
            "nullable": true
          },
          "delay": {
            "type": "string",
            "description": "The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)\nfor which the message(s) should be delayed before sending, relative to the current server time.\nBetween 5 minutes and 30 days.\nRequired if `time` is not specified.",
            "format": "duration",
            "nullable": true,
            "example": "PT15M"
          }
        },
        "additionalProperties": false
      },
      "MessageCreateOptionsTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the template.",
            "nullable": true,
            "example": "mtpl_602a8dd0a54847479a874de4"
          },
          "alias": {
            "maxLength": 100,
            "type": "string",
            "description": "Alias of the template.",
            "nullable": true,
            "example": "otp-v2"
          },
          "language": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO language code](https://www.iso.org/iso-639-language-codes.html),\nin lowercase.\n\nThis determines the language translation to be used.\nWhen not provided, the default one is used.",
            "format": "language",
            "nullable": true,
            "example": "eng"
          },
          "model": {
            "type": "object",
            "additionalProperties": {},
            "description": "Model applied when rendering the template.",
            "nullable": true,
            "x-pii": true
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "model"
        ]
      },
      "MessageError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageErrorCode"
              }
            ],
            "description": "A short machine-readable string giving the reason for the failure."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false
      },
      "MessageErrorCode": {
        "enum": [
          "blocked",
          "other",
          "delivery_failed"
        ],
        "type": "string"
      },
      "MessageMedia": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Publicly accessible URL for the media file.\nPresent if `file` is not specified.",
            "format": "uri",
            "nullable": true,
            "example": "https://c1.staticflickr.com/3/2899/14341091933_1e92e62d12_b.jpg"
          },
          "file": {
            "type": "string",
            "description": "Unique identifier of the file containing the media file.\nPresent if `url` is not specified.",
            "nullable": true,
            "example": "file_602a8dd0a54847479a874de4"
          },
          "type": {
            "type": "string",
            "description": "Type of media.",
            "nullable": true,
            "example": "image/jpeg"
          },
          "size": {
            "type": "integer",
            "description": "Size in bytes of the media.",
            "format": "int64",
            "nullable": true,
            "example": 167802
          }
        },
        "additionalProperties": false
      },
      "MessageSchedule": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time at which the message is/was scheduled to be sent.",
            "format": "date-time"
          },
          "delay": {
            "type": "string",
            "description": "The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)\nfor which the message is/was to be delayed before sending.",
            "format": "duration",
            "nullable": true,
            "example": "P1D15M"
          }
        },
        "additionalProperties": false
      },
      "MessageSender": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "msdr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "stream": {
            "type": "string",
            "description": "Stream that owns the message sender.",
            "nullable": true,
            "example": "mstr_602a8dd0a54847479a874de4"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderType"
              }
            ],
            "description": "Type of sender."
          },
          "channel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageChannelType"
              }
            ],
            "description": "Channel for the sender."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderStatus"
              }
            ],
            "description": "Status of the message sender."
          },
          "phone_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderPhoneNumberDetails"
              }
            ],
            "description": "For `phone_number`senders, this contains details about the phone number.",
            "nullable": true
          },
          "short_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderShortCodeDetails"
              }
            ],
            "description": "For `short_code`senders, this contains details about the ShortCode.",
            "nullable": true
          },
          "alphanumeric": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderAlphanumericDetails"
              }
            ],
            "description": "For `alphanumeric`senders, this contains details about the Alphanumeric configuration.",
            "nullable": true
          },
          "whatsapp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderWhatsAppDetails"
              }
            ],
            "description": "For `whatsapp`senders, this contains details about the WhatsApp setup.",
            "nullable": true
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderGoogleDetails"
              }
            ],
            "description": "For `whatsapp`senders, this contains details about the Google RCS setup.",
            "nullable": true
          },
          "apple": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderAppleDetails"
              }
            ],
            "description": "For `whatsapp`senders, this contains details about the Apple Business Chat setup.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "MessageSenderAlphanumericDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The numeric code managed.\nThis value is not shown to the recipient.\nInstead, they see the `sender` value.\n\n\nYou can share it with your customers for them to send you messages.",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "description": "The alphanumeric code for sending messages.\nThis value is shown to the recipient but they cannot reply.\nInstead, use `code` or a different sender to receive messages.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSenderAppleDetails": {
        "type": "object",
        "additionalProperties": false
      },
      "MessageSenderCreateOptions": {
        "required": [
          "stream",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "stream": {
            "minLength": 1,
            "type": "string",
            "description": "The stream to use.\nIt can either be the name or unique identifier of the stream.",
            "example": "transactional"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSenderType"
              }
            ],
            "description": "Type of sender."
          },
          "alphanumeric": {
            "pattern": "^[a-zA-Z0-9_\\-+& ]{5,11}$",
            "type": "string",
            "description": "Alphanumeric code for sending messages, up to 11 characters.\nThis value cannot contain only numbers.\nRequired if the sender type is `alphanumeric`.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSenderGoogleDetails": {
        "type": "object",
        "additionalProperties": false
      },
      "MessageSenderPhoneNumberDetails": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "The phone number managed in\n[E.164 format](https://en.wikipedia.org/wiki/E.164).\nYou can use this number to receive messages.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          }
        },
        "additionalProperties": false
      },
      "MessageSenderShortCodeDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The numeric code managed.\nThis value is shown to the recipient and they can reply.\nYou can share it with your customers for them to send you messages.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSenderStatus": {
        "enum": [
          "pending",
          "active",
          "suspended",
          "inactive"
        ],
        "type": "string"
      },
      "MessageSenderType": {
        "enum": [
          "phone_number",
          "short_code",
          "alphanumeric",
          "whatsapp",
          "google",
          "apple"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "alphanumeric": "A branded sender identifier that can be used for sending messages.\nIts value is shown to the recipient but they cannot reply.\nInstead, use the managed `short_code` in the sender to receive messages."
        }
      },
      "MessageSenderUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSenderWhatsAppDetails": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "description": "The phone number in use\n[E.164 format](https://en.wikipedia.org/wiki/E.164).\nYou can use this number to receive messages.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          }
        },
        "additionalProperties": false
      },
      "MessageSourceTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the template.",
            "nullable": true,
            "example": "mtpl_602a8dd0a54847479a874de4"
          },
          "language": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO language code](https://www.iso.org/iso-639-language-codes.html),\nin lowercase representing the translation that was used.\nWhen not populated, the default one was used.",
            "format": "language",
            "nullable": true,
            "example": "eng"
          },
          "model": {
            "type": "object",
            "additionalProperties": {},
            "description": "Model applied when rendering the template.",
            "nullable": true,
            "x-pii": true
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "model"
        ]
      },
      "MessageStatus": {
        "enum": [
          "accepted",
          "sending",
          "sent",
          "failed",
          "delivered",
          "read",
          "cancelled"
        ],
        "type": "string",
        "description": "Represents a the status of a message.",
        "x-enumDescriptions": {
          "accepted": "Falu has received your API request to send a message and a sender is being dynamically selected.",
          "sent": "The nearest upstream carrier accepted the message.",
          "delivered": "Falu has received confirmation of message delivery from the upstream provider, where available.",
          "read": "Falu has received a message read receipt from the upstream provider, where available."
        }
      },
      "MessageStream": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "mstr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "name": {
            "type": "string",
            "description": "Name of the stream.",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStreamType"
              }
            ],
            "description": "Type of stream."
          },
          "archived": {
            "type": "string",
            "description": "Time at which the stream was archived.\nOnly populated once a stream is archived.",
            "format": "date-time",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "Indicates if the stream is one created by default."
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "MessageStreamCreateOptions": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-z]([a-z0-9\\-_]+)$",
            "type": "string",
            "description": "A string used for easier identification.\nThis value cannot be changed after creation.\nAllowed characters are numbers, lowercase ASCII letters, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "example": "Outsider Marketing"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStreamType"
              }
            ],
            "description": "Type of stream."
          }
        },
        "additionalProperties": false
      },
      "MessageStreamType": {
        "enum": [
          "transactional",
          "inbound",
          "marketing"
        ],
        "type": "string",
        "description": "Represents the types of streams for messages."
      },
      "MessageStreamUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details about a message stream that can be patched."
      },
      "MessageSuppression": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "msup_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "stream": {
            "type": "string",
            "description": "Stream where the suppression exists.",
            "nullable": true,
            "example": "mstr_602a8dd0a54847479a874de4"
          },
          "to": {
            "type": "string",
            "description": "Destination phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000",
            "x-pii": true
          },
          "origin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSuppressionOrigin"
              }
            ],
            "description": "Origin of the suppression."
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSuppressionReason"
              }
            ],
            "description": "Reason for the suppression"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "to"
        ]
      },
      "MessageSuppressionCreateOptions": {
        "required": [
          "stream",
          "to"
        ],
        "type": "object",
        "properties": {
          "to": {
            "minLength": 1,
            "type": "string",
            "description": "Destination phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
            "format": "tel",
            "example": "+254722000000",
            "x-pii": true
          },
          "stream": {
            "minLength": 1,
            "type": "string",
            "description": "The stream to use.\nIt can either be the name or unique identifier of the stream.",
            "example": "transactional"
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "to"
        ]
      },
      "MessageSuppressionOrigin": {
        "enum": [
          "recipient",
          "workspace",
          "admin",
          "mobile_operator"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "recipient": "The suppression was requested by the recipient of a message.\n\n\nThis usually happens by following unsubscribe instructions included in the message, where applicable",
          "workspace": "The suppression was added via the API or the dashboard.",
          "admin": "The suppression was added as part of administrative tasks by Falu.",
          "mobile_operator": "The suppression was requested by the mobile operator."
        }
      },
      "MessageSuppressionReason": {
        "enum": [
          "spam_complaint",
          "manual"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "spam_complaint": "The suppression was added following a spam complaint.",
          "manual": "The suppression was added manually."
        }
      },
      "MessageTemplate": {
        "required": [
          "alias",
          "body"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z]([a-zA-Z0-9\\-_]+)$",
            "type": "string",
            "description": "A string used for easier identification of a message template.\nAllowed characters are numbers, ASCII letters, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "example": "otp-v2"
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Content to use when this template is used to send messages.\nSee our template language documentation for more information on the syntax for this field.",
            "example": "Your OTP code is: {{otp}}"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageTemplateTranslation"
            },
            "description": "Translations for the template.\nEach key must be a three-letter\n[ISO language code](https://www.iso.org/iso-639-language-codes.html), in lowercase.",
            "nullable": true,
            "example": {
              "swa": {
                "body": "Msimbo wako wa OTP ni: {{otp}}"
              },
              "spa": {
                "body": "Su código OTP es: {{otp}}"
              },
              "fra": {
                "body": "Votre code OTP est : {{otp}}"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "mtpl_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageTemplateType"
              }
            ],
            "description": "Type of the template."
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a template that can be used to send a message."
      },
      "MessageTemplateCreateOptions": {
        "required": [
          "alias",
          "body"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z]([a-zA-Z0-9\\-_]+)$",
            "type": "string",
            "description": "A string used for easier identification of a message template.\nAllowed characters are numbers, ASCII letters, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "example": "otp-v2"
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Content to use when this template is used to send messages.\nSee our template language documentation for more information on the syntax for this field.",
            "example": "Your OTP code is: {{otp}}"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageTemplateTranslation"
            },
            "description": "Translations for the template.\nEach key must be a three-letter\n[ISO language code](https://www.iso.org/iso-639-language-codes.html), in lowercase.",
            "nullable": true,
            "example": {
              "swa": {
                "body": "Msimbo wako wa OTP ni: {{otp}}"
              },
              "spa": {
                "body": "Su código OTP es: {{otp}}"
              },
              "fra": {
                "body": "Votre code OTP est : {{otp}}"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageTemplateType"
              }
            ],
            "description": "Type of the template.\nDefaults to `transactional`",
            "default": "transactional"
          }
        },
        "additionalProperties": false
      },
      "MessageTemplateTranslation": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Content to use when this template is used to send messages for the given language.\nSee our template language documentation for more information on the syntax for this field."
          }
        },
        "additionalProperties": false
      },
      "MessageTemplateType": {
        "enum": [
          "transactional",
          "marketing",
          "verification"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "transactional": "Templates communicating important information such as account updates, order updates, and other alerts.",
          "marketing": "Templates for communicating promotional offers, product announcements, and more to increase awareness and engagement.",
          "verification": "Templates communicating authentication/verification codes (e.g. one time passwords) that allow\nyour customers to securely access their accounts or authorize an action."
        }
      },
      "MessageTemplateUpdateOptions": {
        "required": [
          "alias",
          "body"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z]([a-zA-Z0-9\\-_]+)$",
            "type": "string",
            "description": "A string used for easier identification of a message template.\nAllowed characters are numbers, ASCII letters, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "example": "otp-v2"
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Content to use when this template is used to send messages.\nSee our template language documentation for more information on the syntax for this field.",
            "example": "Your OTP code is: {{otp}}"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageTemplateTranslation"
            },
            "description": "Translations for the template.\nEach key must be a three-letter\n[ISO language code](https://www.iso.org/iso-639-language-codes.html), in lowercase.",
            "nullable": true,
            "example": {
              "swa": {
                "body": "Msimbo wako wa OTP ni: {{otp}}"
              },
              "spa": {
                "body": "Su código OTP es: {{otp}}"
              },
              "fra": {
                "body": "Votre code OTP est : {{otp}}"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details about a template that can be patched."
      },
      "MessageTemplateValidateOptions": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageTemplateType"
              }
            ],
            "description": "Type of the template.\nDefaults to `transactional`",
            "default": "transactional"
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "The content to use when this template is used to send messages.\nSee our template language documentation for more information on the syntax for this field.",
            "example": "Your OTP code is: {{otp}}"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageTemplateTranslation"
            },
            "description": "Translations for the template.\nEach key must be a three-letter\n[ISO language code](https://www.iso.org/iso-639-language-codes.html), in lowercase.",
            "nullable": true,
            "example": {
              "swa": {
                "body": "Msimbo wako wa OTP ni: {{otp}}"
              },
              "spa": {
                "body": "Su código OTP es: {{otp}}"
              },
              "fra": {
                "body": "Votre code OTP est : {{otp}}"
              }
            }
          },
          "model": {
            "type": "object",
            "additionalProperties": {},
            "description": "The template model to be used when rendering test content.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageTemplateValidateResponse": {
        "type": "object",
        "properties": {
          "rendered": {
            "type": "string",
            "description": "Text content that would be produced by the template\nusing the `model`.",
            "nullable": true,
            "example": "Your OTP code is: 123456"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageTemplateValidateResponseTranslation"
            },
            "description": "Translations.\nEach key must be a three-letter\n[ISO language code](https://www.iso.org/iso-639-language-codes.html), in lowercase.",
            "nullable": true,
            "example": {
              "swa": {
                "rendered": "Msimbo wako wa OTP ni: 123456"
              },
              "spa": {
                "rendered": "Su código OTP es: 123456"
              },
              "fra": {
                "rendered": "Votre code OTP est : 123456"
              }
            }
          },
          "model": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "description": "A JSON object structure that will provide information\nfor all keys found in the template content submitted.\nIf a `model` was submitted, it will be merged\nand returned with this model.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageTemplateValidateResponseTranslation": {
        "type": "object",
        "properties": {
          "rendered": {
            "type": "string",
            "description": "Text content that would be produced by the template for the given language using the `model`.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageUpdateOptions": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details about a message that can be patched."
      },
      "MoneyBalances": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "mpesa": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "description": "Breakdown of balance by business code represented in the smallest currency unit.\n`null` or missing value means the balance has not been updated/populated.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Balances for money services."
      },
      "Payment": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "pa_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of the payment in smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            ],
            "description": "Status of the payment."
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "succeeded": {
            "type": "string",
            "description": "Time at which the payment succeeded. Only populated when successful.",
            "format": "date-time",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the Customer this Payment belongs to, if one exists.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "authorization": {
            "type": "string",
            "description": "Identifier of the payment authorization, if the payment passed through a flow requiring authorization.",
            "nullable": true,
            "example": "pauth_602a8dd0a54847479a874de4"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentType"
              }
            ],
            "description": "Type of the payment.\nAn additional property is populated on the payment with a name matching this value.\nIt contains additional information specific to the payment type."
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMpesaDetails"
              }
            ],
            "description": "If this is an MPESA payment, this contains details about the MPESA payment.",
            "nullable": true
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentError"
              }
            ],
            "description": "Details on the payment error.\nPresent when in failed state.",
            "nullable": true
          },
          "payment_refund": {
            "type": "string",
            "description": "Identifier of the payment refund, if the payment has been refunded.",
            "nullable": true,
            "example": "pr_602a8dd0a54847479a874de4"
          },
          "money_provider": {
            "type": "string",
            "description": "Identifier of the money provider used to receive the money.",
            "nullable": true,
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a payment."
      },
      "PaymentAuthorization": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "pauth_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "amount": {
            "type": "integer",
            "description": "Amount that was authorized or rejected, in smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "approved": {
            "type": "boolean",
            "description": "Whether the authorization has been approved.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAuthorizationStatus"
              }
            ],
            "description": "Status of the payment authorization."
          },
          "status_reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAuthorizationStatusReason"
              }
            ],
            "description": "Reason for the given status of the payment authorization.",
            "nullable": true
          },
          "decline_reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAuthorizationDeclineReason"
              }
            ],
            "description": "Reason for declining the payment authorization.\nOnly populated when the authorization is not approved.",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentType"
              }
            ],
            "description": "Type of the payment requiring authorization.\nAn additional property is populated on the authorization with a name matching this value.\nIt contains additional information specific to the payment type."
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMpesaDetails"
              }
            ],
            "description": "If this is an MPESA payment authorization, this contains details about the MPESA payment authorization.",
            "nullable": true
          },
          "payment": {
            "type": "string",
            "description": "Identifier of the payment created after the authorization is approved and closed.",
            "nullable": true,
            "example": "pa_602a8dd0a54847479a874de4"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a payment authorization."
      },
      "PaymentAuthorizationApproveOptions": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Options for approving a payment authorization."
      },
      "PaymentAuthorizationDeclineOptions": {
        "required": [
          "decline_reason"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "decline_reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAuthorizationDeclineReason"
              }
            ],
            "description": "Reason for declining the payment authorization.\nDefaults to `other`.\n`workspace_suspended` is not allowed."
          }
        },
        "additionalProperties": false,
        "description": "Options for declining a payment authorization."
      },
      "PaymentAuthorizationDeclineReason": {
        "enum": [
          "other",
          "workspace_suspended",
          "insufficient_amount",
          "money_provider_suspended"
        ],
        "type": "string",
        "description": "Reasons for declining a payment authorization.",
        "x-enumDescriptions": {
          "workspace_suspended": "The workspace is currently suspended.",
          "insufficient_amount": "The amount is not enough to serve the purpose of the payment.",
          "money_provider_suspended": "The money provider is currently suspended"
        }
      },
      "PaymentAuthorizationStatus": {
        "enum": [
          "pending",
          "closed",
          "reversed"
        ],
        "type": "string",
        "description": "Statuses of a payment authorization.",
        "x-enumDescriptions": {
          "pending": "The authorization was created and is awaiting approval or was approved and is awaiting capture.",
          "closed": "The authorization was declined or captured.",
          "reversed": "The authorization was reversed by the payment provider or expired without capture."
        }
      },
      "PaymentAuthorizationStatusReason": {
        "enum": [
          "default",
          "invalid",
          "realtime",
          "failed"
        ],
        "type": "string",
        "description": "Reasons for a given status of payment authorization.",
        "x-enumDescriptions": {
          "default": "No authorization webhook endpoint is set.",
          "invalid": "Authorization webhook endpoint is invalid.",
          "realtime": "Authorization webhook endpoint was used to approve or decline.",
          "failed": "Synchronous webhook delivery to the authorization webhook endpoint failed."
        }
      },
      "PaymentAuthorizationUpdateOptions": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a payment authorization."
      },
      "PaymentCreateOptions": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "amount": {
            "minimum": 1,
            "type": "integer",
            "description": "Amount of the payment in smallest currency unit.",
            "format": "int64",
            "example": 1000
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "example": "kes"
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentCreateOptionsMpesa"
              }
            ],
            "description": "Details about initiation by MPESA's STK Push",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the Customer this Payment belongs to, if one exists.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false,
        "description": "Options for creating a payment."
      },
      "PaymentCreateOptionsMpesa": {
        "required": [
          "phone",
          "reference"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "minLength": 1,
            "type": "string",
            "description": "Phone number representing the account to be charged, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
            "format": "tel",
            "example": "+254722000000",
            "x-pii": true
          },
          "reference": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "Reference that the payment will be made in.\nThis can be an account number.",
            "example": "INV-2020-12-01-1234",
            "x-pii": true
          },
          "paybill": {
            "type": "boolean",
            "description": "Set true if the payment to be initiated is to be made to a PayBill;\nfalse, the payment is made to a BuyGoods till."
          },
          "destination": {
            "maxLength": 7,
            "minLength": 5,
            "type": "string",
            "description": "The short code of the receiver.\nWhen not provided, either the default incoming business code\nor the first business code for the workspace is used when `paybill` is set to `true`.\n\n\nThis value is usually different from the business short code when using BuyGoods.",
            "nullable": true,
            "example": "200200"
          }
        },
        "additionalProperties": false,
        "description": "Options for creating an MPESA payment.",
        "x-pii": [
          "phone",
          "reference"
        ]
      },
      "PaymentError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FailureReason"
              }
            ],
            "description": "Reason for failure of a payment, transfer or reversal."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false,
        "description": "Represents an error for payments."
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "billing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodBilling"
              }
            ],
            "description": "Billing information associated with the payment method.\nIt may be used and/or required by particular types of payment methods.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "pm_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodType"
              }
            ],
            "description": "Type of the payment method.\nAn additional property is populated on the payment method with a name matching this value.\nIt contains additional information specific to the payment method type."
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodMpesa"
              }
            ],
            "description": "If this is an MPESA payment method, this contains details about the MPESA payment method.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodAttachOptions": {
        "required": [
          "customer"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the Customer this to attach to.",
            "example": "cust_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodBilling": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAddress"
              }
            ],
            "description": "The billing address.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address.",
            "format": "email",
            "nullable": true,
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "Full name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number.",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCreateOptions": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "billing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodBilling"
              }
            ],
            "description": "Billing information associated with the payment method.\nIt may be used and/or required by particular types of payment methods.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodType"
              }
            ],
            "description": "The type of the payment method.\nAn additional property is populated on the payment method with a name matching this value.\nIt contains additional information specific to the payment method type."
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodMpesa"
              }
            ],
            "description": "If this is an MPESA payment method, this contains details about the MPESA payment method.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodMpesa": {
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "minLength": 1,
            "type": "string",
            "description": "Phone number representing the MPESA wallet to be charged.",
            "format": "tel",
            "example": "+254722000000",
            "x-pii": true
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "phone"
        ]
      },
      "PaymentMethodType": {
        "enum": [
          "mpesa"
        ],
        "type": "string"
      },
      "PaymentMethodUpdateOptions": {
        "type": "object",
        "properties": {
          "billing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodBilling"
              }
            ],
            "description": "Billing information associated with the payment method.\nIt may be used and/or required by particular types of payment methods.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a payment method."
      },
      "PaymentMpesaDetails": {
        "type": "object",
        "properties": {
          "business_short_code": {
            "type": "string",
            "description": "The target MPESA business short code.",
            "nullable": true,
            "example": "200200"
          },
          "request_id": {
            "type": "string",
            "description": "Unique identifier for request as issued by MPESA.\nOnly populated for flows that initiate the transaction instead of MPESA.\nThe value is only available after the request is sent to MPESA.\n\n\nThis is also referred to as the `ConversationId`.",
            "nullable": true,
            "example": "AG_20210803_000041754cc615312171"
          },
          "receipt": {
            "type": "string",
            "description": "Unique transaction identifier generated by MPESA.\nOnly populated for completed transactions.",
            "nullable": true,
            "example": "PGV520PUFN"
          },
          "type": {
            "type": "string",
            "description": "Type of payment.",
            "nullable": true,
            "example": "Paybill"
          },
          "reference": {
            "type": "string",
            "description": "Reference the payment was made in.",
            "nullable": true,
            "example": "INV-2020-12-01-1234",
            "x-pii": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number that made the payment, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
            "format": "tel",
            "nullable": true,
            "example": "+254722000000",
            "x-pii": true
          },
          "payer": {
            "type": "string",
            "description": "Name of the entity making or that made the payment.",
            "nullable": true,
            "example": "JOHN KAMAU ONYANGO",
            "x-pii": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the provider details for an MPESA payment.",
        "x-pii": [
          "reference",
          "phone",
          "payer"
        ]
      },
      "PaymentRefund": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "pr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "amount": {
            "type": "integer",
            "description": "Amount refunded in smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentRefundReason"
              }
            ],
            "description": "Reason for the refund."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentRefundStatus"
              }
            ],
            "description": "Status of the refund."
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "succeeded": {
            "type": "string",
            "description": "Time at which the refund succeeded. Only populated when successful.",
            "format": "date-time",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the Customer this Payment Refund belongs to, if one exists.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "payment": {
            "type": "string",
            "description": "Identifier of the payment refunded.",
            "nullable": true,
            "example": "pa_602a8dd0a54847479a874de4"
          },
          "money_provider": {
            "type": "string",
            "description": "Identifier of the money provider used to receive the money being refunded.",
            "nullable": true,
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentRefundMpesaDetails"
              }
            ],
            "description": "Details of the refund if done via MPESA.\nOnly populated if the payment being refunded used an MPESA instrument.",
            "nullable": true
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentRefundError"
              }
            ],
            "description": "Details on the payment refund error.\nPresent when in failed state.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a refund for a payment."
      },
      "PaymentRefundCreateOptions": {
        "required": [
          "payment",
          "reason"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "payment": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the payment to refund.",
            "example": "pa_602a8dd0a54847479a874de4"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentRefundReason"
              }
            ],
            "description": "Reason for the refund."
          }
        },
        "additionalProperties": false,
        "description": "Options for creating a payment refund."
      },
      "PaymentRefundError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FailureReason"
              }
            ],
            "description": "Reason for failure of a payment, transfer or reversal."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false,
        "description": "Represents an error for payment refunds."
      },
      "PaymentRefundMpesaDetails": {
        "type": "object",
        "properties": {
          "business_short_code": {
            "type": "string",
            "description": "The target MPESA business short code.",
            "nullable": true,
            "example": "200200"
          },
          "request_id": {
            "type": "string",
            "description": "Unique identifier for request as issued by MPESA.\nOnly populated for flows that initiate the transaction instead of MPESA.\nThe value is only available after the request is sent to MPESA.\n\n\nThis is also referred to as the `ConversationId`.",
            "nullable": true,
            "example": "AG_20210803_000041754cc615312171"
          },
          "receipt": {
            "type": "string",
            "description": "Unique transaction identifier generated by MPESA.\nOnly populated for completed transactions.",
            "nullable": true,
            "example": "PGV520PUFN"
          }
        },
        "additionalProperties": false,
        "description": "Represents the details for an MPESA payment refund."
      },
      "PaymentRefundReason": {
        "enum": [
          "duplicate",
          "fraudulent",
          "customer_requested",
          "other"
        ],
        "type": "string",
        "description": "Reasons for refunding a payment."
      },
      "PaymentRefundStatus": {
        "enum": [
          "pending",
          "in_transit",
          "succeeded",
          "failed"
        ],
        "type": "string",
        "description": "Statuses of a payment refund."
      },
      "PaymentRefundUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a payment refund."
      },
      "PaymentStatus": {
        "enum": [
          "pending",
          "succeeded",
          "failed"
        ],
        "type": "string",
        "description": "Statuses of a payment."
      },
      "PaymentType": {
        "enum": [
          "mpesa"
        ],
        "type": "string",
        "description": "The medium used for the payment."
      },
      "PaymentUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a payment."
      },
      "Period": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "The starting date of the period.",
            "format": "date-time",
            "example": "2019-08-24T14:15:22.0000000+00:00"
          },
          "end": {
            "type": "string",
            "description": "The ending date of the period",
            "format": "date-time",
            "example": "2019-09-24T14:15:22.0000000+00:00"
          }
        },
        "additionalProperties": false,
        "description": "Represents a period for something or anything really."
      },
      "PhysicalAddress": {
        "required": [
          "city",
          "country",
          "line1"
        ],
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 200,
            "minLength": 4,
            "type": "string",
            "description": "The first line.\nAlso referred to as the `street-address`.",
            "example": "14 Riverside Drive"
          },
          "line2": {
            "maxLength": 200,
            "type": "string",
            "description": "The second line.\nAlso referred to as the `apt, building, suite no. etc.`",
            "nullable": true,
            "example": "Block B3, Suite 1Z3"
          },
          "city": {
            "maxLength": 100,
            "minLength": 4,
            "type": "string",
            "description": "The city.",
            "example": "Nairobi"
          },
          "postal_code": {
            "maxLength": 50,
            "minLength": 4,
            "type": "string",
            "description": "The postal code or zip code.\nEach country has its way of denoting postal codes.",
            "format": "postal-code",
            "nullable": true,
            "example": "00100"
          },
          "state": {
            "maxLength": 100,
            "type": "string",
            "description": "The state or province.\nAlso referred to as the `province`",
            "nullable": true,
            "example": "Nairobi"
          },
          "country": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "description": "The country.",
            "example": "Kenya"
          }
        },
        "additionalProperties": false
      },
      "Price": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether the price is currently available for new purchases.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "price_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "product": {
            "type": "string",
            "description": "Identifier of the product that this price belongs to.",
            "nullable": true,
            "example": "prod_602a8dd0a54847479a874de4"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceType"
              }
            ],
            "description": "The type of the price."
          },
          "recurring": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceRecurring"
              }
            ],
            "description": "The recurring details of the price.\nOnly for `recurring` types.",
            "nullable": true
          },
          "unit_amount": {
            "type": "integer",
            "description": "The unit amount in smallest currency unit to be charged.",
            "format": "int64",
            "nullable": true,
            "example": 58000
          },
          "tiering_mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceTieringMode"
              }
            ],
            "description": "Determines how the tiering behaviour is applied on the quantity.\nIn `volume`-based tiering, the maximum quantity within a period determines the per unit price,\nwhereas in `graduated` tiering pricing can successively change as the quantity grows.\nWhen set to `none`, `unit_amount` must be provided,\notherwise at least one element in `tiers` must be provided.\nDefaults to `none`."
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTier"
            },
            "description": "The pricing tiers.\nRequired when `tiering_mode` is not set to `none`",
            "nullable": true,
            "example": [
              {
                "breakpoint": 10,
                "flat_amount": null,
                "unit_amount": 10
              },
              {
                "breakpoint": 20,
                "flat_amount": 3,
                "unit_amount": 8
              },
              {
                "breakpoint": null,
                "flat_amount": 10,
                "unit_amount": 5
              }
            ]
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "PriceCreateOptions": {
        "required": [
          "currency",
          "product",
          "type"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether the price is currently available for new purchases.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "product": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the product that this price will belong to.",
            "example": "prod_602a8dd0a54847479a874de4"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "example": "kes"
          },
          "unit_amount": {
            "minimum": 0,
            "type": "integer",
            "description": "The unit amount in smallest currency unit representing how much to charge.\nUse `0` for a free price.\nRequired unless `tiering_mode` is set to `none`",
            "format": "int64",
            "nullable": true,
            "example": 58000
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceType"
              }
            ],
            "description": "The type of the price."
          },
          "recurring": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceRecurring"
              }
            ],
            "description": "The recurring details of the price.\nOnly for `recurring` types.",
            "nullable": true
          },
          "tiering_mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceTieringMode"
              }
            ],
            "description": "Determines how the tiering behaviour is applied on the quantity.\nIn `volume`-based tiering, the maximum quantity within a period determines the per unit price,\nwhereas in `graduated` tiering pricing can successively change as the quantity grows.\nWhen set to `none`, `unit_amount` must be provided,\notherwise at least one element in `tiers` must be provided.\nDefaults to `none`."
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTier"
            },
            "description": "The pricing tiers.\nRequired when `tiering_mode` is not set to `none`",
            "nullable": true,
            "example": [
              {
                "breakpoint": 10,
                "flat_amount": null,
                "unit_amount": 10
              },
              {
                "breakpoint": 20,
                "flat_amount": 3,
                "unit_amount": 8
              },
              {
                "breakpoint": null,
                "flat_amount": 10,
                "unit_amount": 5
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "PriceMeteringAggregation": {
        "enum": [
          "sum",
          "max",
          "last"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "sum": "Sum up all usage during the billing period.",
          "max": "Use the usage record with the maximum value during the billing period.",
          "last": "Use the last reported value within the billing period."
        }
      },
      "PriceMeteringType": {
        "enum": [
          "seats",
          "usage_units"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "seats": "Bills the quantity set when adding/updating the subscription item or it subscription.",
          "usage_units": "Aggregates the usage based on reported usage records."
        }
      },
      "PriceRecurring": {
        "type": "object",
        "properties": {
          "interval": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceRecurringInterval"
              }
            ],
            "description": "The billing frequency.\nDefaults to `year`."
          },
          "metering_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceMeteringType"
              }
            ],
            "description": "How the quantity per period should be billed.\n`seats` bills the quantity set when adding/updating the subscription item whereas\n`usage_units` aggregates based on usage records.\nDefaults to `seats`.",
            "default": "seats"
          },
          "metering_aggregation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceMeteringAggregation"
              }
            ],
            "description": "How the usage records should be aggregated for seats with `metering_type=usage_units`.\nDefaults to `sum`.",
            "default": "sum"
          }
        },
        "additionalProperties": false
      },
      "PriceRecurringInterval": {
        "enum": [
          "year",
          "month",
          "week",
          "day"
        ],
        "type": "string"
      },
      "PriceTier": {
        "type": "object",
        "properties": {
          "breakpoint": {
            "minimum": 1,
            "type": "integer",
            "description": "Value up to and including which the quantity will be container in the tier.\nSetting `null` is only allowed for one tier in the list of tiers.",
            "format": "int64",
            "nullable": true
          },
          "flat_amount": {
            "minimum": 0,
            "type": "integer",
            "description": "Price for the entire tier, regardless of the number of units in the tier.",
            "format": "int64",
            "nullable": true
          },
          "unit_amount": {
            "minimum": 0,
            "type": "integer",
            "description": "Per unit price for each individual unit for which this tier applies.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceTieringMode": {
        "enum": [
          "none",
          "volume",
          "graduated"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "none": "A fixed per-unit price is used to charge for each quantity.",
          "volume": "The maximum quantity within a period determines the per-unit price.",
          "graduated": "Pricing can successively change as the quantity changes."
        }
      },
      "PriceType": {
        "enum": [
          "once",
          "recurring"
        ],
        "type": "string"
      },
      "PriceUpdateOptions": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether the price is currently available for new purchases.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "required": [
          "images",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 3,
            "type": "string",
            "description": "The product’s name, meant to be displayable to the customer.",
            "example": "Express Laundry"
          },
          "description": {
            "type": "string",
            "description": "The product’s description, meant to be displayable to the customer.\nUse this field to optionally store a long form explanation of the\nproduct being sold for your own rendering purposes.",
            "nullable": true,
            "example": "Laundry service delivered express in 12 hours."
          },
          "unit_label": {
            "type": "string",
            "description": "An optional label that represents units of the product.\nWhen set, this will be used for presentation in receipts, invoices, and other customer interactions.\n\n\nThis value should be in plural form.",
            "nullable": true,
            "example": "Shirts"
          },
          "url": {
            "maxLength": 512,
            "type": "string",
            "description": "A URL of a publicly-accessible webpage for this product.",
            "format": "uri",
            "nullable": true,
            "example": "https://contoso.com/products/express-laundry-12-hours"
          },
          "images": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "example": "https://example.com"
            },
            "description": "A list of up to 5 URLs of images for this product, meant to be displayable to the customer.",
            "example": [
              "https://contoso.com/images/express-laundry-12-1.jpg",
              "https://contoso.com/images/express-laundry-12-small.png",
              "https://contoso.com/images/express-laundry-12-large.jpg"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the product is currently available for purchase.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "prod_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "ProductCreateOptions": {
        "required": [
          "images",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 3,
            "type": "string",
            "description": "The product’s name, meant to be displayable to the customer.",
            "example": "Express Laundry"
          },
          "description": {
            "type": "string",
            "description": "The product’s description, meant to be displayable to the customer.\nUse this field to optionally store a long form explanation of the\nproduct being sold for your own rendering purposes.",
            "nullable": true,
            "example": "Laundry service delivered express in 12 hours."
          },
          "unit_label": {
            "type": "string",
            "description": "An optional label that represents units of the product.\nWhen set, this will be used for presentation in receipts, invoices, and other customer interactions.\n\n\nThis value should be in plural form.",
            "nullable": true,
            "example": "Shirts"
          },
          "url": {
            "maxLength": 512,
            "type": "string",
            "description": "A URL of a publicly-accessible webpage for this product.",
            "format": "uri",
            "nullable": true,
            "example": "https://contoso.com/products/express-laundry-12-hours"
          },
          "images": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "example": "https://example.com"
            },
            "description": "A list of up to 5 URLs of images for this product, meant to be displayable to the customer.",
            "example": [
              "https://contoso.com/images/express-laundry-12-1.jpg",
              "https://contoso.com/images/express-laundry-12-small.png",
              "https://contoso.com/images/express-laundry-12-large.jpg"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the product is currently available for purchase.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateOptions": {
        "required": [
          "images",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 3,
            "type": "string",
            "description": "The product’s name, meant to be displayable to the customer.",
            "example": "Express Laundry"
          },
          "description": {
            "type": "string",
            "description": "The product’s description, meant to be displayable to the customer.\nUse this field to optionally store a long form explanation of the\nproduct being sold for your own rendering purposes.",
            "nullable": true,
            "example": "Laundry service delivered express in 12 hours."
          },
          "unit_label": {
            "type": "string",
            "description": "An optional label that represents units of the product.\nWhen set, this will be used for presentation in receipts, invoices, and other customer interactions.\n\n\nThis value should be in plural form.",
            "nullable": true,
            "example": "Shirts"
          },
          "url": {
            "maxLength": 512,
            "type": "string",
            "description": "A URL of a publicly-accessible webpage for this product.",
            "format": "uri",
            "nullable": true,
            "example": "https://contoso.com/products/express-laundry-12-hours"
          },
          "images": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "example": "https://example.com"
            },
            "description": "A list of up to 5 URLs of images for this product, meant to be displayable to the customer.",
            "example": [
              "https://contoso.com/images/express-laundry-12-1.jpg",
              "https://contoso.com/images/express-laundry-12-small.png",
              "https://contoso.com/images/express-laundry-12-large.jpg"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the product is currently available for purchase.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SortingOrder": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "The sorting order for a list operation.",
        "x-enumDescriptions": {
          "asc": "Earliest first.",
          "desc": "Latest first."
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "coupon": {
            "type": "string",
            "description": "Identifier of the coupon to apply to this subscription.\nA coupon applied to a subscription will only affect invoices created for that particular subscription.",
            "nullable": true,
            "example": "coupon_602a8dd0a54847479a874de4"
          },
          "default_tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tax rates that will apply to any subscription item that does not have rax rates set.\nInvoices created from this subscription will have their default tax rates populated from here.",
            "nullable": true
          },
          "default_payment_method": {
            "type": "string",
            "description": "Identifier of the default payment method that's attached to the customer associated with the subscription,\nto be used as the default payment method for subscription.\nIf none is set, the customer's default payment method us used.",
            "nullable": true,
            "example": "pm_602a8dd0a54847479a874de4"
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "auto_renew": {
            "type": "boolean",
            "description": "Whether the subscription should auto renew at the end of the current billing period.\nWhen set totrue, the subscription will be advanced to a new billing period.\nWhen set tofalse, the subscription will be cancelled at the end of the current billing period.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "sub_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionStatus"
              }
            ],
            "description": "Status of the subscription."
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the customer this subscription belongs to.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "interval": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionBillingInterval"
              }
            ],
            "description": "The billing frequency for the subscription."
          },
          "cancelled": {
            "type": "string",
            "description": "Date of the subscription's cancellation if it has been cancelled.",
            "format": "date-time",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItem"
            },
            "description": "List of subscription items.",
            "nullable": true
          },
          "current_period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Period"
              }
            ],
            "description": "Current billing period for the subscription.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "SubscriptionBillingInterval": {
        "enum": [
          "year",
          "month",
          "week",
          "day"
        ],
        "type": "string"
      },
      "SubscriptionCancelOptions": {
        "required": [
          "prorate"
        ],
        "type": "object",
        "properties": {
          "prorate": {
            "type": "boolean",
            "description": "Whether to generate a proration invoice item that credits remaining unused time until the subscription period end."
          }
        },
        "additionalProperties": false
      },
      "SubscriptionCreateOptions": {
        "required": [
          "customer",
          "items"
        ],
        "type": "object",
        "properties": {
          "coupon": {
            "type": "string",
            "description": "Identifier of the coupon to apply to this subscription.\nA coupon applied to a subscription will only affect invoices created for that particular subscription.",
            "nullable": true,
            "example": "coupon_602a8dd0a54847479a874de4"
          },
          "default_tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tax rates that will apply to any subscription item that does not have rax rates set.\nInvoices created from this subscription will have their default tax rates populated from here.",
            "nullable": true
          },
          "default_payment_method": {
            "type": "string",
            "description": "Identifier of the default payment method that's attached to the customer associated with the subscription,\nto be used as the default payment method for subscription.\nIf none is set, the customer's default payment method us used.",
            "nullable": true,
            "example": "pm_602a8dd0a54847479a874de4"
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "auto_renew": {
            "type": "boolean",
            "description": "Whether the subscription should auto renew at the end of the current billing period.\nWhen set totrue, the subscription will be advanced to a new billing period.\nWhen set tofalse, the subscription will be cancelled at the end of the current billing period.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "customer": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the Customer this Subscription belongs to.",
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "trial": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionTrialOptions"
              }
            ],
            "description": "The trial options for the subscription (if any).",
            "nullable": true
          },
          "items": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionCreateOptionsItem"
            },
            "description": "A list of up to 5 subscription items, each with an attached price."
          }
        },
        "additionalProperties": false
      },
      "SubscriptionCreateOptionsItem": {
        "required": [
          "price"
        ],
        "type": "object",
        "properties": {
          "price": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the price to subscribe to.",
            "example": "price_602a8dd0a54847479a874de4"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the price that to subscribed for.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the tax rates which apply to this subscription item.\nWhen set, the default tax rates on the subscription do not apply to this subscription item.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "prorate": {
            "type": "boolean",
            "description": "Whether to generate a proration invoice item that credits remaining unused time until the subscription period end.\nMust be provided, and is only applicable, when the subscription item's metering_type is seats.",
            "nullable": true
          },
          "invoice_now": {
            "type": "boolean",
            "description": "Whether to generate an invoice if there are any prorations done.\nMust be provided, and is only applicable, when the subscription item's metering_type is seats and prorate is set to true.\nWhen set to true, an invoice will be generated and we'll attempt to charge the customer. If charging fails, the subscription will\ntransition to past_due state.\nWhen set to false, a prorated invoice item will be created and will be part of the next invoice generated at the start of the next\nbilling period.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItem": {
        "required": [
          "price"
        ],
        "type": "object",
        "properties": {
          "price": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the price to subscribe to.",
            "example": "price_602a8dd0a54847479a874de4"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the price that to subscribed for.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the tax rates which apply to this subscription item.\nWhen set, the default tax rates on the subscription do not apply to this subscription item.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "subi_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "subscription": {
            "type": "string",
            "description": "Identifier of the subscription this subscription item belongs to.",
            "nullable": true,
            "example": "sub_602a8dd0a54847479a874de4"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItemCreateOptions": {
        "required": [
          "price",
          "subscription"
        ],
        "type": "object",
        "properties": {
          "price": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the price to subscribe to.",
            "example": "price_602a8dd0a54847479a874de4"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the price that to subscribed for.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the tax rates which apply to this subscription item.\nWhen set, the default tax rates on the subscription do not apply to this subscription item.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "prorate": {
            "type": "boolean",
            "description": "Whether to generate a proration invoice item that credits remaining unused time until the subscription period end.\nMust be provided, and is only applicable, when the subscription item's metering_type is seats.",
            "nullable": true
          },
          "invoice_now": {
            "type": "boolean",
            "description": "Whether to generate an invoice if there are any prorations done.\nMust be provided, and is only applicable, when the subscription item's metering_type is seats and prorate is set to true.\nWhen set to true, an invoice will be generated and we'll attempt to charge the customer. If charging fails, the subscription will\ntransition to past_due state.\nWhen set to false, a prorated invoice item will be created and will be part of the next invoice generated at the start of the next\nbilling period.",
            "nullable": true
          },
          "subscription": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the subscription to create in.",
            "example": "sub_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItemReportUsageAction": {
        "enum": [
          "increment",
          "decrement",
          "set"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "increment": "Adds the specified quantity to the usage at the specified timestamp/",
          "decrement": "Subtracts the specified quantity to the usage at the specified timestamp.",
          "set": "Overwrites the usage quantity at the specified timestamp."
        }
      },
      "SubscriptionItemReportUsageOptions": {
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "description": "Usage for the specified time.",
            "format": "int64",
            "example": 100
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionItemReportUsageAction"
              }
            ],
            "description": "Use `increment` to add the specified quantity to the usage at the specified timestamp.\nUse `decrement` to subtract the specified quantity to the usage at the specified timestamp.\nUse `set` to overwrite the usage quantity at the specified timestamp.\n<!--\n`set` is not allowed for subscriptions with\n[billing thresholds](/api-reference/subscriptions/object#subscription_object-thresholds).\n-->\n\nDefaults to `increment`."
          },
          "time": {
            "type": "string",
            "description": "The time for the usage event.\nIt must be within the current billing period of the subscription of the provided subscription_item, and must be in past.\nWhen no value is provided, the current server time is used.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItemUpdateOptions": {
        "required": [
          "price"
        ],
        "type": "object",
        "properties": {
          "price": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the price to subscribe to.",
            "example": "price_602a8dd0a54847479a874de4"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the price that to subscribed for.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the tax rates which apply to this subscription item.\nWhen set, the default tax rates on the subscription do not apply to this subscription item.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItemUsage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "sbusg_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "subscription_item": {
            "type": "string",
            "description": "Identifier of the subscription item that this usage record/summary belongs to.",
            "nullable": true,
            "example": "subi_602a8dd0a54847479a874de4"
          },
          "period": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Period"
              }
            ],
            "description": "Time period covered by the usage record.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Usage for the specified period.",
            "format": "int64",
            "example": 100
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "SubscriptionStatus": {
        "enum": [
          "active",
          "paused",
          "cancelled",
          "in_trial",
          "pending",
          "expired",
          "past_due"
        ],
        "type": "string",
        "x-enumDescriptions": {
          "pending": "The subscription is pending to start in the future.",
          "expired": "These are subscriptions that have reached the specified number of billing cycles."
        }
      },
      "SubscriptionTrialOptions": {
        "type": "object",
        "properties": {
          "days": {
            "maximum": 90,
            "minimum": 1,
            "type": "integer",
            "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
            "format": "int32",
            "nullable": true
          },
          "end": {
            "type": "string",
            "description": "Timestamp representing the end of the trial period the customer will get before being charged for the first time",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionUpdateOptions": {
        "type": "object",
        "properties": {
          "coupon": {
            "type": "string",
            "description": "Identifier of the coupon to apply to this subscription.\nA coupon applied to a subscription will only affect invoices created for that particular subscription.",
            "nullable": true,
            "example": "coupon_602a8dd0a54847479a874de4"
          },
          "default_tax_rates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tax rates that will apply to any subscription item that does not have rax rates set.\nInvoices created from this subscription will have their default tax rates populated from here.",
            "nullable": true
          },
          "default_payment_method": {
            "type": "string",
            "description": "Identifier of the default payment method that's attached to the customer associated with the subscription,\nto be used as the default payment method for subscription.\nIf none is set, the customer's default payment method us used.",
            "nullable": true,
            "example": "pm_602a8dd0a54847479a874de4"
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "auto_renew": {
            "type": "boolean",
            "description": "Whether the subscription should auto renew at the end of the current billing period.\nWhen set totrue, the subscription will be advanced to a new billing period.\nWhen set tofalse, the subscription will be cancelled at the end of the current billing period.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxRate": {
        "required": [
          "country",
          "name"
        ],
        "type": "object",
        "properties": {
          "country": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, where the tax rate applies.",
            "format": "country",
            "example": "ken"
          },
          "name": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "The display name of the tax rate, which will be shown to users.",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the tax rate for your use.\nIt will not be visible to your customers.",
            "nullable": true,
            "example": "Effective 01 April 2020"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the tax rate is currently available for new purchase.\nChanging this does not affect existing subscriptions and invoices.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "txr_602a8dd0a54847479a874de4"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "rate": {
            "type": "number",
            "description": "This represents the tax rate as a percentage out of 100.",
            "format": "double",
            "example": 14
          },
          "inclusive": {
            "type": "boolean",
            "description": "This specifies if the tax rate is inclusive or exclusive."
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "TaxRateCreateOptions": {
        "required": [
          "country",
          "inclusive",
          "name",
          "rate"
        ],
        "type": "object",
        "properties": {
          "country": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, where the tax rate applies.",
            "format": "country",
            "example": "ken"
          },
          "name": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "The display name of the tax rate, which will be shown to users.",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the tax rate for your use.\nIt will not be visible to your customers.",
            "nullable": true,
            "example": "Effective 01 April 2020"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the tax rate is currently available for new purchase.\nChanging this does not affect existing subscriptions and invoices.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "rate": {
            "maximum": 100,
            "minimum": 0.01,
            "type": "number",
            "description": "This represents the tax rate as a percentage out of 100.",
            "format": "double",
            "example": 14
          },
          "inclusive": {
            "type": "boolean",
            "description": "This specifies if the tax rate is inclusive or exclusive."
          }
        },
        "additionalProperties": false
      },
      "TaxRateUpdateOptions": {
        "required": [
          "country",
          "name"
        ],
        "type": "object",
        "properties": {
          "country": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO country code](https://www.iso.org/iso-3166-country-codes.html),\nin lowercase, where the tax rate applies.",
            "format": "country",
            "example": "ken"
          },
          "name": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "The display name of the tax rate, which will be shown to users.",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the tax rate for your use.\nIt will not be visible to your customers.",
            "nullable": true,
            "example": "Effective 01 April 2020"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the tax rate is currently available for new purchase.\nChanging this does not affect existing subscriptions and invoices.\nDefaults to true.",
            "default": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemporaryKey": {
        "required": [
          "secret"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "key_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "objects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identifiers of the objects that can be accessed using the key.",
            "nullable": true,
            "example": [
              "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
            ]
          },
          "expires": {
            "type": "string",
            "description": "Time at which the key expires.",
            "format": "date-time",
            "nullable": true
          },
          "secret": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Value provided for authentication secret.",
            "example": "ftkl_1......."
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "TemporaryKeyCreateOptions": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "string",
            "description": "Unique identifier of the customer to be accessed using the key.",
            "nullable": true,
            "example": "cust_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "identity_verification": {
            "type": "string",
            "description": "Unique identifier of the identity verification to be accessed using the key.",
            "nullable": true,
            "example": "idv_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "visit": {
            "type": "string",
            "description": "Unique identifier of the visit to be accessed using the key.",
            "nullable": true,
            "example": "vst_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          }
        },
        "additionalProperties": false
      },
      "TrackedEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "evt_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Type of the event (e.g. money_provider.balance.updated, message.delivered, etc.)."
          },
          "request": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ],
            "description": "Information on the API request that instigated the event.",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventData"
              }
            ],
            "description": "Data associated with the event.",
            "nullable": true
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          }
        },
        "additionalProperties": false
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "tr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of the transfer in smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferStatus"
              }
            ],
            "description": "Status of the transfer."
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "succeeded": {
            "type": "string",
            "description": "Time at which the transfer succeeded. Only populated when successful.",
            "format": "date-time",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the Customer this Transfer belongs to, if one exists.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferType"
              }
            ],
            "description": "Type of the transfer.\nAn additional property is populated on the Transfer with a name matching this value.\nIt contains additional information specific to the Transfer type."
          },
          "purpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferPurpose"
              }
            ],
            "description": "Purpose of the transfer."
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferMpesaDetails"
              }
            ],
            "description": "If this is an MPESA transfer, this contains details about the MPESA transfer.",
            "nullable": true
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferError"
              }
            ],
            "description": "Details on the transfer error.\nPresent when in failed state.",
            "nullable": true
          },
          "transfer_reversal": {
            "type": "string",
            "description": "Identifier of the transfer reversal, if the transfer has been reversed.",
            "nullable": true,
            "example": "trr_602a8dd0a54847479a874de4"
          },
          "money_provider": {
            "type": "string",
            "description": "Identifier of the money provider used to send the money.",
            "nullable": true,
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a transfer."
      },
      "TransferCreateOptions": {
        "required": [
          "amount",
          "currency",
          "purpose"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "amount": {
            "minimum": 1,
            "type": "integer",
            "description": "Amount of the payment in smallest currency unit.",
            "format": "int64",
            "example": 1000
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "example": "kes"
          },
          "purpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferPurpose"
              }
            ],
            "description": "Purpose of the transfer."
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferCreateOptionsMpesa"
              }
            ],
            "description": "Details about initiation of an MPESA transfer to a customer or another business.",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the Customer this Transfer belongs to, if one exists.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          }
        },
        "additionalProperties": false
      },
      "TransferCreateOptionsMpesa": {
        "type": "object",
        "properties": {
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferCreateOptionsMpesaToCustomer"
              }
            ],
            "description": "Details about initiation of an MPESA payment to customer.\nThis is also referred to as a Business To Customer (B2C) transfer.",
            "nullable": true
          },
          "business": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferCreateOptionsMpesaToBusiness"
              }
            ],
            "description": "Details about initiation of an MPESA payment to another business.\nThis is also referred to as a Business To Business (B2B) transfer.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferCreateOptionsMpesaToBusiness": {
        "required": [
          "destination",
          "source"
        ],
        "type": "object",
        "properties": {
          "source": {
            "maxLength": 7,
            "minLength": 5,
            "type": "string",
            "description": "The business short code to be debited.\nThe movement of funds between the respective short codes must be allowed.",
            "example": "200200"
          },
          "destination": {
            "maxLength": 7,
            "minLength": 5,
            "type": "string",
            "description": "The business short code to be credited.\nThe movement of funds between the respective short codes must be allowed.",
            "example": "200210"
          }
        },
        "additionalProperties": false
      },
      "TransferCreateOptionsMpesaToCustomer": {
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "source": {
            "maxLength": 7,
            "type": "string",
            "description": "The business short code to be debited.\nThis code must be configured in the workspace.\nWhen not provided, either the default outgoing business code\nor the first business code for the workspace is used.",
            "nullable": true,
            "example": "200200"
          },
          "phone": {
            "minLength": 1,
            "type": "string",
            "description": "Phone number to which the money is to be sent, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
            "format": "tel",
            "example": "+254722000000",
            "x-pii": true
          }
        },
        "additionalProperties": false,
        "x-pii": [
          "phone"
        ]
      },
      "TransferError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FailureReason"
              }
            ],
            "description": "Reason for failure of a payment, transfer or reversal."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false,
        "description": "Details about failure of a transfer."
      },
      "TransferMpesaDetails": {
        "type": "object",
        "properties": {
          "business_short_code": {
            "type": "string",
            "description": "The target MPESA business short code.",
            "nullable": true,
            "example": "200200"
          },
          "request_id": {
            "type": "string",
            "description": "Unique identifier for request as issued by MPESA.\nOnly populated for flows that initiate the transaction instead of MPESA.\nThe value is only available after the request is sent to MPESA.\n\n\nThis is also referred to as the `ConversationId`.",
            "nullable": true,
            "example": "AG_20210803_000041754cc615312171"
          },
          "receipt": {
            "type": "string",
            "description": "Unique transaction identifier generated by MPESA.\nOnly populated for completed transactions.",
            "nullable": true,
            "example": "PGV520PUFN"
          },
          "destination": {
            "type": "string",
            "description": "Destination of where the transfer is/was sent to.",
            "nullable": true,
            "x-pii": true
          },
          "charges": {
            "type": "integer",
            "description": "Charges for the transaction in the smallest currency unit.",
            "format": "int64",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "Details of the receiver.",
            "nullable": true,
            "example": "254722000000 - JOHN KAMAU ONYANGO",
            "x-pii": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the provider details for an MPESA transfer.",
        "x-pii": [
          "destination",
          "receiver"
        ]
      },
      "TransferPurpose": {
        "enum": [
          "business",
          "salary",
          "promotion"
        ],
        "type": "string",
        "description": "The purpose of a transfer."
      },
      "TransferReversal": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "trr_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "amount": {
            "type": "integer",
            "description": "Amount reversed in smallest currency unit.",
            "format": "int64"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\nin lowercase.",
            "format": "currency",
            "nullable": true,
            "example": "kes"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferReversalReason"
              }
            ],
            "description": "Reason for the reversal."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferReversalStatus"
              }
            ],
            "description": "Status of the reversal."
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "succeeded": {
            "type": "string",
            "description": "Time at which the reversal succeeded. Only populated when successful.",
            "format": "date-time",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Identifier of the Customer this Transfer Reversal belongs to, if one exists.",
            "nullable": true,
            "example": "cust_602a8dd0a54847479a874de4"
          },
          "transfer": {
            "type": "string",
            "description": "Identifier of the transfer reversed.",
            "nullable": true,
            "example": "tr_602a8dd0a54847479a874de4"
          },
          "money_provider": {
            "type": "string",
            "description": "Identifier of the money provider used send to money being reversed.",
            "nullable": true,
            "example": "mprov_602a8dd0a54847479a874de4"
          },
          "mpesa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferReversalMpesaDetails"
              }
            ],
            "description": "Details of the reversal if done via MPESA.\nOnly populated if the transfer being reversed used an MPESA instrument.",
            "nullable": true
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferReversalError"
              }
            ],
            "description": "Details on the transfer reversal error.\nPresent when in failed state.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false,
        "description": "Represents a reversal for a transfer."
      },
      "TransferReversalCreateOptions": {
        "required": [
          "reason",
          "transfer"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "transfer": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the Transfer to reverse.",
            "example": "tr_602a8dd0a54847479a874de4"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransferReversalReason"
              }
            ],
            "description": "Reason for the reversal."
          }
        },
        "additionalProperties": false
      },
      "TransferReversalError": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FailureReason"
              }
            ],
            "description": "Reason for failure of a payment, transfer or reversal."
          },
          "timestamp": {
            "type": "string",
            "description": "Time at which failure occurred, if any.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A human-readable message giving the reason for the failure.\nThis message can be shown to your user.",
            "nullable": true,
            "example": "Declined due to limit rule: less than the minimum transaction amount."
          }
        },
        "additionalProperties": false,
        "description": "Details about failure of a transfer reversal."
      },
      "TransferReversalMpesaDetails": {
        "type": "object",
        "properties": {
          "business_short_code": {
            "type": "string",
            "description": "The target MPESA business short code.",
            "nullable": true,
            "example": "200200"
          },
          "request_id": {
            "type": "string",
            "description": "Unique identifier for request as issued by MPESA.\nOnly populated for flows that initiate the transaction instead of MPESA.\nThe value is only available after the request is sent to MPESA.\n\n\nThis is also referred to as the `ConversationId`.",
            "nullable": true,
            "example": "AG_20210803_000041754cc615312171"
          },
          "receipt": {
            "type": "string",
            "description": "Unique transaction identifier generated by MPESA.\nOnly populated for completed transactions.",
            "nullable": true,
            "example": "PGV520PUFN"
          }
        },
        "additionalProperties": false,
        "description": "Represents the details for an MPESA transfer reversal."
      },
      "TransferReversalReason": {
        "enum": [
          "duplicate",
          "fraudulent",
          "customer_requested",
          "other"
        ],
        "type": "string",
        "description": "The reason for reversing a transfer."
      },
      "TransferReversalStatus": {
        "enum": [
          "pending",
          "in_transit",
          "succeeded",
          "failed"
        ],
        "type": "string",
        "description": "The status of a transfer reversal."
      },
      "TransferReversalUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a transfer reversal."
      },
      "TransferStatus": {
        "enum": [
          "pending",
          "in_transit",
          "succeeded",
          "failed"
        ],
        "type": "string",
        "description": "The status of a transfer."
      },
      "TransferType": {
        "enum": [
          "mpesa"
        ],
        "type": "string",
        "description": "The medium used for the transfer."
      },
      "TransferUpdateOptions": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details that can be patched in a transfer."
      },
      "UpcomingInvoiceOptions": {
        "required": [
          "subscription"
        ],
        "type": "object",
        "properties": {
          "subscription": {
            "minLength": 1,
            "type": "string",
            "description": "Filter options for `subscription` property."
          }
        },
        "additionalProperties": false,
        "description": "Options for upcoming invoices."
      },
      "UserConsent": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Time at which the user gave consent.",
            "format": "date-time"
          },
          "ip": {
            "type": "string",
            "description": "IP address from which the user gave consent.",
            "format": "ip-address",
            "nullable": true,
            "example": "::ffff:127.0.0.1"
          },
          "user_agent": {
            "type": "string",
            "description": "User agent of the device (e.g. browser) from which the user gave consent.",
            "nullable": true,
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"
          }
        },
        "additionalProperties": false,
        "description": "Represents details about user content for a process or anything really."
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member is not present, its value is assumed to be \"about:blank\".",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC9110], Section 3.4).",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code ([RFC9110], Section 6) generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The validation errors associated with this instance.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "An identifier to correlate the request between the client and the server",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The documentation URL containing more information about the error.",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "externalDocs": {
          "description": "Problem Details Documentation (RFC 7807)",
          "url": "https://tools.ietf.org/html/rfc7807"
        },
        "example": {
          "type": "https://docs.falu.io/error-codes#invalid_settings",
          "title": "Bad Request",
          "status": 400,
          "traceId": "00-982607166a542147b435be3a847ddd71-fc75498eb9f09d48-00",
          "errors": {
            "property1": [
              "The property field is required"
            ]
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "wh_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Type of the event (e.g. money_provider.balance.updated, message.delivered, etc.)."
          },
          "event": {
            "type": "string",
            "description": "Unique identifier for the event.",
            "nullable": true,
            "example": "evt_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "endpoint": {
            "type": "string",
            "description": "Unique identifier for the endpoint.",
            "nullable": true,
            "example": "we_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "attempts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookDeliveryAttempt"
            },
            "description": "Attempts made in this webhook.",
            "nullable": true
          },
          "next": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookNextAttempt"
              }
            ],
            "description": "Next attempt scheduled for this webhook, if any.",
            "nullable": true
          },
          "redaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRedaction"
              }
            ],
            "description": "Redaction information of this object.\nIf the object is not redacted, this field will be null.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "WebhookDeliveryAttempt": {
        "type": "object",
        "properties": {
          "manual": {
            "type": "boolean",
            "description": "Indicates if this attempt was automatic or manually triggered via dashboard or CLI.",
            "example": false
          },
          "url": {
            "type": "string",
            "description": "The URL to which the delivery was made.",
            "format": "uri",
            "nullable": true,
            "example": "https://example.com"
          },
          "attempted": {
            "type": "string",
            "description": "Time at which the attempt was made.",
            "format": "date-time"
          },
          "request": {
            "type": "string",
            "description": "The raw request body sent for this delivery to the `url`.",
            "nullable": true
          },
          "code": {
            "type": "integer",
            "description": "The Status Code returned in the HTTP request delivery for this attempt",
            "format": "int32",
            "example": 200
          },
          "response": {
            "type": "string",
            "description": "The raw response body received.",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "The amount of time taken to receive the response in milliseconds",
            "format": "int64",
            "example": 180
          },
          "successful": {
            "type": "boolean",
            "description": "The status of the delivery attempt."
          }
        },
        "additionalProperties": false
      },
      "WebhookEndpoint": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "events": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventType"
            },
            "description": "The list of events this endpoint accepts."
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookEndpointStatus"
              }
            ],
            "description": "The status of the webhook."
          },
          "url": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the webhook endpoint.",
            "format": "uri",
            "example": "https://example.com"
          },
          "token": {
            "maxLength": 512,
            "pattern": "^[a-zA-Z0-9+=/.-_~]+$",
            "type": "string",
            "description": "The access token to be sent in the\n[Authorization](https://tools.ietf.org/html/rfc7235#section-4.2)\nrequest header field defined by HTTP/1.1.\nThis value is populated using the \"Bearer\" scheme, using the OAuth 2.0 Bearer Token\n[RFC6750](https://tools.ietf.org/html/rfc6750) spec.\n\n\nWhen not present, the Authorization request header is not populated.",
            "format": "password",
            "nullable": true,
            "example": "mF_9.B5f-4.1JqM"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true,
            "example": "we_0o5Fs0EELR0fUjHjbCnEtdUwQe3"
          },
          "created": {
            "type": "string",
            "description": "Time at which the object was created.",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Time at which the object was last updated.",
            "format": "date-time"
          },
          "secret": {
            "type": "string",
            "description": "The full value is only returned at creation.\nOtherwise, a secured value is returned.\nFor example: `fwhs_e0gNHBa90CfdKbtcWgksn52cvXoXMqCTaL` would be\nreturned in full on creation. However, subsequent times like read/get/update,\nwould return either `null` or `fwhs_e0gNHBa***************************`.",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "description": "Unique identifier for the workspace that the object belongs to.",
            "nullable": true,
            "example": "wksp_602a8dd0a54847479a874de4"
          },
          "live": {
            "type": "boolean",
            "description": "Indicates if this object belongs in the live environment"
          },
          "etag": {
            "type": "string",
            "description": "A value that validates concurrent access of this object when stored in the database.\nThis value changes with every update and can thus be used to track changes.",
            "example": "FL9rRnlW2Qg="
          }
        },
        "additionalProperties": false
      },
      "WebhookEndpointCreateOptions": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "events": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventType"
            },
            "description": "The list of events this endpoint accepts."
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookEndpointStatus"
              }
            ],
            "description": "The status of the webhook."
          },
          "url": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the webhook endpoint.",
            "format": "uri",
            "example": "https://example.com"
          },
          "token": {
            "maxLength": 512,
            "pattern": "^[a-zA-Z0-9+=/.-_~]+$",
            "type": "string",
            "description": "The access token to be sent in the\n[Authorization](https://tools.ietf.org/html/rfc7235#section-4.2)\nrequest header field defined by HTTP/1.1.\nThis value is populated using the \"Bearer\" scheme, using the OAuth 2.0 Bearer Token\n[RFC6750](https://tools.ietf.org/html/rfc6750) spec.\n\n\nWhen not present, the Authorization request header is not populated.",
            "format": "password",
            "nullable": true,
            "example": "mF_9.B5f-4.1JqM"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookEndpointStatus": {
        "enum": [
          "enabled",
          "disabled"
        ],
        "type": "string",
        "description": "The active status of a Webhook",
        "x-enumDescriptions": {
          "enabled": "Endpoint will receive events it is configured for.",
          "disabled": "Endpoint will not receive any events."
        }
      },
      "WebhookEndpointUpdateOptions": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "events": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventType"
            },
            "description": "The list of events this endpoint accepts."
          },
          "description": {
            "type": "string",
            "description": "An optional arbitrary string attached to the object.\nMainly used to describe the object and often useful for displaying to users.",
            "nullable": true,
            "example": "This is for my reference"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookEndpointStatus"
              }
            ],
            "description": "The status of the webhook."
          },
          "url": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the webhook endpoint.",
            "format": "uri",
            "example": "https://example.com"
          },
          "token": {
            "maxLength": 512,
            "pattern": "^[a-zA-Z0-9+=/.-_~]+$",
            "type": "string",
            "description": "The access token to be sent in the\n[Authorization](https://tools.ietf.org/html/rfc7235#section-4.2)\nrequest header field defined by HTTP/1.1.\nThis value is populated using the \"Bearer\" scheme, using the OAuth 2.0 Bearer Token\n[RFC6750](https://tools.ietf.org/html/rfc6750) spec.\n\n\nWhen not present, the Authorization request header is not populated.",
            "format": "password",
            "nullable": true,
            "example": "mF_9.B5f-4.1JqM"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful\nfor storing additional information about the object in a structured format.\nThe key can only contain alphanumeric, and ‘-’, ‘_’ characters,\nand the string has to start with a letter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookNextAttempt": {
        "type": "object",
        "properties": {
          "scheduled": {
            "type": "string",
            "description": "Time at which the attempt is scheduled to be made.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WebhookPayload": {
        "type": "object",
        "properties": {
          "object": {
            "type": "object",
            "additionalProperties": {},
            "description": "Object containing the API resource relevant to the event.\nFor example, a `money_provider.balance.updated` event will have a full payment balances object.",
            "nullable": true
          },
          "previous": {
            "type": "object",
            "additionalProperties": {},
            "description": "Object containing the names of the properties that have changed, and their previous\nvalues (sent along only with `*.updated` events).",
            "nullable": true
          },
          "request": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ],
            "description": "Information on the API request that instigated the event.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "specversion": "1.0",
          "id": "evt_602a8dd0a54847479a874de4",
          "time": "2022-01-19T11:17:57.2260000+00:00",
          "source": "https://dashboard.falu.io/wksp_602a8dd0a54847479a874de4/events/evt_602a8dd0a54847479a874de4",
          "type": "io.falu.money_provider.balance.updated",
          "datacontenttype": "application/json",
          "workspace": "wksp_602a8dd0a54847479a874de4",
          "live": false,
          "data": {
            "object": {
              "id": "mprov_0o5Fs0EELR0fUjHjbCnEtdUwQe3",
              "amount": 1030890
            },
            "previous": {
              "id": "mprov_0o5Fs0EELR0fUjHjbCnEtdUwQe3",
              "amount": 11050
            },
            "request": {
              "id": "req_0o5Fs0EELR0fUjHjbCnEtdUwQe3",
              "idempotency_key": "9d4d4045-d581-47fe-acfe-c7d000dc90d2"
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "The request is invalid, see response for more details.",
        "headers": {
          "X-Trace-Id": {
            "$ref": "#/components/headers/X-Trace-Id"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/X-Request-Id"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationProblemDetails"
            }
          }
        }
      },
      "401": {
        "description": "The request is not authenticated",
        "headers": {
          "X-Trace-Id": {
            "$ref": "#/components/headers/X-Trace-Id"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/X-Request-Id"
          },
          "WWW-Authenticate": {
            "description": "The reason why authentication failed",
            "schema": {
              "type": "string"
            },
            "example": "ApiKey error=\"invalid_token\""
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "headers": {
          "X-Trace-Id": {
            "$ref": "#/components/headers/X-Trace-Id"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/X-Request-Id"
          }
        }
      }
    },
    "parameters": {
      "X-Falu-Signature": {
        "name": "X-Falu-Signature",
        "in": "header",
        "description": "A signature used to check the integrity of the webhook event request. See [docs](/developers/webhooks/signatures) for more information.",
        "schema": {
          "type": "string"
        },
        "example": "t=1599629923,sha256=be82575aba7e8790c00f92f8200b9464bab59ef6ccce224351ecd5c9f94d8584"
      },
      "X-Falu-Version": {
        "name": "X-Falu-Version",
        "in": "header",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiVersion"
        }
      }
    },
    "requestBodies": {
      "WebhookPayload": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WebhookPayload"
            }
          }
        }
      }
    },
    "headers": {
      "X-Continuation-Token": {
        "description": "A value used to determine the starting point of a subsequent request. This value is present if there is more data that to be pulled.\nIf you include this value in a subsequent request, be sure to pass the original URI on the request. For example, if you have specified a filter or `count` option as part of the original request, you will want to include that option on subsequent requests. Otherwise your subsequent requests may return unexpected results.",
        "schema": {
          "type": "string",
          "format": "opaque"
        },
        "example": "CfDJ8...cfQJa2knfZsUA5...pZn_xJNMS5Z...YEU6xbOCw"
      },
      "X-Request-Id": {
        "description": "Used to uniquely identify the HTTP request in logs.",
        "schema": {
          "type": "string"
        },
        "example": "req_602a8dd0a54847479a874de4"
      },
      "X-Trace-Id": {
        "description": "Used to uniquely identify the HTTP request. This ID is used to correlate the HTTP request between a client and server.",
        "schema": {
          "type": "string"
        },
        "example": "00-982607166a542147b435be3a847ddd71-fc75498eb9f09d48-00"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "description": "Basic HTTP authentication. Expected header format: `Authorization: Basic <api_key>` or `Authorization: Basic base64('<api_key>:')`",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "description": "Bearer HTTP authentication. Expected header format: `Authorization: Bearer <api_key>`",
        "scheme": "bearer",
        "bearerFormat": "auth-scheme"
      }
    },
    "callbacks": {
      "Webhook": {
        "https://your-server-url": {
          "post": {
            "summary": "Webhook notification",
            "description": "Webhook notifications are based on standardized events as governed by the [Cloud Native Computing Foundation (CNCF)](https://cncf.io/).For more information see the [Cloud Events website](https://cloudevents.io/) and the [official spec](https://github.com/cloudevents/spec)",
            "operationId": "webhook-notification",
            "parameters": [
              {
                "$ref": "#/components/parameters/X-Falu-Signature"
              }
            ],
            "requestBody": {
              "$ref": "#/components/requestBodies/WebhookPayload"
            },
            "responses": {
              "200": {
                "description": "Your server implementation should return this HTTP status code if the data was received successfully"
              },
              "400": {
                "description": "Your server implementation should return the 4xx range of HTTP status codes to indicate it does not understand the format of the payload. The delivery will be treated as a failure and no retries are attempted."
              },
              "500": {
                "description": "Your server implementation should return the 5xx range of HTTP status codes to indicate a server-side error. The delivery will be treated as a failure retries shall be attempted."
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Coupons",
      "description": "A coupon contains information about a percent-off or amount-off discount you might want to apply for your customers.\nThey may be applied to [Subscriptions](#billing/subscriptions), [Invoices](#billing/invoices), and more.\nHowever, they do not work with one-off transactions such as [Payments](#money/payments) and [Transfers](#money/transfers).",
      "x-object-schema": {
        "name": "Coupon",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Coupon"
            }
          ]
        }
      }
    },
    {
      "name": "Credit Notes",
      "description": "Credit notes are used to adjust an invoice's amount after the invoice is finalized (not in draft mode).",
      "x-object-schema": {
        "name": "Credit Note",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CreditNote"
            }
          ]
        }
      }
    },
    {
      "name": "Customer Balance Transactions",
      "description": "This object represents the balance transactions related to a Customer(#billing/customers). These balances can be used to\nissue credit or debit adjustments. Adjustments in the credit balance could be a credit (meaning you owe them money)\nor a debit (meaning they owe you money). The adjustments can then apply to future [Invoices](#billing/invoices).",
      "x-object-schema": {
        "name": "Customer Balance Transaction",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CustomerBalanceTransaction"
            }
          ]
        }
      }
    },
    {
      "name": "Customer Tax Ids",
      "description": "This object represents the tax ids related to a Customer(#billing/customers).",
      "x-object-schema": {
        "name": "Customer Tax Id",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CustomerTaxId"
            }
          ]
        }
      }
    },
    {
      "name": "Customers",
      "description": "This object represents a customer of your business.\nIt lets you track payments, transfers, subscriptions, and messages that belong to the same customer.",
      "x-object-schema": {
        "name": "Customer",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Customer"
            }
          ]
        }
      }
    },
    {
      "name": "Discounts",
      "description": "A discount represents the actual application of a [Coupon](#billing/coupons).\nIt contains information about when the discount began, when it will end, and what it is applied to.",
      "x-object-schema": {
        "name": "Discount",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Discount"
            }
          ]
        }
      }
    },
    {
      "name": "Events",
      "description": "Events are our way of letting you know when something interesting happens in your\nworkspace. When an interesting events occurs, we create a new `Event` object. For\nexample, when a payment succeeds, we create a `payment.succeeded` event; and when\na message delivery fails, we create an `message.failed` event. Note that many API\nrequests may cause multiple events to be created. For example, if you create a new\nmessage, you will receive both a `message.sent` event and either a `message.failed`\nor `message.delivered` event.\n\nEvents occur when the state of another API resource changes. The state of that resource\nat the time of the change is embedded in the event's data field. For example, a\n`message.sent` event will contain a message, and a `payment.failed` event will contain\na payment.\n\nAs with other API resources, you can use endpoints to retrieve an\n[individual event](#events_get_event) or a [list of events](#events_get_events) from\nthe API. We also have a separate [webhooks](https://en.wikipedia.org/wiki/Webhook) API\nfor sending the `Event` objects directly to an endpoint on your server. Webhooks are\nmanaged in your [workspace](https://dashboard.falu.io/webhooks), and our\n[Using Webhooks](/developers/webhooks) guide will help you get setup.\n\n**NOTE:** Access to events through the [Retrieve Event API](#events_get_event)\nis guaranteed only for the last 30 days.",
      "x-object-schema": {
        "name": "Tracked Event",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/TrackedEvent"
            }
          ]
        }
      }
    },
    {
      "name": "File Links",
      "description": "To share the contents of an `File` object with non-Falu users, you can create an `FileLink`.\nIt contains a URL that can be used to retrieve the contents of the file without authentication.",
      "x-object-schema": {
        "name": "File Link",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/FileLink"
            }
          ]
        }
      }
    },
    {
      "name": "Files",
      "description": "This is an object representing a file hosted on Falu's servers.\nThe file may have been uploaded by yourself using the [create file](#files_post_file)\nrequest (for example, when uploading an identity document) or it may have been created by Falu\n(for example, a statement of accounts).",
      "externalDocs": {
        "description": "Files",
        "url": "/files",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "File",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/File"
            }
          ]
        }
      }
    },
    {
      "name": "Identity Verification Reports",
      "description": "An `IdentityVerificationReport` is the result of an attempt to collect and verify data from a user.\nYou can find the result of each verification check performed in the appropriate node: `document`, `id_number`, `tax_number`.\n\nEach `IdentityVerificationReport` contains a copy of any data collected by the user as well as reference identifiers\nwhich can be used to access collected images.\nIdentityVerificationReports are created automatically via the [IdentityVerification API](#identity_identity_verifications).",
      "externalDocs": {
        "description": "Accessing verification results",
        "url": "/identity/verifications#results",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Identity Verification Report",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IdentityVerificationReport"
            }
          ]
        }
      }
    },
    {
      "name": "Identity Verifications",
      "description": "An IdentityVerification guides you through the process of collecting and verifying the identities of your users.\nIt contains details such as what [verification check](/identity/verification-checks) to perform.\nOnly create one IdentityVerification for each verification in your system.\n\nAn IdentityVerification transitions through [multiple statuses](/identity/how-verifications-work) throughout\nits lifetime as it progresses through the verification flow. The IdentityVerification contains the user’s\nverified data after verification checks are complete.",
      "externalDocs": {
        "description": "Using Identity Verifications API",
        "url": "/identity/verifications",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Identity Verification",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IdentityVerification"
            }
          ]
        }
      }
    },
    {
      "name": "Invoice Items",
      "description": "Invoice items represent the component lines of an invoice.",
      "x-object-schema": {
        "name": "Invoice Item",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/InvoiceItem"
            }
          ]
        }
      }
    },
    {
      "name": "Invoices",
      "description": "Invoices are statements of amounts owed by a customer, and are either generated one-off, or generated periodically from a subscription.\n\nThey contain invoice items, and proration adjustments that may be caused by subscription upgrades/downgrades (if necessary).",
      "x-object-schema": {
        "name": "Invoice",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Invoice"
            }
          ]
        }
      }
    },
    {
      "name": "Message Batches",
      "description": "To send multiple messages you create a `MessageBatch` object. You can retrieve,\ncancel, redact individual messages or the message batch.\n\nFalu supports sending messages or various types and destinations\nas described in the message types [guide](/messages/types)\n\n`MessageBatch` objects expire after 45 days alongside the `Message` objects managed\nby it, after which they are forcefully purged from all our records.",
      "externalDocs": {
        "description": "Using batches to send messages",
        "url": "/messages/batches",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Message Batch",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MessageBatch"
            }
          ]
        }
      }
    },
    {
      "name": "Message Senders",
      "description": "A `MessageSender` object is a representation of a resource that you use\nto send messages for branding purposes.\n\nThis is usually an alphanumeric or numeric-only code that identifies\nyour business or its units to your customers.",
      "externalDocs": {
        "description": "Send branded messages",
        "url": "/messages/senders",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Message Sender",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MessageSender"
            }
          ]
        }
      }
    },
    {
      "name": "Message Streams",
      "description": "A `MessageStream` object allows you to manage the different kinds of messages\nthat you send or received in your workspace. You may have up to 10 streams in\nyour workspace, including the default ones. Default streams cannot be deleted.\n\n`MessageStream` objects help you categorize your messages into multiple categories\nand also allows us to maintain high delivery rates for transactional messages.\nThe messages sent via transactional streams are closely monitored to prevent abuse.",
      "externalDocs": {
        "description": "Sending messages using streams",
        "url": "/messages/streams",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Message Stream",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MessageStream"
            }
          ]
        }
      }
    },
    {
      "name": "Message Suppressions",
      "description": "A `MessageSuppression` object allows you to manage the phone number destinations\nthat are not currently active for sending to.",
      "externalDocs": {
        "description": "Working with message suppressions",
        "url": "/messages/suppressions",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Message Suppression",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MessageSuppression"
            }
          ]
        }
      }
    },
    {
      "name": "Message Templates",
      "description": "To separate the concerns in sending messages and deciding the message content,\nuse a `MessageTemplate` object. In most setups, the message content is designed\nand evolved by the marketing and operations teams whereas, the actual message\nsending is done by the developers. Message templates help reduce the friction.\n\n`MessageTemplate` objects can also be used to maintain messages in different\nlanguages/regions with much less technical debt in your system.",
      "externalDocs": {
        "description": "Working with message templates",
        "url": "/messages/templates",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Message Template",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MessageTemplate"
            }
          ]
        }
      }
    },
    {
      "name": "Messages",
      "description": "To send a message you create a `Message` object. You can retrieve and\nredact individual messages as well as list messages.\n\nFalu supports sending messages or various types and destinations\nas described in the message types [guide](/messages/types)\n\n`Message` objects can also be created if your workspace supports messages\nfrom customers to your business. These are referred to inbound messages.\n\n`Message` objects expire after 45 days, after which they are forcefully\npurged from all our records.",
      "externalDocs": {
        "description": "Sending messages to your audiences",
        "url": "/messages",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Message",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Message"
            }
          ]
        }
      }
    },
    {
      "name": "Money Balances",
      "description": "Money balances are a reflection of the money available in bring-your-own provider setups.\nFor fully managed ones, check the workspace balance.",
      "x-object-schema": {
        "name": "Money Balances",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MoneyBalances"
            }
          ]
        }
      }
    },
    {
      "name": "Payment Authorizations",
      "description": "When a payment provider supports customer initiated payments and a customer initiates\na payment, a Payment `Authorization` object is created.\n[Authorizations](/payments/authorizations) must be approved for the payment to\nbe completed successfully.",
      "externalDocs": {
        "description": "Accepting a Payment with the Payment Authorizations API",
        "url": "/payments/authorizations",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Payment Authorization",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaymentAuthorization"
            }
          ]
        }
      }
    },
    {
      "name": "Payment Methods",
      "description": "`PaymentMethod` objects represent your customer's payment instruments.\nYou can use them to collect payments or attach them to customer objects to store instrument details for future payments.",
      "x-object-schema": {
        "name": "Payment Method",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          ]
        }
      }
    },
    {
      "name": "Payment Refunds",
      "description": "`PaymentRefund` object allows you to refund a payment that has been previously been\ncreated but not yet refunded. Funds will be refunded to the payment instrument\nthat was originally charged. Some payment providers have a time window after which\nrefunds cannot happen. In this case you can initiate a `Transfer` to the\ncustomer with the appropriate amount.",
      "externalDocs": {
        "description": "Refunding Payments",
        "url": "/payments#refunds",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Payment Refund",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaymentRefund"
            }
          ]
        }
      }
    },
    {
      "name": "Payments",
      "description": "To initiate a payment from a customer, you create a `Payment` object. You can retrieve\nand refund individual payments as well as a list all payments.\n\n`Payment` objects can also be created if your workspace supports payment providers that\nallow customers to initiate the payments such as MPESA and EFT/RTGS. In this case, the\nprovider may require you to authorize the payment before it is completed. Our\n[Working with Payment Authorizations](/payments/authorizations) guide will help\nyou get setup.",
      "externalDocs": {
        "description": "Accepting Payments",
        "url": "/payments",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Payment",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Payment"
            }
          ]
        }
      }
    },
    {
      "name": "Prices",
      "description": "Prices define the unit cost, currency, and billing cycle (if any) for both recurring and one-time purchases of products.",
      "x-object-schema": {
        "name": "Price",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Price"
            }
          ]
        }
      }
    },
    {
      "name": "Products",
      "description": "Subscriptions allow you to bill a customer on a recurring basis per unit, seat or based on usage.",
      "x-object-schema": {
        "name": "Product",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Product"
            }
          ]
        }
      }
    },
    {
      "name": "Subscription Items",
      "description": "Subscription items allow you to create customer subscriptions with more than one plan, making it easy to represent complex billing relationships.",
      "x-object-schema": {
        "name": "Subscription Item",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/SubscriptionItem"
            }
          ]
        }
      }
    },
    {
      "name": "Subscription Usage",
      "description": "Subscription usage records allow you to report customer usage for metered billing of subscription prices.",
      "x-object-schema": {
        "name": "Subscription Item Usage",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/SubscriptionItemUsage"
            }
          ]
        }
      }
    },
    {
      "name": "Subscriptions",
      "description": "Subscriptions allow you to bill a customer on a recurring basis per unit, seat or based on usage.",
      "x-object-schema": {
        "name": "Subscription",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Subscription"
            }
          ]
        }
      }
    },
    {
      "name": "Tax Rates",
      "description": "Tax rates can be applied to invoices and subscriptions to collect tax.",
      "x-object-schema": {
        "name": "Tax Rate",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/TaxRate"
            }
          ]
        }
      }
    },
    {
      "name": "Temporary Keys",
      "description": "A temporary key is a special kind of API key but its is valid for 1 hour from the creation time\nand restricted to a specific object.",
      "x-object-schema": {
        "name": "Temporary Key",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/TemporaryKey"
            }
          ]
        }
      }
    },
    {
      "name": "Transfer Reversals",
      "description": "`TransferReversal` object allows you to reverse a transfer that has been previously\ncreated but not yet reversed. Funds will be refunded your workspace.\n\n**NOTE:** Some providers have a time windows after which reversals cannot happen.",
      "externalDocs": {
        "description": "Reversing Transfers",
        "url": "/transfers#reversing-a-transfer",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Transfer Reversal",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/TransferReversal"
            }
          ]
        }
      }
    },
    {
      "name": "Transfers",
      "description": "A `Transfer` object is created when you move money from your business either to another\nbusiness or to a customer.",
      "externalDocs": {
        "description": "Creating fund transfers",
        "url": "/transfers",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Transfer",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Transfer"
            }
          ]
        }
      }
    },
    {
      "name": "Webhook Endpoints",
      "description": "You can configure [webhook endpoints](/developers/webhooks) via the API to be notified about events that happen in your Falu workspace.\n\nMost users configure webhooks from [the dashboard](https://dashboard.falu.io/webhooks),\nwhich provides a user interface to registering and testing your webhook endpoints.",
      "externalDocs": {
        "description": "Setting up Webhooks",
        "url": "/developers/webhooks/go-live",
        "x-kind": "guide"
      },
      "x-object-schema": {
        "name": "Webhook Endpoint",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/WebhookEndpoint"
            }
          ]
        }
      }
    },
    {
      "name": "Webhooks",
      "description": "Every time an event is generated and there is an enabled webhook endpoint for the event type,\nFalu server generate a `Webhook` which represents the delivery of the event to the given webhook.\nIt contains the delivery history and can be retried if failed.",
      "x-object-schema": {
        "name": "Webhook",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Webhook"
            }
          ]
        }
      }
    }
  ],
  "x-tagGroups": [
    {
      "name": "Identity",
      "tags": [
        "Identity Verifications",
        "Identity Verification Reports"
      ]
    },
    {
      "name": "Messages",
      "tags": [
        "Messages",
        "Message Batches",
        "Message Streams",
        "Message Senders",
        "Message Suppressions",
        "Message Templates"
      ]
    },
    {
      "name": "Money",
      "tags": [
        "Money Balances",
        "Payments",
        "Payment Authorizations",
        "Payment Refunds",
        "Transfers",
        "Transfer Reversals"
      ]
    },
    {
      "name": "Files",
      "tags": [
        "Files",
        "File Links"
      ]
    },
    {
      "name": "Events",
      "tags": [
        "Events",
        "Webhook Endpoints",
        "Webhooks"
      ]
    },
    {
      "name": "Customers",
      "tags": [
        "Customers"
      ]
    },
    {
      "name": "Billing",
      "tags": [
        "Products",
        "Prices",
        "Coupons",
        "Tax Rates",
        "Customer Balance Transactions",
        "Customer Tax Ids",
        "Subscriptions",
        "Subscription Items",
        "Subscription Usage",
        "Discounts",
        "Invoices",
        "Invoice Items",
        "Credit Notes"
      ]
    }
  ]
}